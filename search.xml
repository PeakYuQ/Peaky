<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>日迹</title>
      <link href="/peaky/2022/04/09/1e5d734c.html"/>
      <url>/peaky/2022/04/09/1e5d734c.html</url>
      
        <content type="html"><![CDATA[<h3 id="日迹"><a href="#日迹" class="headerlink" title="日迹"></a>日迹</h3><h4 id="2022年4月9日"><a href="#2022年4月9日" class="headerlink" title="2022年4月9日"></a>2022年4月9日</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dailyCheckIn 脚本 [<span class="string">脚本</span>](<span class="link">https://sitoi.github.io/dailycheckin/</span>)</span><br><span class="line"></span><br><span class="line">JSON文件格式化 [<span class="string">JSON文件格式化</span>](<span class="link">https://www.json.cn/</span>) </span><br><span class="line"></span><br><span class="line">酷安神评论：[<span class="string">酷安神评论</span>](<span class="link">https://www.coolapk.com/dyh/1527</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日迹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日迹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EC Abstract</title>
      <link href="/peaky/2022/03/28/d285d8df.html"/>
      <url>/peaky/2022/03/28/d285d8df.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>This is EC abstract</p></blockquote><span id="more"></span><p>摘要</p><h4 id="A-New-Task-Scheduling-Scheme-Based-on-Genetic-Algorithm-for-Edge-Computing："><a href="#A-New-Task-Scheduling-Scheme-Based-on-Genetic-Algorithm-for-Edge-Computing：" class="headerlink" title="A New Task Scheduling Scheme Based on Genetic Algorithm for Edge Computing："></a>A New Task Scheduling Scheme Based on Genetic Algorithm for Edge Computing：</h4><p>随着智能电网和全球能源互联技术的不断发展，智能终端数量已连接到电网，可用于提供资源服务作为边缘节点。传统的云计算可以用来在电网中提供存储服务和任务计算服务，但是它面临着资源瓶颈，时滞和有限的网络带宽资源等挑战。边缘计算是云计算的有效补充，因为它可以为用户提供具有较低延迟的本地计算服务。但是，由于单边缘节点中的资源有限，资源密集型任务需要分为多个子任务，然后通过资源协作分配给不同的边缘节点。使任务调度更有效是一个重要问题。本文基于边缘计算的概念，提出了一种双层资源管理方案。另外，基于遗传算法，提出了一种名为GA-EC（边缘计算遗传算法）的新任务调度算法，该算法可以根据不同的调度目标动态调度任务。仿真结果表明，该算法对能耗和负载平衡有一定的影响，减少了时延</p><h4 id="Task-Scheduling-in-Deadline-Aware-Mobile-Edge-Computing-Systems"><a href="#Task-Scheduling-in-Deadline-Aware-Mobile-Edge-Computing-Systems" class="headerlink" title="Task Scheduling in Deadline-Aware Mobile Edge Computing Systems"></a>Task Scheduling in Deadline-Aware Mobile Edge Computing Systems</h4><p>移动边缘计算（MEC）是一种新的计算方法，其中移动设备（MD）携带的计算任务可以卸载到MEC服务器或本地计算。由于MDs始终受到电池限制，计算任务有严格的最后期限，因此如何有效地安排每个任务的执行非常重要。与现有工作相比，我们考虑了一个复杂得多的场景，其中多个移动MDs共享多个异构MEC服务器，并且在截止日期感知MEC系统中提出了一个名为最小能耗问题的问题。这种问题被证明是NP难的，并且分别针对单个和多个MD场景提出了两种近似算法。这些算法的性能因理论分析和仿真而异。</p><h4 id="Deep-Reinforcement-Learning-Based-Task-Scheduling-in-Edge-Computing-Networks"><a href="#Deep-Reinforcement-Learning-Based-Task-Scheduling-in-Edge-Computing-Networks" class="headerlink" title="Deep Reinforcement Learning Based Task Scheduling in Edge Computing Networks"></a>Deep Reinforcement Learning Based Task Scheduling in Edge Computing Networks</h4><p>随着5G移动网络服务的快速发展，海量数据在网络边缘爆炸式增长。云计算服务的延迟时间长，带宽要求大。边缘计算已成为减少5G移动网络服务延迟和流量负载的关键技术。然而，如何在边缘计算环境中智能地安排任务仍然是一项关键挑战。在本文中，我们定义了云边缘网络体系结构中最小化任务调度延迟的优化问题。这个问题被证明是NP难的，并按照马尔可夫决策过程建模。我们设计了一种基于异步优势演员批评（CECSA3C）的云边协作调度算法。仿真结果表明，与现有的DQN和RL-G算法相比，该算法收敛速度快，任务处理时间平均缩短28.3%和46.1%，同时保持了性能的可扩展性。</p><h4 id="Profit-Maximized-Collaborative-Computation-Offloading-and-Resource-Allocation-in-Distributed-Cloud-and-Edge-Computing-Systems"><a href="#Profit-Maximized-Collaborative-Computation-Offloading-and-Resource-Allocation-in-Distributed-Cloud-and-Edge-Computing-Systems" class="headerlink" title="Profit-Maximized Collaborative Computation Offloading and Resource Allocation in Distributed Cloud and Edge Computing Systems"></a>Profit-Maximized Collaborative Computation Offloading and Resource Allocation in Distributed Cloud and Edge Computing Systems</h4><p>边缘计算是一种新架构，可提供用于实现物联网的计算，存储和网络资源。它将计算带到用户附近的网络边缘。但是，边缘节点的能源和资源有限。在边缘完全运行任务可能会导致性能不佳。云数据中心（CDC）拥有丰富的执行任务资源，但它们位于远离用户的地方。疾病预防控制中心导致长时间的传输延迟和利用资源的巨大财务成本。因此，在CDC层和边缘计算层之间智能卸载用户的任务至关重要。这项工作提出了一个云边缘计算系统，它有一个终端层，边缘计算层和CDC层。在此基础上，设计了一种利润最大化的协作计算卸载和资源分配算法，以最大限度地提高系统的利润，保证严格满足任务的响应时间限制。在每个时隙中，这项工作共同考虑CPU，内存和带宽资源，边缘层中所有异构节点的负载平衡，最大能量，最大服务器数量以及CDC层中的任务队列稳定性。考虑到上述因素，通过提出的基于模拟退火的候鸟优化程序来制定和解决单目标约束优化问题，以获得接近最优的解决方案。所提出的方法实现了CDC与边缘计算卸载的联合优化，以及CDC中的资源分配。现实的基于数据的仿真结果表明，它实现了比同龄人更高的利润。</p><h4 id="Dynamic-Request-Scheduling-Optimization-in-Mobile-Edge-Computing-for-IoT-Applications"><a href="#Dynamic-Request-Scheduling-Optimization-in-Mobile-Edge-Computing-for-IoT-Applications" class="headerlink" title="Dynamic Request Scheduling Optimization in Mobile Edge Computing for IoT Applications"></a>Dynamic Request Scheduling Optimization in Mobile Edge Computing for IoT Applications</h4><p>在5G时代，随着对物联网（IoT）的计算和海量数据流量的需求不断增加，移动边缘计算（MEC）和超密集网络（UDN）被认为是两种有前途的技术，其中导致在所谓的超密集边缘计算（UDEC）中。任务卸载作为一种有效的解决方案，为UDEC网络中的移动用户提供了低延迟和灵活的计算。然而，边缘云的有限计算资源和移动用户的动态需求使得将计算请求安排到适当的边缘云具有挑战性。为此，我们首先为移动用户制定传输功率分配（PA）问题，以最大限度地降低能耗。使用准凸技术，我们解决了PA问题，并提出了一个基于子梯度（NCGG）的非合作博弈模型。然后，我们将联合请求卸载和资源调度（JRORS）问题建模为一个混合集成非线性程序，以尽量减少请求的响应延迟。JRORS问题可以分为两个问题，即请求卸载（RO）问题和计算资源调度（RS）问题。因此，我们将JRORS问题分析为双重决策问题，并提出了一种基于i-NSGA-II的多目标优化算法，称为MO-NSGA。仿真结果表明，NCGG可以节省传输能耗，具有良好的收敛性，MO-NSGA在响应速率方面优于现有方法，并且可以在动态UDEC网络中保持良好的性能。</p><h4 id="Deep-Reinforcement-Learning-Based-Offloading-Scheduling-for-Vehicular-Edge-Computing"><a href="#Deep-Reinforcement-Learning-Based-Offloading-Scheduling-for-Vehicular-Edge-Computing" class="headerlink" title="Deep-Reinforcement-Learning-Based Offloading Scheduling for Vehicular Edge Computing"></a>Deep-Reinforcement-Learning-Based Offloading Scheduling for Vehicular Edge Computing</h4><p>车辆边缘计算（VEC）是一种新的计算范例，具有很大的潜力来增强车辆终端（VT）在低延迟和高能量效率的车辆应用中支持资源匮乏的能力。在本文中，我们研究了典型VEC场景中的一个重要的计算卸载调度问题，其中沿着快速行驶的VT打算安排其排队等待的任务，以便在任务延迟和能源消耗。由于不同的任务特征，动态无线环境以及由车辆移动引起的频繁切换事件，最佳解决方案应该考虑在哪里安排（即本地计算或卸载）以及何时安排（即执行的顺序和时间）每个任务。为了解决这样一个复杂的随机优化问题，我们通过精心设计的马尔可夫决策过程（MDP）对其进行建模，并求助于深度强化学习（DRL）来处理巨大的状态空间。我们的DRL实现是基于最先进的近端策略优化（PPO）算法设计的。利用参数共享网络体系结构结合卷积神经网络（CNN）来逼近策略函数和值函数，可以有效地提取代表性特征。对状态和奖励表示进行了一系列调整，以进一步提高培训效率。广泛的仿真实验和与六种已知基线算法及其启发式组合的综合比较清楚地证明了所提出的基于DRL的卸载调度方法的优点。</p><h4 id="Evaluation-of-T-ask-Scheduling-Algorithms-in-Heterogeneous-Computing-Environments"><a href="#Evaluation-of-T-ask-Scheduling-Algorithms-in-Heterogeneous-Computing-Environments" class="headerlink" title="Evaluation of T ask Scheduling Algorithms in Heterogeneous Computing Environments"></a>Evaluation of T ask Scheduling Algorithms in Heterogeneous Computing Environments</h4><p>这项工作建立了一套方法来评估异构计算环境中任何任务调度策略的性能。我们正式提出了混合边缘云计算生态系统的调度模型，并在大工作量上进行基于仿真的实验。除了传统的云数据中心之外，我们还考虑边缘数据中心，包括智能手机和Raspberry Pi edge设备，这些设备都是电池供电的。定义计算资源的现实能力。一旦找到时间表，资源容量就可以或不能满足各种任务需求。我们构建了一个调度和评估框架，并测量了典型的调度指标，如平均等待时间，平均周转时间，makespan，循环吞吐量，最短作业时间，最小最小和最大最小调度方案。我们的分析和结果表明，与仅云介质相比，最先进的独立任务调度算法在异构边缘云介质中的数据中心的重大任务故障和非最佳资源利用方面遭受性能下降。特别是，对于大量任务，由于电池容量低或内存有限，每个调度方案无法执行超过25%的任务。</p><h4 id="Deep-Reinforcement-Learning-for-Collaborative-Edge-Computing-in-V-ehicular-Networks"><a href="#Deep-Reinforcement-Learning-for-Collaborative-Edge-Computing-in-V-ehicular-Networks" class="headerlink" title="Deep Reinforcement Learning for Collaborative Edge Computing in V ehicular Networks"></a>Deep Reinforcement Learning for Collaborative Edge Computing in V ehicular Networks</h4><p>移动边缘计算（MEC）是支持任务关键车辆应用（如智能路径规划和安全应用）的有前途的技术。本文开发了一种协作边缘计算框架，以减少计算服务延迟，提高车辆网络的服务可靠性。首先，提出一种任务分区和调度算法（TPSA）来决定工作量分配，并在给定计算卸载策略的情况下，将卸载到边缘服务器的任务的执行顺序安排给边缘服务器。其次，开发了一种基于人工智能（AI）的协作计算方法来确定车辆的任务卸载，计算和结果传递策略。具体而言，卸载和计算问题被表述为马尔可夫决策过程。采用深度强化学习技术，即深度确定性策略梯度，在复杂的城市交通网络中寻找最优解决方案。通过我们的方法，可以通过协作计算中的最佳工作负载分配和服务器选择来最小化包括计算服务延迟和服务故障罚分的服务成本。仿真结果表明，所提出的基于AI的协作计算方法可以适应具有出色性能的高动态环境。</p><h4 id="Assignment-of-IoT-Nodes-to-Edge-Computing-Devices-in-Internet-of-Things"><a href="#Assignment-of-IoT-Nodes-to-Edge-Computing-Devices-in-Internet-of-Things" class="headerlink" title="Assignment of IoT Nodes to Edge Computing Devices in Internet of Things"></a>Assignment of IoT Nodes to Edge Computing Devices in Internet of Things</h4><p>物联网（IoT）是一种描述将物理对象连接到互联网的想法的计算概念。一般来说，物联网是一个设备网络-每个对象都通过互联网或一些非互联网导向的连接（如蓝牙，ZigBee等）连接。它具有互联网连接的IP地址，并且这些对象之间发生通信和其他互联网启用的设备和系统。物联网通常用于监控实时环境，从而生成大量数据。由于其成本和容量优势，云是一种具有吸引力的物联网数据存储选项。但对于时间关键的应用程序，这可能是一个挑战。边缘计算是解决这个问题的方法。边缘计算是指在网络边缘计算靠近其创建位置的数据，而不是远离中心点的数据。然后将计算和处理的数据发送到云。为了实现这一点，物联网节点必须连接到边缘计算设备。然而，识别每个物联网节点应该连接的边缘计算设备（ECD）是一项挑战。这项工作描述了一种基于动态阈值将物联网节点分配给ECD的方法，并且应用元启发式来安排任务以使完成时间最短。基于仿真的结果显示了所提出工作的优点。</p><h4 id="Task-Scheduling-for-Edge-Computing-with-Agile-VNFs-On-Demand-Service-Model-toward-5G-and-Beyond"><a href="#Task-Scheduling-for-Edge-Computing-with-Agile-VNFs-On-Demand-Service-Model-toward-5G-and-Beyond" class="headerlink" title="Task Scheduling for Edge Computing with Agile VNFs On-Demand Service Model toward 5G and Beyond"></a>Task Scheduling for Edge Computing with Agile VNFs On-Demand Service Model toward 5G and Beyond</h4><p>随着互联网的快速发展，满足服务请求，有效分配计算资源和按需服务应用的需求不断增加。边缘计算用于满足低延迟，网络连接和本地数据处理要求，并减轻云中的工作量。本文提出了一种基于网关的边缘计算服务模型，以减少数据传输的延迟和往返云的网络带宽。通过轻量级虚拟化技术Docker调整边缘网关的任务计划，可以实现按需计算资源分配。边缘网关还可以处理本地网络中的服务请求。所提出的边缘计算服务模型不仅消除了传统云服务模型的计算负担，而且提高了边缘计算节点的运行效率。该模型还可用于5G及以上云边缘计算环境中的各种创新应用。</p>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文格式</title>
      <link href="/peaky/2022/03/20/9f2153c9.html"/>
      <url>/peaky/2022/03/20/9f2153c9.html</url>
      
        <content type="html"><![CDATA[<p>基于遗传算法的边缘计算任务调度新方案</p><h4 id="abstract"><a href="#abstract" class="headerlink" title="abstract"></a>abstract</h4><p>随着智能电网和全球能源互联技术的不断演进，大量智能终端接入电网，可作为边缘节点提供资源服务。传统云计算可用于在电网中提供存储服务和任务计算服务，但面临资源瓶颈、时延、网络带宽资源受限等挑战。边缘计算是云计算的有效补充，因为它可以为用户提供低延迟的本地计算服务。但是，由于单个边缘节点的资源有限，需要将资源密集型任务划分为多个子任务，然后通过资源协作分配给不同的边缘节点。使任务调度更有效是一个重要的问题。本文基于边缘计算的概念提出了一种两层资源管理方案。此外，基于遗传算法，提出了一种新的任务调度算法GA-EC(Genetic Algorithm for Edge Computing)，可以根据不同的调度目标动态调度任务。仿真结果表明，该算法对能耗和负载均衡有有益的效果，减少了时延。</p><h4 id="1-Background-研究现状"><a href="#1-Background-研究现状" class="headerlink" title="1 Background 研究现状"></a>1 Background 研究现状</h4><p>随着智能电网和通信技术的快速发展,海量电力设备接入网络，电力服务用户日益增多。云能够存储大量数据并处理具有可扩展性、灵活性和安全性的计算密集型任务。云计算可以通过数据存储、容灾、智能用电、仿真分析等方式为电网提供支撑。云平台可以整合电网中不同系统的数据和资源并进行管理，实现智能电网中数据和资源的共享。为了保证电力云计算系统的有效性和稳定运行，必须实现合理的资源管理和任务调度。</p><p>云资源管理已经有很多研究。在节能研究中，[9]中的作者提出了一种方案，可以通过降低处理器速度来实现虚拟集群中的节能。 [10]中的作者提出了一种动态资源分配方法，可以根据实际需求调整资源节点的数量。为了降低将低分辨率视频转换为高分辨率的计算复杂度，同时最大限度地减少与移动客户端相关的计算和额外通信成本，中的作者研究了通过将计算任务卸载到移动云计算 (MCC) 来提高视频质量环境。</p><p>研究人员针对提高资源利用率提出了一种两层资源调度方案，可以根据启发式算法实现合理的任务调度,中的作者提出了一种节能的资源调度方法，可以提供实时的云服务，时延很小。此外，遗传算法被用于云计算的许多领域，包括资源管理。</p><p>云计算用于在电力网络中提供资源存储和任务计算服务。由于云计算的传输延迟长和边缘节点的计算资源有限，本文提出了一种两层资源管理模型和一种新颖的任务调度算法来满足电力网络的要求，如图1所示。 1、在智能电网中，边缘节点可以是智能终端、能源路由器、集中器等。</p><p>下文第二部分介绍了基于边缘计算的电源管理方案，第三部分详细介绍了任务调度算法。第四部分，我们模拟了新算法与其他三种对比算法的性能。第五部分是本文的总结。</p><h4 id="2-Power-Resource-Management-Scheme-Based-on-Edge-Computing-基于边缘计算的电源管理方案"><a href="#2-Power-Resource-Management-Scheme-Based-on-Edge-Computing-基于边缘计算的电源管理方案" class="headerlink" title="2 Power Resource Management Scheme Based on Edge Computing  基于边缘计算的电源管理方案"></a>2 Power Resource Management Scheme Based on Edge Computing  基于边缘计算的电源管理方案</h4><p>随着云计算的快速演进，越来越多的智能终端接入网络。传统云计算中，所有计算任务都转移到云数据中心，无法始终满足用户的实时性要求。此外，在需要同时执行大量计算任务时，传统云计算不可避免地会出现带宽瓶颈。</p><p>在电力网络的边缘，有许多设备消耗大量资源[17]。如果这些设备中的资源可以用来提供计算服务，那么云计算的能量就可以得到扩展。对于本文的资源管理模型，云服务器中的部分计算任务可以卸载到边缘设备上，本地计算任务也可以在本地边缘设备上执行。</p><p>在新的资源管理模型中，计算节点有两层。第一层包括云服务器中的分析控制节点，第二层包括边缘设备中的计算节点。第一层节点用于执行计算密集型任务和管理第二层节点，第二层节点用于执行本地计算任务。因此，第二层节点中的资源应该由第一层节点统一调度。资源管理模型可应用于供电服务指挥系统、大数据平台、热点定位等多种应用场景。</p><p>在这种资源管理模型中，由于二层节点中边缘节点的资源是有限的，一些任务会被划分为子任务，由不同的边缘节点执行。因此，第二层的资源将在不同的任务之间共享和调度。</p><h4 id="3-Introduction-of-Task-Scheduling-Algorithm-in-Detail-任务调度算法详细介绍"><a href="#3-Introduction-of-Task-Scheduling-Algorithm-in-Detail-任务调度算法详细介绍" class="headerlink" title="3 Introduction of Task Scheduling Algorithm in Detail 任务调度算法详细介绍"></a>3 Introduction of Task Scheduling Algorithm in Detail 任务调度算法详细介绍</h4><p>电力网络中的任务调度问题变得越来越复杂。调度算法对于提高节能性能、减少时间延迟和改善负载平衡至关重要。因此，在本文中，我们提出了一种新颖的任务调度智能优化算法。</p><p>对于本文提出的资源管理模型，边缘节点位于第二层，有限的资源会影响一些计算密集型任务的完成。因此，计算密集型任务将被划分为子任务，由不同的边缘节点执行。这使得在不同边缘节点之间分配任务成为一个关键问题。</p><p>许多学者研究了任务调度问题。例如，[18] 中提出了一种称为 DSF ACO 的任务调度算法，该算法可以在同一个调度队列中分配多个任务，以减少执行时间。该算法可以改善虚拟机资源的运行。 [19]提出的一种任务调度方法，采用质量函数的蚁群算法的信息素更新规则，通过加载标准差函数改进启发式信息模型，实现云中虚拟机的负载均衡。 [20] 中提出了一种称为 ECMM（代表 Energy-Considered Min-Min）的低功耗调度算法，但人们认为该算法可能会降低任务执行效率。 [21]中的作者提出了一种节能的资源分配算法，将高负载的应用程序迁移到新的多核服务器上，将低负载的应用程序迁移到现有的单核服务器上。</p><p>在第二层资源管理模型中，计算密集型任务将被划分为多个子任务，边缘节点通过相互协作来执行子任务。在本文中，我们提出了一种基于遗传算法的任务调度算法，以实现不同边缘节点之间的资源共享和任务分配。</p><h5 id="3-1-Mathematical-Model-数学模型"><a href="#3-1-Mathematical-Model-数学模型" class="headerlink" title="3.1  Mathematical Model 数学模型"></a>3.1  Mathematical Model 数学模型</h5><p>本节介绍任务调度算法的计算模型和流程图。对于本文，边缘节点数为n，任务数为m。边缘节点的集合是 R&#x3D;{R1,R2。 .里。 . .,Rn}，任务集为 T&#x3D;{T1,T2。 . .Tj . 。，Tm值}。任务调度的目的是根据调度目标函数为任务分配合适的边缘节点。</p><p>能耗计算模型</p><p>能耗计算模型</p><h5 id="3-2-算法介绍"><a href="#3-2-算法介绍" class="headerlink" title="3.2 算法介绍"></a>3.2 算法介绍</h5><h4 id="4-Simulations"><a href="#4-Simulations" class="headerlink" title="4 Simulations"></a>4 Simulations</h4><p>在基于边缘计算概念的新资源管理模型中，我们提出了一种基于遗传算法的任务调度算法。在本节中，我们将模拟新算法的性能。不失一般性，所有数据均为10次实验的平均值。信道增益值 hUPi &#x3D; l−τn , a n d τ &#x3D; 4, ln ∈ [0, 50]。其他参数列在表中。 1、我们设置了一些对比方法来验证新算法的有效性。</p><h4 id="5-Conclusion"><a href="#5-Conclusion" class="headerlink" title="5 Conclusion"></a>5 Conclusion</h4><p>Task Scheduling for Edge Computing with Agile VNFs On-Demand Service Model toward 5G and Beyond</p><p>Abstract</p><p>随着互联网的快速发展，满足服务请求、有效分配计算资源、提供服务按需应用的需求不断增加。边缘计算用于满足低延迟、网络连接和本地数据处理要求，并减轻云中的工作量。本文提出了一种基于网关的边缘计算服务模型，以减少数据传输的延迟和往返云的网络带宽。通过轻量级虚拟化技术Docker，调整边缘网关的任务调度，实现按需计算资源分配。边缘网关还可以处理本地网络中的服务请求。所提出的边缘计算服务模型不仅消除了传统云服务模型的计算负担，而且提高了边缘计算节点的运行效率。该模型还可用于 5G 及以后的云边缘计算环境中的各种创新应用。</p><h4 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h4><p>云计算、移动宽带网络、物联网（IoT）的快速发展，伴随着对网络资源分配、数据处理和服务管理的巨大需求，不可避免地改变了传统的网络基础设施。软件定义网络 (SDN) 和网络功能虚拟化 (NFV) 技术不仅将网络基础设施从复杂的物理实体转变为虚拟和可编程节点，而且还为信息和通信技术 (ICT) 的发展带来了重大变化 [1 , 2]。</p><p>NFV 代表了电信基础设施部署方式的核心结构变化 [3]。如图1所示，NFV旨在解决与网络设备资源分配相关的问题。具体来说，NFV 使用虚拟化技术将位于数据中心、网络节点和客户端设备 (CPE) 上的不同类型的设备（包括路由器、交换机、防火墙和入侵检测系统）集成到标准或通用硬件中设备。这样，NFV可以有效降低网络物理设备的采购成本和相关的网络维护成本。作为 NFV 的逻辑结果，虚拟网络功能 (VNF) 是以前由专有的专用硬件执行的虚拟化任务。 VNF 将单个网络功能从专用硬件设备转移到在商品硬件上运行的软件。同时，NFV 将网络功能从专有硬件设备中分离出来，通过使用软件来运行它们，并随后加速服务创新和配置，尤其是在服务提供商环境中。 NFV的出现有利于软件运营的网络，而不是物理设备运营的网络，增强了各个网络服务功能的灵活性和快速部署。 SDN是另一种用于解决传统网络刚性问题，满足多样化和动态网络服务需求的技术[4]。</p><p>SDN的主要目的是解决传统网络架构中网络分为控制平面和数据平面的局限性。软件通过集中控制的方式将网络管理权限授予控制平面上的软件控制器，从而重新安排网络架构。这样，这种从现有网络架构中抽离出来，转变为可编程网络的控制方式，有效地解决了传统网络设计的局限性。使用单个逻辑点控制整个网络，可以实现网络的集中控制和灵活运行。 SDN 和 NFV 是在数据传输和电信基础设施环境下，可以相互协同，引领网络设计的改造、部署和管理的网络技术。这些技术的融合也为互联网的未来发展指明了方向，尤其是在5G技术出现之后[5, 6]。</p><p>随着网络变得越来越灵活、软件定义和虚拟化，一些标准组织正在努力将 SDN&#x2F;NFV 技术引入移动网络，以满足 5G&#x2F;IoT 网络对数据处理和信息传输的低延迟要求，并间接驱动边缘计算技术的发展[7-9]。边缘计算是一种分布式计算架构，它将应用程序、数据和服务的计算能力从云数据中心服务器转移到靠近待处理用户网络边缘的 CPE [10-12]。网关是一种 CPE 和通用边缘计算设备，具有计算、分析和预处理在主机和其他物联网设备附近收集的数据的基本能力，以加速数据处理并减少传输延迟 [13, 14] .在基于网关的边缘网络架构中，数据在其源头附近进行计算和处理，从而使该架构适用于处理即时服务请求。</p><p>边缘计算的概念如图 2 所示。边缘网络位于物联网设备和云之间 [15]。边缘计算将现有的云计算范式扩展到网络边缘，以满足延迟关键和计算密集型物联网应用的需求。边缘计算节点的分布式架构满足了从云数据中心到CPE或微数据中心的多种应用、数据和服务的计算需求。根据不同的发展领域，边缘计算网络可以分为cloudlet、移动边缘计算（MEC）和雾计算[16-18]。 Cloudlet 是一种通信工具，它为用户周围的网络提供微服务，并虚拟化和缩小计算资源，以将计算资源部署在用户端附近。目前，Akamai 和 Microsoft 正在推广 cloudlets 的应用服务和技术。 MEC 由欧洲电信标准协会（ETSI）推出，在移动通信领域具有高度应用性，由通信公司运营和管理[19]。该技术主要旨在减轻网络设备日益增长的压力，帮助移动公司打造独特的移动服务模式。由 Cisco 推出，目前由 OpenFog Consortium Alliance 推动，雾计算是扩展云计算的概念，专注于本地网络的数据处理功能[20]。通过强调近场数据通信，雾计算可用于不同的网络设备，用于个人或企业管理，以及在特定领域提供相关的物联网服务。 OpenFog Consortium 旨在通过开发一种能够识别某些核心技术和能力的开放架构来推广 OpenFog 计算技术，例如分布式计算、网络和存储，为物联网边缘提供智能支持。顺应当前技术融合趋势，OpenFog还与ETSI工业规范组合作，为ICT的规范和互操作建立应用框架和开发技术，扩大边缘计算的应用范围。</p><p>5G技术的出现，增加了对传统集中式云计算架构的数据移动、数据存储、数据处理、数据分析等方面的要求，从而增加了提高核心网承载能力和网络承载能力所需的硬件设备数量。服务器。鉴于物联网产生的大量数据，现有的云服务模式无法满足用户大而分散的需求。该模型已用于数据计算、分析和处理。然而，对低延迟和即时性的需求逐渐增加，从而使该模型略显不足。边缘计算的引入有助于提前处理数据，减少数据流量和传输时间；该技术还允许将计算能力转移到 CPE 或终端节点，以增强边缘操作对环境的即时反馈 [21]。思科互联网业务解决方案集团 [22] 预测，到 2020 年物联网将拥有超过 500 亿个终端和设备，而国际数据公司估计未来超过 40% 的数据需要分析、处理和存储在网络边缘[23]。为了有效应对上述变化带来的挑战，必须重新定义网络边缘的服务模型，优化网络运行和服务处理效率，减少云端的工作量，满足网络的时延要求。 5G物联网。本文的其余部分安排如下。第二部分介绍了研究背景和相关工作。第 3 节描述了边缘计算服务模型的设计。第 4 节介绍了实验结果。第 5 节总结了本文。</p><h4 id="2-Background-and-Related-Works"><a href="#2-Background-and-Related-Works" class="headerlink" title="2 Background and Related Works"></a>2 Background and Related Works</h4><p>网络运营商必须部署各种类型的网络设备和软件平台，以支持日益多样化的互联网需求。然而，目前的网络设计是基于硬件概念的，各种硬件设备往往不兼容或无法相互通信，网络维护管理复杂度高，成本高。最近提出了 NFV 作为网络运营商面临的困难的解决方案。通过NFV，网络和通信运营商可以降低相关成本，灵活高效地处理客户网络部署需求，减少硬件资源浪费，提高资源利用效率。当前的NFV相关标准主要由ETSI驱动。鉴于网络功能虚拟化带来的影响和好处，运营商——尤其是网络服务提供商和电信运营商——被认为是 NFV 标准开发中最积极的参与者。</p><p>如图 3 所示，管理程序和容器是 VNF [24] 的两个主要框架。 Hypervisor是最常见的虚拟化技术，它使用一组虚拟化硬件设备以虚拟的方式执行宿主操作系统，并抽象出宿主操作系统的物理硬件。虚拟机（VM）是部署在虚拟管理程序上的操作系统，而Linux容器（LXC）是操作系统级的虚拟化技术，主要将应用服务系统封装成一个软件容器，存储应用服务的代码软件、所需的操作系统核心和库。作为其最吸引人的特点，LXC 具有简化的软件结构。因此，容器的镜像文件只包含了一小部分比一般VM小的操作系统组件，它是一个完整的操作系统。鉴于其体积小、重量轻的特点，与 VM 相比，容器的部署或移动速度要快得多。因此，大多数行业从业者更喜欢容器而不是 VM。 Docker 是一个基于 LXC 技术 [25] 的开源项目，在 Linux 操作系统上运行。该技术创建了一个额外的软件抽象层，用于虚拟化服务应用程序以响应微服务的开发 [26]。 Docker 除了作为 Git Hub 社区的著名产品外，还受到了 Google 和 Red Hat 的青睐，是目前发展最快的 NFV 虚拟化技术。还进行了许多研究来检验 Docker 作为边缘计算平台的实现</p><p>虚拟化技术的发展推动了物联网架构的多项创新。边缘计算也作为一个新概念出现，满足了物联网对分布式数据处理和设备数量的要求。边缘网关等 CPE 设备使用虚拟化技术提供本地操作，特别适用于具有低延迟和即时性的 IoT 应用程序。边缘计算可以将原本由云数据中心处理的大规模服务完全拆解，将这些服务切割成小而易管理的部分，分布在边缘网络节点或微数据中心，以加速其分辨率，减少云中的工作负载。在这种情况下，用户的服务请求在边缘网络的网关上进行处理，而超出计算能力或边缘网络无法处理的请求被转发到边缘网络。减少发送回云端的数据量。这些数据最初在边缘节点进行处理，然后在将它们传输回云端之前进行预处理或过滤，以确保仅传输有用的数据。边缘计算不仅可以降低网络连接时延，满足5G&#x2F;IoT改善时延的需求，还可以促进ICT行业技术的融合。使用轻量级虚拟技术还可以帮助网络运营商在边缘网关上安装应用程序和控制软件，提供本地化服务，并创建创新的服务模式。参考文献 [29] 提出了一种基于 SDN 的边缘计算架构，称为软件定义基础架构（SDI），它使用 OpenFlow 和 OpenStack 将服务资源虚拟化，用于在可以灵活调度网络资源的虚拟基础架构上构建智能应用程序。为了引入资源共享的概念，[30] 提出了一种云-边缘框架，其中每个边缘节点可以使用本地处理平台共享计算资源，以减少处理数据的云端的计算负担，并提高边缘网络的运行。为了满足移动网络的低延迟和快速数据处理要求，[12] 检查了移动边缘操作，确定了不同 MEC 的适用情况和参考场景，并提出了 MEC 卸载决策、计算资源分配和移动管理的边际。互联网的计算需求也可以作为检验边缘网络服务管理和应用创新的参考。</p><p>考虑到本地网关硬件的资源限制（如 CPU、内存和网络密集型服务请求），处理用户服务请求的任务调度机制对于提高边缘计算的服务能力具有重要作用。计算机系统中提供了几种任务调度算法[31]。还对云计算的几种任务调度算法进行了深入研究[32, 33]。参考文献[34]提出了一种称为HealthEdge的任务调度方法，它根据收集到的人体健康数据为不同的任务设置不同的处理优先级，并确定一个任务是必须在本地设备上运行还是在远程云上运行，以减少总处理量尽可能多的时间。参考文献[35]采用马尔可夫决策过程方法来解决MEC系统中的随机优化问题。在这种方法中，计算任务是根据任务缓冲区的排队状态、本地处理单元的执行状态和传输单元的状态来调度的。参考文献[36]提出了一种贪婪的最佳可用性（GBA）机制来识别理想化的任务调度策略，并通过根据任务完成时间调度任务来减少服务的排队时间。参考文献[37]分析了循环（RR）算法在云计算环境中的性能，揭示了RR调度通过使用时间片的方法在相同优先级的任务之间公平地分配计算资源。结果表明，与其他算法相比，RR算法表现出更好的响应时间和负载平衡。</p><h4 id="3-Problem-Definition"><a href="#3-Problem-Definition" class="headerlink" title="3 Problem Definition"></a>3 Problem Definition</h4><p>NFV 是目前最有价值的解决与网络服务的运营成本和效率相关的问题的解决方案。因此，许多ICT公司已经开始研究虚拟化技术。尽管对该技术寄予厚望，但满足服务请求、有效分配虚拟计算资源、提供服务按需应用等仍然对 NFV 的部署提出挑战，并在 5G&#x2F;IoT 服务的未来发展中发挥关键作用。 NFV还允许基于共同的底层网络资源建立多个独立的、异构的虚拟网络，从而使服务提供商能够根据用户的需求提供定制化的服务。虚拟网络嵌入是根据基础设施提供商当前的资源情况，通过映射算法将虚拟网络映射到底层网络（底层网络）的过程。这个过程是一个 NPHard 问题，已经在 NFV 资源分配研究中进行了调查 [38, 39]。以往的研究[40, 41]也系统地讨论了虚拟网络映射问题，为研究提供了很好的参考。</p><p>本文旨在通过使用提出的边缘计算服务模式来优化任务调度和资源分配。与云计算相比，S c h e d u l i n g t a s k s i n e d g e c o m p u t i n g a r e m o r e c o m p l e x。边缘计算操作通常分布在客户端设备、边缘网关上，有时还分布在云网络的代理上。因此，决定在哪里安排计算任务仍然是边缘计算中的一个关键问题。鉴于目前基于网关的物联网架构是主流，本文讨论的任务调度机制主要集中在边缘网关。在可用计算资源有限的情况下，调度和资源分配是该网关要解决的主要问题。轻量级 NFV 技术在开发过程中发挥着不可或缺的作用。主机服务请求的任务调度和资源分配之间的关系如图 4 所示。由于每个服务请求到达的时间不同，所需的 VNF 服务和处理时间也不同。边缘网关可以根据服务请求之间的差异，调整任务调度和资源配置。作为服务按需模型的基本思想，只有一个 VNF 专用于单个服务请求。这个服务模型问题可以用排队论来分析，把request和react处理看成一个排队系统，把排队系统的输入看成服务请求，把服务计数器看成网关调度函数，输出为请求的 VNF 资源。尽管许多队列模型可用于运营管理 [42]，但本文主要关注任务调度方法，该方法允许某个边缘网关一个接一个地处理队列中的多个 VNF。由于容量有限，边缘网关只能调度有限数量的服务请求，而后续的服务请求需要转发到云端进行处理。考虑到这些，研究问题制定如下。假设服务请求是一个边缘网关内的泊松比，服务时间是指数分布。服务请求集可以表示为 푅 &#x3D; {푅1, 푅2, 푅3, . . . , 푅푛}, w h e r e n 表示系统中的服务请求数。等式 (1) 和 (2) 用于确定系统中 n 个服务请求的概率。在这些等式中，N表示网关中可以调度的最大服务请求数，휆是单位时间内平均传入的用户请求数，휇是服务效率（服务计数器的能力），휌 &#x3D; 휆&#x2F;휇 为单位时间内可以满足请求的比率，P0表示初始条件，L表示计划时间内到达系统的服务请求总数，퐿푞表示服务器总数在系统中排队的请求。 L 和 퐿푞 可以分别使用 (3) 和 (4) 计算。等式（5）计算系统中服务的等待和服务时间，而（6）计算푊푞或用户请求的平均等待时间。</p><h3 id="4-Design-of-the-Edge-Computing-Service-Model"><a href="#4-Design-of-the-Edge-Computing-Service-Model" class="headerlink" title="4  Design of the Edge Computing Service Model"></a>4  Design of the Edge Computing Service Model</h3><p>如何构建弹性且高性价比的边缘计算服务模型，提高管理效率，满足用户服务需求，实现集中管理，开发灵活配置的服务模型，是当前5G SDN&#x2F;NFV网络发展的研究趋势。本文提出了一种基于网关的边缘计算服务模型（图5），以提高边缘计算节点的运行效率，加速用户服务请求的处理，提高有限数量计算资源的利用效率。在该模型中，当不同的用户请求进入边缘网关时，该网关决定所请求的服务是否可以被处理。如果边缘网关本身缺乏计算能力或资源，则控制器将服务请求转发到云端，以减少数据处理延迟。</p><p>提出的边缘计算服务模型可以分为资源估计、调度器和轻量级VNF配置。图 6 展示了所提出的边缘计算服务模型中的操作流程图，这三个部分将在以下部分中进一步描述。<br>资源估计检查边缘网关是否有足够的计算资源来提供边缘计算服务。对于用户请求集R，资源分配必须遵守以下规则，边缘网关方式也使用这些规则</p><h5 id="5-Experiment"><a href="#5-Experiment" class="headerlink" title="5 Experiment"></a>5 Experiment</h5><p>进行了实验以评估所提出的任务调度算法并测试其在部署轻量级 VNF 中的性能。实验环境如图 7 所示。最初进行模拟，通过改变服务需求的数量来评估算法的任务调度性能。服务请求是<br>仿真评估了服务请求对不同调度机制的平均等待时间、平均响应时间和任务调度的影响。 FCFS基于进入边缘网关排队系统的服务请求，按照这些请求的先后顺序调度任务。优先级任务调度是一种不公平的调度算法，服务请求按照优先级进行排序，优先执行高优先级的任务。优先级相同的任务采用先进先出的调度机制进行排序。 GBA根据排队系统中服务请求的完成时间对任务进行排序。 RR算法是基于在进程调度中执行的常规RR调度。 RR调度通过使用时间片的方法（时间量子）将计算资源公平地分配给具有相同优先级的任务。</p><h4 id="6-Conclusions"><a href="#6-Conclusions" class="headerlink" title="6 Conclusions"></a>6 Conclusions</h4><p>本文提出了基于网关的边缘计算服务模型和 GAF 任务调度机制，允许边缘网关在较短的平均时间内调度更多的任务。使用 VNF 配置技术提高边缘计算服务的运行效率，增加资源利用率，实现VNF的快速部署，满足服务按需请求。资源估计、任务调度和轻量级VNF配置设计相结合，提供了一个可以满足5G网络业务按需请求的一体化解决方案。仿真结果表明，所提出的 GAF 机制优于其他调度算法。同时，比较表明，在边缘网关中使用轻量级虚拟化技术比使用传统虚拟机更高效、更具竞争力。未来，我们计划研究边缘计算的多队列任务调度问题，边缘网关和云服务器之间可能的合作，以及利用SD-W AN技术实现云边缘网络的无缝运行。</p><p>Evaluation of Task Scheduling Algorithms in Heterogeneous Computing Environments<br>异构计算环境中 T ask 调度算法的评估</p><p>Abstract</p><p>这项工作建立了一套方法来评估异构计算上下文中任何任务调度策略的性能。我们正式陈述了混合边缘-云计算生态系统的调度模型，并对大型工作负载进行了基于仿真的实验。除了传统的云数据中心，我们还考虑由电池供电的智能手机和 Raspberry Pi 边缘设备组成的边缘数据中心。我们定义了计算资源的实际容量。一旦找到时间表，各种任务需求可以或不能通过资源容量来满足。我们建立了一个调度和评估框架，并测量了典型的调度指标，例如平均等待时间、平均周转时间、制造时间、轮询的吞吐量、最短作业优先、最小-最小和最大-最小调度方案。我们的分析和结果表明，与纯云媒体相比，最先进的独立任务调度算法在异构边缘云媒体中的数据中心的重大任务失败和非最佳资源利用方面存在性能下降。特别是对于大型任务集，由于电池电量不足或内存有限，每个调度方案都有超过 25% 的任务无法执行。</p><h4 id="1-Introduction-1"><a href="#1-Introduction-1" class="headerlink" title="1 Introduction"></a>1 Introduction</h4><p>执行工作负载的调度对于任何计算系统的性能都至关重要。特别是在异构计算环境中大规模处理异构大数据时，由于作业调度和资源分配的非最优以及物联网（IoT）移动性等因素，容易出现高延迟。考虑到目前智能边缘设备和物联网传感器数量空前，来自各种用例的大量异构数据不断产生 [1]。这直接转化为对延迟感知、节能计算技术的新兴需求[2]。在制定解决上述考虑的优化调度策略方面存在广泛的研究兴趣[3-5]。为了测试当前技术的性能，重要的是要有一个准确和正确评估的框架</p><p>通过对异构分布式系统任务调度领域的当前进展进行广泛的文献回顾 [6,7]，我们发现在现有调度算法（如 Min-Min 和 Max）的性能评估中迫切需要更加清晰和形式化-Min，在[8]中介绍。</p><p>我们在本文中解决的问题是对异构环境中的调度算法 Round-Robin (RR)、最短作业优先 (SJF)、Min-Min 和 Max-Min 的评估。这些算法已经在调度文献[9,10]中得到了广泛的研究，我们认为它们是评估和决定它们是否可以的合适选择异构计算的候选者。将来可以扩展这项工作以分析其他调度算法（例如，公平和容量调度、资源感知调度、遗传算法）。</p><p>我们明确定义了 CPU 和内存等云和边缘资源容量。为了实现真实的设置，我们进一步将执行工作负载的异构性定义为具有不同 CPU、内存和 I&#x2F;O 要求的读取和写入任务的组合。考虑到边缘设备的某些资源容量可能不足以执行任务，我们获得的结果对前面提到的算法进行了新颖的分析。我们的分析阐明了何时可以安全地使用现有的调度算法，以及在分配任务以在低容量资源上执行时它们的性能受到多少影响。最后，我们确定需要开发考虑到上述计算约束的进一步调度算法。这是未来工作的主题。</p><p>Contributions</p><p>本文的研究贡献如下：  <a href="https://github.com/roxana-stan/2HD-Scheduling-Algorithms-Evaluation-Framework">https://github.com/roxana-stan/2HD-Scheduling-Algorithms-Evaluation-Framework</a></p><p>数学定义异构计算的调度模型，用于我们的性能评估；</p><p>构建一个框架（<a href="https://github.com/roxana-stan/2HD-Scheduling-AlgorithmsEvaluation-Framework%EF%BC%8C%E4%BA%8E">https://github.com/roxana-stan/2HD-Scheduling-AlgorithmsEvaluation-Framework，于</a> 2021 年 8 月 15 日访问），用于评估边缘云异构环境中的调度算法。此外，作为框架的一部分，我们实施了一套全面的绩效评估指标；</p><p>通过我们的框架进行实验，根据一组指标评估最先进的调度算法的性能。我们选择了具有代表性需求和不同计算资源能力的异构任务；</p><p>根据传统调度算法的任务失败和非最优资源利用来评估性能下降。这是我们得出结论的关键，即需要开发未来的调度算法，以便在边缘云设置的背景下更好地优化低容量边缘资源的执行。</p><p>Structure</p><p>我们简要介绍了论文的概要。第 2 节概述了任务调度过程，突出了各种目标并详细说明了协作边缘-云系统中调度过程的步骤。在第 3 节中，我们从理论上定义了我们提出的异构计算环境调度模型。第 4 节解释了异构工作负载的概念并列出了可能的任务类型。在第 5 节中，我们基于一套完整的指标建立了一个评估方法，突出了实际实验的参数、假设和各种资源的配置。第 6 节介绍了不同调度算法的性能分析。我们讨论了实验结果，并在第 7 节中总结了这项研究工作的结论。</p><h4 id="2-Task-Scheduling"><a href="#2-Task-Scheduling" class="headerlink" title="2 Task Scheduling"></a>2 Task Scheduling</h4><p>我们的论文评估了几种解决独立任务调度问题的技术，也称为任务袋 (BoT) 工作负载调度 [11]。给定一个由任务组成的应用程序，它们之间没有相互依赖，调度挑战包括为每个任务分配最适合其及时执行的计算资源。然而，所提出的评估方法也可以应用于工作流调度，以及具有优先约束的任务[12]。<br>一般来说，在计算机上优化调度任务的问题已被证明是 NP 完全的 [13]，因此有必要依赖启发式算法。</p><p>在分布式计算环境中，挑战在于是否将边缘资源或云资源分配给传入的任务。特别是，在本文中，我们考虑边缘数据中心将配备电池供电的边缘设备，例如智能手机和树莓派。<br>通过处理边缘数据中心内的任务，与传统云数据中心的过度消耗相比，我们可以从降低的能源利用率中受益。边缘数据中心的缺点是它们的处理能力低于云数据中心 [14]，因此，调度策略对于大小可变的任务至关重要。</p><p>Scheduling Objective<br>我们区分了调度策略旨在完成的几个功能：<br>实现高系统吞吐量；<br>最小化系统的响应时间；<br>最小化所有任务的总体完成时间。 （可选）完成工作量的最后期限（如果有）；<br>最大限度地降低边缘云计算服务的成本；<br>最大限度地减少数据中心的能源消耗；<br>有效利用系统资源。</p><p>Scheduling Steps</p><p>调度过程的架构如图 1 所示。在该框架中，边缘云数据中心代理负责工作负载调度，单个队列保存所有待提交执行的就绪任务。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20220330214351487.png" alt="image-20220330214351487"></p><h4 id="Scheduling-Model-for-Heterogeneous-Computing"><a href="#Scheduling-Model-for-Heterogeneous-Computing" class="headerlink" title="Scheduling Model for Heterogeneous Computing"></a>Scheduling Model for Heterogeneous Computing</h4><p>在本节中，我们提出并正式陈述了混合计算环境中独立任务调度的模型。</p>]]></content>
      
      
      <categories>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux部署git与Nodejs</title>
      <link href="/peaky/2022/03/01/8d39085b.html"/>
      <url>/peaky/2022/03/01/8d39085b.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">sudo 权限执行</span></span><br><span class="line">wget https://github.com/git/git/archive/v2.35.1.tar.gz</span><br><span class="line">tar -zxvf git-2.35.1.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装依赖</span></span><br><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br><span class="line"><span class="meta">#</span><span class="language-bash">卸载自动安装的git版本太低</span></span><br><span class="line">yum remove git</span><br><span class="line"><span class="meta">#</span><span class="language-bash">执行编译</span></span><br><span class="line">cd git-2.35.1</span><br><span class="line">make prefix=/usr/local/git all</span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装Git</span></span><br><span class="line">sudo make prefix=/usr/local/git install</span><br><span class="line"><span class="meta">#</span><span class="language-bash">编辑环境变量配置</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">PATH=$PATH:/usr/local/git/bin</span><br><span class="line">export PATH</span><br><span class="line"><span class="meta">#</span><span class="language-bash">初始化配置文件</span></span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="language-bash">验证</span></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">Linux安装Nodejs</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">获取二进制文件</span></span><br><span class="line">wget https://nodejs.org/dist/v16.14.0/node-v16.14.0-linux-x64.tar.xz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">Unzip the binary archive 创建文件目录</span></span><br><span class="line">sudo mkdir -p /usr/local/lib/nodejs</span><br><span class="line">sudo tar -xJvf node-v16.14.0-linux-x64.tar.xz -C /usr/local/lib/nodejs </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">设置环境变量 ~/.profile, 创建文件</span></span><br><span class="line">vi ~/.profile</span><br><span class="line"></span><br><span class="line">VERSION=v16.14.0</span><br><span class="line">DISTRO=linux-x64</span><br><span class="line">export PATH=/usr/local/lib/nodejs/node-$VERSION-$DISTRO/bin:$PATH</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">加载 /.profile配置文件</span></span><br><span class="line">vi ~/.bashrc</span><br><span class="line"></span><br><span class="line">. ~/.profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">验证</span></span><br><span class="line">node -v</span><br><span class="line">npm version</span><br><span class="line">npx -v</span><br></pre></td></tr></table></figure><h4 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">安装Hexo 这里需要切换到root用户或者使用sudo权限</span></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">把hexo命令添加到全局：hexo在nodejs的nodejs/bin目录可以找到hexo命令,方式是采用软连接：</span></span><br><span class="line">ln -s /usr/local/lib/nodejs/node-v16.14.0-linux-x64/bin/hexo /usr/local/bin/hexo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">验证</span></span><br><span class="line">hexo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">部署</span></span><br><span class="line">mkdir hexo</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">启动本地服务：</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">替换已有的Hexo配置 覆盖文件</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">文件地址 https://fengfeng.lanzouj.com/iCJC800ugubi</span></span><br><span class="line">unzip -o hexo.zip -d hexo</span><br></pre></td></tr></table></figure><h4 id="使用基本命令"><a href="#使用基本命令" class="headerlink" title="使用基本命令"></a>使用基本命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">创建新文件</span></span><br><span class="line">hexo new post &quot;new&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">上传文件</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">or 创建新文件 bash new.sh</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">or 上传文件 bash up.sh</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="安装hexo到Linux并部署到Gitee"><a href="#安装hexo到Linux并部署到Gitee" class="headerlink" title="安装hexo到Linux并部署到Gitee"></a>安装hexo到Linux并部署到Gitee</h2><blockquote><p>接上文安装Git和Nodejs之后的记录<br>&lt;! – more –&gt;</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">更换国内淘宝源 npm    其实不能用，我也不知道为啥</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">// 配置后可通过下面方式来验证是否成功</span><br><span class="line">npm config get registry</span><br><span class="line">// 或</span><br><span class="line">npm info express</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">真SB 不好用</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">注：依赖hexo-renderer-sass安装时容易报错，很可能是国内网络问题，请尝试使用代理或者切换至NPM的国内镜像源安装。</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">最终解决方案是安装python 2.7</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">RockyLinux中安装python2.7</span></span><br><span class="line">dnf install python2</span><br><span class="line">sudo rm -rf /usr/bin/python</span><br><span class="line">sudo ln -s /usr/bin/python2.7 /usr/bin/python</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">安装 hexo 主题与渲染器 到hexo目录下</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant </span><br><span class="line"></span><br><span class="line">npm install hexo-renderer-pug --save  </span><br><span class="line">npm install hexo-renderer-sass --save  </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">注：依赖hexo-renderer-sass安装时容易报错，很可能是国内网络问题，请尝试使用代理或者切换至NPM的国内镜像源安装。</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">npm install dart-sass --save</span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash">我选择使用 dart-sass 来代替 hexo-renderer-sass</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">编辑Hexo目录下的 _config.yml，将theme的值改为maupassant。</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">最终解决方案是安装python 2.7 node版本14.14.0</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">RockyLinux中安装python2.7</span></span><br><span class="line">dnf install python2</span><br><span class="line">ln -s /usr/local/python-2.7.9/bin/python2.7 /usr/bin/python</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署到gitee 在Blog目录下安装一个hexo部署插件</span></span><br><span class="line">npm install --save hexo-deployer-git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建电脑公玥</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;git@gitee.com&quot;</span> </span><br><span class="line"><span class="comment"># 接着完成三次回车，即可生成 ssh密钥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取生成的 public 密钥</span></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br><span class="line"><span class="comment"># 复制生成后的 ssh 密钥，通过仓库主页 「管理」—「部署公钥管理」—「添加部署个人公钥」， 添加生成的 public 密钥</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Hexo目录下的 _config.yml，</span></span><br><span class="line"><span class="comment"># Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="comment"># git@gitee.com:用户名/仓库名.git</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@gitee.com:Peaky2022/Peaky.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br><span class="line">npm install valine --save</span><br><span class="line">npm install hexo-wordcount</span><br><span class="line">npm install hexo-generator-search</span><br><span class="line">npm install hexo-renderer-sass --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久地址插件配置</span></span><br><span class="line">permalink: posts/:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  rep: hex    <span class="comment"># 进制：dec(default) and hex</span></span><br><span class="line"><span class="comment">#add v7.8.0</span></span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  trailing_html: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br><span class="line">  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MIUI教程</title>
      <link href="/peaky/2021/08/27/87d44b9d.html"/>
      <url>/peaky/2021/08/27/87d44b9d.html</url>
      
        <content type="html"><![CDATA[<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><blockquote><p>手机数据会全部清除，包括所有照片，微信聊天，各个软件</p><p>需要提前备份好数据，1.小米云空间备份   2.MIUI自带备份与恢复，备份后拷贝到电脑</p></blockquote><p><strong>数据会全部清除！数据会全部清除！数据会全部清除！</strong> 数据无价，丢失数据自负</p><span id="more"></span><h4 id="打钱-支付宝还是微信"><a href="#打钱-支付宝还是微信" class="headerlink" title="打钱 支付宝还是微信"></a>打钱 支付宝还是微信</h4><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210827151051221.png" alt="image-20210827151051221"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210827151104840.png" alt="image-20210827151104840"></p><p>远程</p><p><a href="https://fengfeng.lanzoui.com/i1yLGtfgqri">todesk</a></p><h4 id="解BL锁"><a href="#解BL锁" class="headerlink" title="解BL锁"></a>解BL锁</h4><p><a href="http://www.miui.com/unlock/index.html">解BL官网</a></p><p>首先绑定好<strong>小米账号</strong></p><p>步骤如下：</p><p>1.设置—我的设备—全部参数—MIUI版本   连续点击5次</p><p>   <img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210827151606258.png" alt="image-20210827151606258"></p><p>2.设置—更多设置—开发者选项—<strong>OEM解锁勾选</strong>上—<strong>设备解锁状态</strong>—<strong>绑定小米账号</strong>—绑定</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210827163337898.png" alt="image-20210827163337898"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210827163412930.png" alt="image-20210827163412930"></p><p>打开<a href="https://fengfeng.lanzoui.com/iZaGLt8mbgb">解锁工具 </a> </p><p>登入小米账户</p><p>手机关机        按住  <strong>音量减键</strong> 和 <strong>开机键</strong> 直到出现一个兔子在修手机</p><p>开始解锁</p><h4 id="MIUI线刷"><a href="#MIUI线刷" class="headerlink" title="MIUI线刷"></a>MIUI线刷</h4><p>首先下载MIUI刷机包，MIUI线刷刷机包以 .tgz结尾 并且解压后为tar在解压后才能刷入</p><p>几个下载刷机包的网站<a href="http://www.miui.com/download-312.html">官方</a>            <a href="https://xiaomirom.com/">xiaomirom</a>     <a href="https://github.com/mooseIre/update_miui_ota">github</a>       <a href="https://roms.miuier.com/">发烧友</a>           <a href="https://miuiver.com/">签到币</a></p><p>下载解压后</p><p>打开<a href="https://fengfeng.lanzoui.com/i9Enbt8mh2d">线刷工具</a></p><h4 id="MIUI卡刷"><a href="#MIUI卡刷" class="headerlink" title="MIUI卡刷"></a>MIUI卡刷</h4><p><a href="https://fengfeng.lanzoui.com/iyojit8rd5c">TWRP</a></p><p><a href="https://archive.orangefox.download/OrangeFox-Stable/">橙狐镜像站</a>  </p><p><a href="https://orangefox.download/en/device/raphael">橙狐官方站</a></p><p><a href="https://fengfeng.lanzoui.com/iPawft8ovqd">REC刷入工具</a>   :将rec替换为recovery.img 运行一键刷入</p><p>下载  .zip 刷机包刷入</p><p>格式化data分区</p><p>双清</p>]]></content>
      
      
      <categories>
          
          <category> MIUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MIUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/peaky/2021/06/01/9211474f.html"/>
      <url>/peaky/2021/06/01/9211474f.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>record all common commands</p></blockquote><span id="more"></span><h4 id="VSCode-remote连接服务器"><a href="#VSCode-remote连接服务器" class="headerlink" title="VSCode remote连接服务器"></a>VSCode remote连接服务器</h4><ol><li><p>安装remote development插件</p></li><li><p>配置公玥登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">在本地的 user/xxx/.ssh/ 下执行生成公玥命令</span></span><br><span class="line"></span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">注意只保留第一个名字 id_rs 其余均回车</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">上传到服务器 并添加到密钥登录</span></span><br><span class="line"></span><br><span class="line">scp id_rs.pub 用户名@IP地址:/tmp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">配置 并修改权限</span></span><br><span class="line"> </span><br><span class="line">cat /tmp/id_rs.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在VSCode中修改配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Host 名称</span><br><span class="line">    HostName IP</span><br><span class="line">    User 用户名</span><br><span class="line">    IdentityFile &quot;C:\Users\yufen\.ssh\id_rs&quot; # 公玥文件地址</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h4 id="在VSCode中配置conda"><a href="#在VSCode中配置conda" class="headerlink" title="在VSCode中配置conda"></a>在VSCode中配置conda</h4><ol><li>安装 python 插件</li><li>按“shift+ctrl+p”,搜索 Select Interpreter: 选择并重启VS code 即可。</li><li></li></ol><h4 id="权限相关"><a href="#权限相关" class="headerlink" title="权限相关"></a>权限相关</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">创建用户组</span> </span><br><span class="line">sudo groupadd 组名</span><br><span class="line"><span class="meta">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"></span><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">更改文件的所属用户组</span></span><br><span class="line">sudo chgrp -R 组名 目录</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">更改文件夹的权限 -R 递归</span></span><br><span class="line">sudo chmod 770 -R 目录/文件名</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">为用户添加用户组</span></span><br><span class="line">sudo usermod -a -G 用户名 用户组</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">新建用户并加入用户组</span></span><br><span class="line">sudo adduser -u 用户名 -G 用户组</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看torch版本，cuda是否可用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="built_in">print</span>(torch.__version__)</span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available())</span><br></pre></td></tr></table></figure><h4 id="UPC-GPU账号认证服务没有开启，"><a href="#UPC-GPU账号认证服务没有开启，" class="headerlink" title="UPC GPU账号认证服务没有开启，"></a>UPC GPU账号认证服务没有开启，</h4><p>开启方法是：使用root登录master，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -X io01</span><br><span class="line">vmware</span><br></pre></td></tr></table></figure><p>开启服务，关闭界面（后台运行vmware）</p><h4 id="SH"><a href="#SH" class="headerlink" title="SH"></a>SH</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">亮屏状态下：screen=`dumpsys window policy | grep mIsShowing | grep <span class="string">&#x27;false&#x27;</span>`   亮屏下有返回值mIsShowing=<span class="literal">false</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">返回</span></span><br><span class="line">input keyevent BACK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">am force-stop com.eg.android.AlipayGphone</span><br><span class="line">sleep 3</span><br><span class="line">am start com.eg.android.AlipayGphone/.FastStartActivity</span><br><span class="line">sleep 3</span><br><span class="line">am startservice com.eg.android.AlipayGphone/com.alipay.android.launcher.service.LauncherService</span><br><span class="line">sleep 1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">启动与停止服务</span></span><br><span class="line">am startservice com.eg.android.AlipayGphone/com.alipay.android.launcher.service.LauncherService</span><br><span class="line">am stopservice com.eg.android.AlipayGphone/com.alipay.android.launcher.service.LauncherService</span><br><span class="line"></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/system/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">唤醒屏幕的脚本</span></span><br><span class="line">LogDir=&quot;/sdcard/Android/Peak/run.log&quot;</span><br><span class="line">startTime=$(date +%m/%d-%H:%M:%S) </span><br><span class="line">echo $startTime&quot; : Start Keep Screen ON &quot; &gt;&gt; $LogDir</span><br><span class="line">screen=`dumpsys window policy | grep mIsShowing | grep &#x27;false&#x27;`   </span><br><span class="line"></span><br><span class="line">if [ -z $screen ]</span><br><span class="line">then</span><br><span class="line">  echo &quot; Now screen is OFF,try to start！&quot; &gt;&gt; $LogDir</span><br><span class="line">  input keyevent 26</span><br><span class="line">  sleep 1</span><br><span class="line">  input swipe 800 2000 800 1200</span><br><span class="line">  sleep 1</span><br><span class="line">else</span><br><span class="line">  echo &quot; Now screen is On,it&#x27;s OK! &quot; &gt;&gt; $LogDir</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">com.eg.android.AlipayGphone</span><br><span class="line"></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/system/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">唤起支付宝脚本</span></span><br><span class="line">LogDir=&quot;/sdcard/Android/Peak/run.log&quot;</span><br><span class="line">startTime=$(date +%m/%d-%H:%M:%S) </span><br><span class="line">echo $startTime&quot; : Start Ali Now &quot; &gt;&gt; $LogDir</span><br><span class="line">COUNT=$(ps -ef |grep payGphone |grep -v &quot;grep&quot; |wc -l)</span><br><span class="line">screen=`dumpsys window policy | grep mIsShowing | grep &#x27;false&#x27;`   </span><br><span class="line"></span><br><span class="line">if [ -z $screen ]</span><br><span class="line">then</span><br><span class="line">  echo &quot; Now screen is OFF,try to start！&quot; &gt;&gt; $LogDir</span><br><span class="line">  input keyevent 26</span><br><span class="line">  sleep 1</span><br><span class="line">  input swipe 800 2000 800 1200</span><br><span class="line">  sleep 1</span><br><span class="line">else</span><br><span class="line">  echo &quot; Now screen is On,it&#x27;s OK! &quot; &gt;&gt; $LogDir</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ $COUNT -ne 0 ] ;then</span><br><span class="line">    echo &quot; Ali is runing!&quot; &gt;&gt; $LogDir</span><br><span class="line">    am stopservice com.eg.android.AlipayGphone/com.alipay.android.launcher.service.LauncherService</span><br><span class="line">    sleep 1</span><br><span class="line">    am startservice com.eg.android.AlipayGphone/com.alipay.android.launcher.service.LauncherService</span><br><span class="line">else</span><br><span class="line">    echo &quot; Ali is not run, try to start！&quot; &gt;&gt; $LogDir</span><br><span class="line">    am start com.eg.android.AlipayGphone/.FastStartActivity</span><br><span class="line">    sleep 1</span><br><span class="line">    input keyevent BACK</span><br><span class="line">    am startservice com.eg.android.AlipayGphone/com.alipay.android.launcher.service.LauncherService</span><br><span class="line">    sleep 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/system/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">关闭耗电应用 准备睡觉 QQ 微信 音乐 支付宝 并清理垃圾</span></span><br><span class="line">LogDir=&quot;/sdcard/Android/Peak/run.log&quot;</span><br><span class="line">startTime=$(date +%m/%d-%H:%M:%S) </span><br><span class="line">echo $startTime&quot; : Start Sleep to stop APP&quot; &gt;&gt; $LogDir</span><br><span class="line"></span><br><span class="line">am force-stop com.eg.android.AlipayGphone</span><br><span class="line">am force-stop com.tencent.mm</span><br><span class="line">am force-stop com.tencent.mobileqq</span><br><span class="line">am force-stop com.netease.cloudmusic</span><br><span class="line"></span><br><span class="line">LogDir=&quot;/sdcard/Android/Peak/run.log&quot;</span><br><span class="line">startTime=$(date +%m/%d-%H:%M:%S) </span><br><span class="line">echo $startTime&quot; : Fuck file&quot; &gt;&gt; $LogDir</span><br><span class="line"><span class="meta"># </span><span class="language-bash"> 加载配置文件</span></span><br><span class="line">source /data/adb/modules/CrondStart/sh/FUCK-XXX.conf</span><br><span class="line"><span class="meta"># </span><span class="language-bash"> 读取配置文件</span></span><br><span class="line">for i in $sdcard $Download $Android $SelfDefinition; do</span><br><span class="line"> rm -rf $i ; </span><br><span class="line">done</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/system/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">启动常用软件放到后台并锁屏</span></span><br><span class="line">LogDir=&quot;/sdcard/Android/Peak/run.log&quot;</span><br><span class="line">startTime=$(date +%m/%d-%H:%M:%S) </span><br><span class="line">echo $startTime&quot; : Start some APP to background &quot; &gt;&gt; $LogDir</span><br><span class="line">screen=`dumpsys window policy | grep mIsShowing | grep &#x27;false&#x27;`   </span><br><span class="line">am start com.tencent.mm/.ui.LauncherUI</span><br><span class="line">sleep 10</span><br><span class="line">input keyevent BACK</span><br><span class="line">am start com.netease.cloudmusic/.activity.LoadingActivity</span><br><span class="line">sleep 10</span><br><span class="line">input keyevent BACK</span><br><span class="line">am force-stop com.netease.cloudmusic</span><br><span class="line">am force-stop com.eg.android.AlipayGphone</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ -z $screen ]</span><br><span class="line">then</span><br><span class="line">  echo &quot; Now screen is OFF,done！&quot; &gt;&gt; $LogDir</span><br><span class="line">else</span><br><span class="line">  echo &quot; Now screen is On,take it OFF! &quot; &gt;&gt; $LogDir</span><br><span class="line">  input keyevent 26</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Win11关闭小组件"><a href="#Win11关闭小组件" class="headerlink" title="Win11关闭小组件"></a>Win11关闭小组件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">管理员权限打开powershell，输入以下命令：</span></span><br><span class="line">Get-AppxPackage -Name &quot;MicrosoftWindows.Client.WebExperience&quot; -AllUsers | Remove-AppxPackage -AllUsers</span><br></pre></td></tr></table></figure><h3 id="ssh远程链接服务器，避免因断网而中断训练de-方法"><a href="#ssh远程链接服务器，避免因断网而中断训练de-方法" class="headerlink" title="ssh远程链接服务器，避免因断网而中断训练de 方法"></a>ssh远程链接服务器，避免因断网而中断训练de 方法</h3><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">1 链接服务器.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">2 利用screen 命令 ，重起一个新的screen.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">新screen的名字，可以任起</span></span><br><span class="line"></span><br><span class="line">screen -S name </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">3 开始训练.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">4 可以断开terminal，此时训练不受影响</span> </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">恢复</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">1 启动terminal，查看存在的screen的命令.</span></span><br><span class="line"></span><br><span class="line">screen -ls</span><br><span class="line"></span><br><span class="line">screen -r 30362</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">2 断开当前的screen.</span></span><br><span class="line">按 Ctrl + A， 然后 K 键 然后 y 键</span><br></pre></td></tr></table></figure><h3 id="杀掉端口"><a href="#杀掉端口" class="headerlink" title="杀掉端口"></a>杀掉端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fuser -k -n tcp 5000</span><br></pre></td></tr></table></figure><h3 id="Vmware-workstation-16许可证"><a href="#Vmware-workstation-16许可证" class="headerlink" title="Vmware workstation 16许可证"></a>Vmware workstation 16许可证</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ZF3R0-FHED2-M80TY-8QYGC-NPKYF</span><br><span class="line">YF390-0HF8P-M81RQ-2DXQE-M2UT6</span><br><span class="line">ZF71R-DMX85-08DQY-8YMNC-PPHV8</span><br><span class="line"></span><br><span class="line">前面的如果已经失效，用下面的</span><br><span class="line"></span><br><span class="line">FA1M0-89YE3-081TQ-AFNX9-NKUC0</span><br></pre></td></tr></table></figure><h4 id="CentOS-8安装docker"><a href="#CentOS-8安装docker" class="headerlink" title="CentOS 8安装docker"></a>CentOS 8安装docker</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">更新yum 安装依赖</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">添加yum源</span></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装</span></span><br><span class="line">yum install docker-ce</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">启动并设置开机自启动</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">验证</span></span><br><span class="line">docker version</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装青龙面板</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装nvjdc   目录之间映射关系</span></span><br><span class="line">docker run   --name nvjdc -p 5702:80 -d  -v  /home/qyf/workspace/nvjdc/Config.json:/app/Config/Config.json:ro \-v /home/qyf/workspace/nvjdc/.local-chromium:/app/.local-chromium  \-it --privileged=true  nolanhzy/nvjdc:0.8</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装chromium</span></span><br><span class="line">docker container ls -a</span><br><span class="line"> yum install unzip</span><br><span class="line"> cd /home/qyf/workspace/nvjdc/</span><br><span class="line"> mkdir -p  .local-chromium/Linux-884014 &amp;&amp; cd .local-chromium/Linux-884014</span><br><span class="line"> wget https://mirrors.huaweicloud.com/chromium-browser-snapshots/Linux_x64/884014/chrome-linux.zip &amp;&amp; unzip chrome-linux.zip</span><br><span class="line"> unzip chrome-linux.zip</span><br><span class="line"> docker restart nvjdc</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">reboot后如何重新启用青龙面板</span> </span><br><span class="line">docker exec -it qinglong bash</span><br><span class="line">cd /ql/ninja/backend</span><br><span class="line">pm2 start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker exec -it qinglong nginx -c /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">查看防火墙某个端口是否开放</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --query-port=3306/tcp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">开放防火墙端口3306</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">注意：开放端口后要重启防火墙生效</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">重启防火墙</span></span><br><span class="line"></span><br><span class="line">systemctl restart firewalld</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">关闭防火墙端口</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --remove-port=3306/tcp --permanent</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">查看防火墙状态</span></span><br><span class="line"></span><br><span class="line">systemctl status firewalld</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">关闭防火墙</span></span><br><span class="line"></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">打开防火墙</span></span><br><span class="line"></span><br><span class="line">systemctl start firewalld</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">开放一段端口</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --add-port=40000-45000/tcp --permanent</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">查看开放的端口列表</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">查看被监听(Listen)的端口</span></span><br><span class="line"></span><br><span class="line">netstat -lntp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">检查端口被哪个进程占用</span></span><br><span class="line"></span><br><span class="line">netstat -lnp|grep 3306</span><br></pre></td></tr></table></figure><h3 id="UPC"><a href="#UPC" class="headerlink" title="UPC"></a>UPC</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">监控服务启动  status状态</span></span><br><span class="line">/etc/init.d/jhinsight-jhdc start</span><br></pre></td></tr></table></figure><h4 id="Conda-迁移"><a href="#Conda-迁移" class="headerlink" title="Conda 迁移"></a>Conda 迁移</h4><p>Step1：在想要迁移的虚拟环境sample中安装conda-pack工具包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source activate sample</span><br><span class="line">conda install conda-pack</span><br><span class="line">conda install -c conda-forge conda-pack</span><br></pre></td></tr></table></figure><p>或者采用pip安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install conda-pack  #pip install git+https://github.com/conda/conda-pack.git</span><br></pre></td></tr></table></figure><p>Step2：将当前虚拟环境sample打包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda-pack</span><br><span class="line">ls</span><br><span class="line"><span class="meta"># </span><span class="language-bash">example.tar.gz 即为打包完成的输出文件</span></span><br><span class="line">source deactivate</span><br></pre></td></tr></table></figure><p>Step3：将example.tar.gz迁移到其他路径或其他机器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv example.tar.gz ~/computer_two</span><br></pre></td></tr></table></figure><p>Step4：在另一台机器上解包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd ~/computer_two/</span><br><span class="line"><span class="meta"># </span><span class="language-bash">example.tar.gz 即为迁移过来的环境包</span></span><br><span class="line">mkdir myenv</span><br><span class="line">tar -xf example.tar.gz -C myenv</span><br><span class="line">ls</span><br><span class="line"><span class="meta"># </span><span class="language-bash">example.tar.gz myenv</span></span><br></pre></td></tr></table></figure><p>Step5：激活虚拟环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source myenv/bin/activate</span><br></pre></td></tr></table></figure><h2 id="修改IP地址"><a href="#修改IP地址" class="headerlink" title="修改IP地址"></a>修改IP地址</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">ip addr  #查看当前网卡名</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">- 修改网卡配置文件</span></span><br><span class="line"></span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens192 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BOOTPROTO=static # 网络模式 -- 固定</span><br><span class="line">ONBOOT=yes # 重启更新</span><br><span class="line">IPADDR=192.168.8.75 # 配置当前节点 IP</span><br><span class="line">NETMASK=255.255.255.0 # 子网掩码</span><br><span class="line">GATEWAY=192.168.1.1 # 网关</span><br><span class="line">DNS1=8.8.8.8 # dns</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">创建用户加入用户组</span></span><br><span class="line"></span><br><span class="line">sudo adduser user1</span><br><span class="line"><span class="meta">#</span><span class="language-bash">为用户创建密码方法如下</span></span><br><span class="line">sudo passwd user1</span><br><span class="line"><span class="meta">#</span><span class="language-bash">删除用户</span></span><br><span class="line">sudo userdel -r user1</span><br><span class="line"><span class="meta">#</span><span class="language-bash">为用户添加sudo</span></span><br><span class="line">sudo usermod -a -G wheel user1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">重启网卡</span></span><br><span class="line"></span><br><span class="line">systemctl restart network</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="版本-内核"><a href="#版本-内核" class="headerlink" title="版本 内核"></a>版本 内核</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">unme -a #查看内核版本</span><br><span class="line"></span><br><span class="line">CentOS Linux release 8.4.2105</span><br><span class="line"></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line"></span><br><span class="line">cat /etc/*release #查看系统版本</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="GPU运行"><a href="#GPU运行" class="headerlink" title="GPU运行"></a>GPU运行</h2><p>nvidia-smi</p><h2 id="配置vnc"><a href="#配置vnc" class="headerlink" title="配置vnc"></a>配置vnc</h2><p><a href="https://www.cnblogs.com/xuanbjut/p/14289178.html">https://www.cnblogs.com/xuanbjut/p/14289178.html</a></p><p>添加用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/tigervnc/vncserver.users</span><br><span class="line"></span><br><span class="line">:1=qyf   #对应5901端口</span><br></pre></td></tr></table></figure><p>拷贝模板</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@1.service</span><br><span class="line"><span class="meta"># </span><span class="language-bash">@1.service 对应：1用户</span></span><br></pre></td></tr></table></figure><p>设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vncpasswd</span><br><span class="line"></span><br><span class="line">sudo systemctl start vncserver@:1  #对应：1用户</span><br><span class="line"></span><br><span class="line">设置开机启动</span><br><span class="line">sudo systemctl enable vncserver@:1</span><br></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start vncserver@:1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">sudo systemctl start vncserver@:1.service</span></span><br></pre></td></tr></table></figure><p>查看端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netstat -tulpn | grep vnc</span><br></pre></td></tr></table></figure><p>配置防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --add-service vnc-server</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="miniconda安装"><a href="#miniconda安装" class="headerlink" title="miniconda安装"></a>miniconda安装</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/</a></p><p>下载conda</p><h2 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h2><p>jps</p><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><p>sudo systemctl stop firewalld</p><p>start开启</p><h2 id="windows-minconda安装"><a href="#windows-minconda安装" class="headerlink" title="windows minconda安装"></a>windows minconda安装</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/</a></p><p><a href="https://zhuanlan.zhihu.com/p/102564715">https://zhuanlan.zhihu.com/p/102564715</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">首先在conda的终端激活自己想要迁移的环境</span><br><span class="line"></span><br><span class="line">conda activate your_env</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后生成自己的环境文件</span><br><span class="line"></span><br><span class="line">conda env export &gt; your_env.yaml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在另一台机器上的conda终端克隆迁移的环境即可</span><br><span class="line"></span><br><span class="line">conda env create -f your_env.yaml</span><br><span class="line">pip导出安装的库到requirements.txt</span><br><span class="line"></span><br><span class="line"> pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><h2 id="GPU路径"><a href="#GPU路径" class="headerlink" title="GPU路径"></a>GPU路径</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">currenth = <span class="string">&#x27;/hpcfiles/users/qyf/project/DeepRL_Algorithms-master&#x27;</span></span><br><span class="line">sys.path.append(currenth)</span><br></pre></td></tr></table></figure><h2 id="快速跳转到上N层目录"><a href="#快速跳转到上N层目录" class="headerlink" title="快速跳转到上N层目录"></a>快速跳转到上N层目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">结尾添加别名</span><br><span class="line">alias cd1=&#x27;cd ..&#x27;</span><br><span class="line">alias cd2=&#x27;cd ../..&#x27;</span><br><span class="line">alias cd3=&#x27;cd ../../..&#x27;</span><br><span class="line">alias cd4=&#x27;cd ../../../..&#x27;</span><br><span class="line">alias cd5=&#x27;cd ../../../../..&#x27;</span><br><span class="line">alias cd6=&#x27;cd ../../../../../..&#x27;</span><br><span class="line">使修改生效</span><br><span class="line">source .bashrc  或 source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="GPU任务"><a href="#GPU任务" class="headerlink" title="GPU任务"></a>GPU任务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">jhosts attrib -l 查看到所有资源包含cpu、内存、显卡等资源</span><br><span class="line">jjobs 不使用参数，显示目前正在排队或运行的作业 -a 显示最近完成的作业及正在运行或排队的作业 #-l 作业号 显示指定作业的详细信息</span><br><span class="line">jctrl kill &lt;作业号&gt; 强制杀掉指定的作业</span><br><span class="line">&lt;jsub&gt;： 提交作业</span><br><span class="line">&lt;-q normal&gt;： 指定 normal 队列</span><br><span class="line">&lt;-n 1&gt;： 指定该作业所需 1 核</span><br><span class="line">&lt;-e error.%J&gt;： 错误信息输出到 error.%J 文件中</span><br><span class="line">&lt;-o output.%J&gt;： 正确信息输出到 output.%J 文件中</span><br><span class="line">&lt;-J my_job&gt;： 指定作业名字为 my_job</span><br><span class="line">&lt;test&gt;： 执行的脚本</span><br><span class="line">提交任务</span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -q normal</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -n 2</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -e error.%J</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -o output.%J</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -J qyf_task</span></span><br><span class="line">source /apps/software/anaconda3/bin/activate torch</span><br><span class="line">python /hpcfiles/users/qyf/project/DeepRL_Algorithms-master/Algorithms/pytorch/PPO/main.py &gt;&gt; train.log</span><br><span class="line"></span><br><span class="line">jsub &lt;./up.sh</span><br></pre></td></tr></table></figure><h2 id="gym环境"><a href="#gym环境" class="headerlink" title="gym环境"></a>gym环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">安装box2d</span></span><br><span class="line">pip install gym </span><br><span class="line">conda install swig</span><br><span class="line">pip install box2d box2d-kengz --user</span><br></pre></td></tr></table></figure><h2 id="HTML网页网课加速助手"><a href="#HTML网页网课加速助手" class="headerlink" title="HTML网页网课加速助手"></a>HTML网页网课加速助手</h2><p><strong>document.querySelector(‘video’).playbackRate &#x3D; 4.0;</strong></p><h2 id="防火墙-1"><a href="#防火墙-1" class="headerlink" title="防火墙"></a>防火墙</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">1.启动防火墙</span> </span><br><span class="line">systemctl start firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">2.禁用防火墙</span> </span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">3.设置开机启动</span></span><br><span class="line">systemctl enable firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">4.停止并禁用开机启动</span> </span><br><span class="line">sytemctl disable firewalld</span><br><span class="line"><span class="meta"># </span><span class="language-bash">5.重启防火墙</span> </span><br><span class="line">firewall-cmd --reload</span><br><span class="line"><span class="meta">#</span><span class="language-bash">end</span></span><br></pre></td></tr></table></figure><h2 id="安装JAVA"><a href="#安装JAVA" class="headerlink" title="安装JAVA"></a>安装JAVA</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib</span><br><span class="line">sudo mkdir jvm #创建/usr/lib/jvm目录用来存放JDK文件</span><br><span class="line">sudo tar -zxvf ./jdk-8u291-linux-x64.tar.gz -C /usr/lib/jvm #解压</span><br><span class="line">vim ~/.bashrc #系统变量</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_291</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line">source ~/.bashrc#立即生效</span><br><span class="line"><span class="meta">#</span><span class="language-bash">end</span></span><br></pre></td></tr></table></figure><h2 id="ssh-配置免密登录"><a href="#ssh-配置免密登录" class="headerlink" title="ssh 配置免密登录"></a>ssh 配置免密登录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cd ~/.ssh/        </span><br><span class="line"><span class="meta"># </span><span class="language-bash">若没有该目录，请先执行一次ssh localhost</span></span><br><span class="line">ssh-keygen -t rsa    </span><br><span class="line"><span class="meta"># </span><span class="language-bash">会有提示，都按回车即可</span></span><br><span class="line">cat ./id_rsa.pub &gt;&gt; ./authorized_keys  </span><br><span class="line"><span class="meta"># </span><span class="language-bash">加入授权</span></span><br><span class="line">chmod g-w ~ </span><br><span class="line"><span class="meta">#</span><span class="language-bash">修改权限SSH不希望home目录和~/.ssh目录对组有写权限</span></span><br><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br><span class="line"><span class="meta">#</span><span class="language-bash">结束</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="linux用户创建"><a href="#linux用户创建" class="headerlink" title="linux用户创建"></a>linux用户创建</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser user1</span><br><span class="line"><span class="meta">#</span><span class="language-bash">为用户创建密码方法如下</span></span><br><span class="line">sudo passwd user1</span><br><span class="line"><span class="meta">#</span><span class="language-bash">删除用户</span></span><br><span class="line">sudo userdel -r user1</span><br><span class="line"><span class="meta">#</span><span class="language-bash">为用户添加sudo</span></span><br><span class="line">sudo usermod -a -G wheel user1</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkdir a #创建文件夹</span><br><span class="line">rmdir a #删除文件夹</span><br><span class="line">mv a b#改名，移动</span><br><span class="line">rm a #删除</span><br><span class="line">cp a b #复制文件或目录</span><br><span class="line">cat a #查看文件内容 </span><br><span class="line">touch a #修改文件时间或创建新文件</span><br><span class="line">tac a #反向查看文件内容</span><br><span class="line"></span><br><span class="line">grep -i &#x27;user&#x27; ~/.bashrc#从文件内查找字符串</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nvcc -V #查看cuda版本</span><br><span class="line">crontab -l #查看当前定时任务</span><br><span class="line">crontab -e #编辑当前定时任务</span><br><span class="line">conda create -n env-name python=2.7  #conda新建一个虚拟环境-n env-name是设置新建环境的名字，特定python版本</span><br><span class="line">conda activate env-name #激活指定虚拟环境</span><br><span class="line">conda deactivate #离开虚拟环境</span><br><span class="line">conda env list #可以列出你所创建的所有环境conda info --envs</span><br><span class="line">conda env remove -n env-name #删除指定的环境 </span><br></pre></td></tr></table></figure><p>使用如下Conda命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env2 --clone conda-env1</span><br></pre></td></tr></table></figure><p>这里conda-env2是新创建的Conda环境，conda-env1是被复制的Conda环境，<br>复制完成后，两个环境的Python配置是完全相同的；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pip install package -i https://pypi.tuna.tsinghua.edu.cn/simple some-package #使用清华下载</span><br><span class="line">conda config --remove-key channels # 换回默认源(清除所有用户添加的镜像源路径，只保留默认的路径)</span><br><span class="line"><span class="meta">#</span><span class="language-bash">配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">全局的是在/etc目录下（/etc/profile）/etc/profile</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">用户个人的是在用户的家目录下（~/.profile）个人：<span class="built_in">cat</span> ~/.bash_profile</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">用户启动加载文件（~/.bashrc）<span class="built_in">cat</span> ~/.bashrc</span></span><br><span class="line">conda install --channel https://conda.anaconda.org/conda-forge pandas-alive=0.2.3conda install pandas_alive -c conda-forge</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 镜像源</span></span></span><br><span class="line">conda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ #删除镜像源,命令</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --set show_channel_urls yes</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 找不到模块</span></span></span><br><span class="line"></span><br><span class="line"> ModuleNotFoundError: No module named &#x27;XXX&#x27;  https://www.cnblogs.com/dreamyu/p/7889959.html</span><br><span class="line">import os,sys</span><br><span class="line">curPath = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">rootPath = os.path.split(curPath)[0]</span><br><span class="line">sys.path.append(rootPath)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">GPU上传作业</span></span><br><span class="line">jjobs -a#查看作业</span><br><span class="line">jsub &lt; ./task.sh#提交作业</span><br><span class="line"><span class="meta">#</span><span class="language-bash">提交作业</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB  -q normal</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -n 32</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -e error.%J</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -o output.%J</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">JSUB -J qyf_test</span></span><br><span class="line">python /hpcfiles/users/qyf/project/DC-DRL/common_modules/agent.py &gt; log.log</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">显示变量</span></span><br><span class="line">echo $PATH</span><br><span class="line">方法1</span><br><span class="line"><span class="meta">#</span><span class="language-bash">配置完后可以通过<span class="built_in">echo</span> <span class="variable">$PATH</span>查看配置结果。</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">生效方法：立即生效</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">有效期限：临时改变，只能在当前的终端窗口中有效，当前窗口关闭后就会恢<span class="comment">#复原有的path配置</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">用户局限：仅对当前用户</span></span><br><span class="line">export PATH=/usr/local/bin:$PATH</span><br><span class="line">方法2</span><br><span class="line"><span class="meta">#</span><span class="language-bash">通过修改.bashrc文件:</span></span><br><span class="line">vim ~/.bashrc </span><br><span class="line"><span class="meta">#</span><span class="language-bash">在最后一行添上：</span></span><br><span class="line">export PATH=/usr/local/eclipse:$PATH</span><br><span class="line"><span class="meta">#</span><span class="language-bash">生效方法：（有以下两种）</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">1、关闭当前终端窗口，重新打开一个新终端窗口就能生效</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">2、输入“<span class="built_in">source</span> ~/.bashrc”命令，立即生效</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">有效期限：永久有效</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">用户局限：仅对当前用户</span></span><br><span class="line">方法3</span><br><span class="line"><span class="meta">#</span><span class="language-bash">通过修改profile文件:</span></span><br><span class="line">vim /etc/profile</span><br><span class="line">export PATH=/usr/local/bin:$PATH</span><br><span class="line"><span class="meta">#</span><span class="language-bash">生效方法：系统重启</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">有效期限：永久有效</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">用户局限：对所有用户</span></span><br><span class="line">方法4</span><br><span class="line"><span class="meta">#</span><span class="language-bash">通过修改environment文件:</span></span><br><span class="line">vim /etc/environment</span><br><span class="line">在PATH=&quot;/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin&quot;中加入 </span><br><span class="line">&quot;:/usr/local/bin&quot;</span><br><span class="line"><span class="meta">#</span><span class="language-bash">生效方法：系统重启</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">有效期限：永久有效</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">用户局限：对所有用户</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 常使用的tar压缩命令为</span></span>  </span><br><span class="line">tar -zcvf  压缩名.tar.gz  文件/目录</span><br><span class="line"></span><br><span class="line">.tar.gz文件，这种文件是tar文件的压缩文件，可以使用tar命令进行解压。解压：</span><br><span class="line">tar -zxvf pythontab.tar.gz</span><br><span class="line">单纯的.gz文件解压，这种文件不可以使用tar命令解压，需要用gunzip解压，使用命令gzip</span><br><span class="line">解压：gzip -d pythontab.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">使用zip进行压缩的时候命令格式为</span>   </span><br><span class="line">zip -q -r 压缩包名.zip   目录/文件名</span><br><span class="line"><span class="meta">#</span><span class="language-bash">解压</span></span><br><span class="line">unzip</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">解压文件tgz</span><br><span class="line">例如文件名为: yyyy.tgz</span><br><span class="line">先使用GZIP解压为TAR文件</span><br><span class="line">gzip -dv yyyy.tgz</span><br><span class="line">同时解压后生成yyyy.tar文件</span><br><span class="line">再使用tar解压yyyy.tar文件</span><br><span class="line">tar xvf yyyy.tar</span><br><span class="line">解压下边的命令：</span><br><span class="line">gzip -dv R220-ESiVision-WebEnv-X86-Linux.tgz</span><br><span class="line">tar xvf R220-ESiVision-WebEnv-X86-Linux.tar</span><br><span class="line"></span><br><span class="line">压缩：tgz文件。</span><br><span class="line">tar -czvf R220-ESiVision-WebEnv-X86-Linux.tgz apache-tomcat-5.5.23 jdk1.5.0_12 net-snmp-5.1.1</span><br><span class="line">tar -czvf filename.tgz file</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">修改文件权限</span></span><br><span class="line">chmod 777 makePlus.sh</span><br><span class="line"></span><br><span class="line">查看系统版本/os</span><br><span class="line">cat /proc/version</span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">uname -a 显示如下</span><br><span class="line"> uname -r</span><br></pre></td></tr></table></figure><h2 id="找不到包"><a href="#找不到包" class="headerlink" title="找不到包"></a>找不到包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line">curPath = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">sys.path.append(curPath)</span><br><span class="line">rootPath = os.path.split(curPath)[<span class="number">0</span>]</span><br><span class="line">sys.path.append(rootPath)</span><br><span class="line"><span class="comment">#sys.path.append(&#x27;./common&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line">curPath = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line"><span class="built_in">print</span>(curPath)</span><br><span class="line">rootPath1 = os.path.split(curPath)[<span class="number">0</span>]</span><br><span class="line">rootPath2 = os.path.split(rootPath1)[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(rootPath2)</span><br><span class="line">pathaa = <span class="string">&#x27;/hpcfiles/users/qyf/test/DeepRL_Algorithms-master&#x27;</span></span><br><span class="line">sys.path.append(pathaa)<span class="comment">#地址</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot笔记</title>
      <link href="/peaky/2021/05/05/a54293f2.html"/>
      <url>/peaky/2021/05/05/a54293f2.html</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot常用模块"><a href="#SpringBoot常用模块" class="headerlink" title="SpringBoot常用模块"></a>SpringBoot常用模块</h1><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="LayUI-基本的后台管理模板"><a href="#LayUI-基本的后台管理模板" class="headerlink" title="LayUI 基本的后台管理模板"></a>LayUI 基本的后台管理模板</h3><blockquote><p>下载地址：<a href="https://fengfeng.lanzoui.com/iLVVnooajzc">LayUI下载</a></p></blockquote><blockquote><p>官网地址：<a href="https://www.layui.com/">LayUI官网</a></p></blockquote><span id="more"></span><h3 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a>静态资源</h3><p>modules为页面加载的JS,</p><blockquote><p>自定义模块如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  扩展一个 mymod 模块</span></span><br><span class="line"><span class="comment">**/</span>      </span><br><span class="line">;</span><br><span class="line">layui.<span class="title function_">define</span>(<span class="keyword">function</span>(<span class="params"><span class="built_in">exports</span></span>)&#123; <span class="comment">//提示：模块也可以依赖其它模块，如：layui.define(&#x27;mod1&#x27;, callback);</span></span><br><span class="line">  <span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">hello</span>: <span class="keyword">function</span>(<span class="params">str</span>)&#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&#x27;Hello &#x27;</span>+ (str||<span class="string">&#x27;mymod&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">//调用其他模块 </span></span><br><span class="line">   layui.<span class="title function_">use</span>([<span class="string">&#x27;form&#x27;</span>, <span class="string">&#x27;upload&#x27;</span>],<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> e = layui.<span class="property">$</span>,<span class="comment">//调用$.get(url,&#123;&#125;)</span></span><br><span class="line">   &#125;);</span><br><span class="line">    </span><br><span class="line">  <span class="comment">//输出 mymod 接口</span></span><br><span class="line">  <span class="built_in">exports</span>(<span class="string">&#x27;mymod&#x27;</span>, obj);</span><br><span class="line">&#125;);    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  扩展一个 mymod 模块,设定扩展模块所在的目录，然后就可以在别的JS文件中使用了</span></span><br><span class="line"><span class="comment">**/</span>     </span><br><span class="line"><span class="comment">//config的设置是全局的</span></span><br><span class="line">layui.<span class="title function_">config</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&#x27;/res/js/&#x27;</span> <span class="comment">//假设这是你存放拓展模块的根目录</span></span><br><span class="line">&#125;).<span class="title function_">extend</span>(&#123; <span class="comment">//设定模块别名</span></span><br><span class="line">  <span class="attr">mymod</span>: <span class="string">&#x27;mymod&#x27;</span> <span class="comment">//如果 mymod.js 是在根目录，也可以不用设定别名</span></span><br><span class="line">  ,<span class="attr">mod1</span>: <span class="string">&#x27;admin/mod1&#x27;</span> <span class="comment">//相对于上述 base 目录的子目录</span></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//你也可以忽略 base 设定的根目录，直接在 extend 指定路径（主要：该功能为 layui 2.2.0 新增）</span></span><br><span class="line">layui.<span class="title function_">extend</span>(&#123;</span><br><span class="line">  <span class="attr">mod2</span>: <span class="string">&#x27;&#123;/&#125;http://cdn.xxx.com/lib/mod2&#x27;</span> <span class="comment">// &#123;/&#125;的意思即代表采用自有路径，即不跟随 base 路径</span></span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//使用拓展模块</span></span><br><span class="line">layui.<span class="title function_">use</span>([<span class="string">&#x27;mymod&#x27;</span>, <span class="string">&#x27;mod1&#x27;</span>], <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> mymod = layui.<span class="property">mymod</span></span><br><span class="line">  ,mod1 = layui.<span class="property">mod1</span></span><br><span class="line">  ,mod2 = layui.<span class="property">mod2</span>;</span><br><span class="line">  </span><br><span class="line">  mymod.<span class="title function_">hello</span>(<span class="string">&#x27;World!&#x27;</span>); <span class="comment">//弹出 Hello World!</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>页面调用JS脚本如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">layui.<span class="title function_">use</span>([<span class="string">&#x27;form&#x27;</span>, <span class="string">&#x27;upload&#x27;</span>], <span class="keyword">function</span>(<span class="params"></span>)&#123;  <span class="comment">//如果只加载一个模块，可以不填数组。如：layui.use(&#x27;form&#x27;)</span></span><br><span class="line">  <span class="keyword">var</span> form = layui.<span class="property">form</span> <span class="comment">//获取form模块</span></span><br><span class="line">  ,upload = layui.<span class="property">upload</span>; <span class="comment">//获取upload模块</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//监听提交按钮</span></span><br><span class="line">  form.<span class="title function_">on</span>(<span class="string">&#x27;submit(test)&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//实例化一个上传控件</span></span><br><span class="line">  <span class="title function_">upload</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;上传接口url&#x27;</span></span><br><span class="line">    ,<span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Javascript-脚本"><a href="#Javascript-脚本" class="headerlink" title="Javascript 脚本"></a>Javascript 脚本</h3><h4 id="渲染一个图表"><a href="#渲染一个图表" class="headerlink" title="渲染一个图表"></a>渲染一个图表</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//渲染图表</span></span><br><span class="line">            layui.<span class="title function_">use</span>([<span class="string">&quot;carousel&quot;</span>, <span class="string">&quot;echarts&quot;</span>], <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> e = layui.<span class="property">$</span>,</span><br><span class="line">                    t = layui.<span class="property">carousel</span>,</span><br><span class="line">                    a = layui.<span class="property">echarts</span>,</span><br><span class="line">                    i = [],</span><br><span class="line">                    l = [&#123;</span><br><span class="line">                        <span class="attr">title</span>: &#123;</span><br><span class="line">                            <span class="attr">text</span>: <span class="string">&quot;温度变化曲线&quot;</span>,</span><br><span class="line">                            <span class="attr">x</span>: <span class="string">&quot;left&quot;</span>,</span><br><span class="line">                            <span class="attr">textStyle</span>: &#123;</span><br><span class="line">                                <span class="attr">fontSize</span>: <span class="number">14</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">tooltip</span>: &#123;</span><br><span class="line">                            <span class="attr">trigger</span>: <span class="string">&quot;axis&quot;</span>,</span><br><span class="line">                            <span class="attr">formatter</span>: <span class="string">&quot;&#123;b&#125;&lt;br&gt;温度：&#123;c&#125;℃&quot;</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">xAxis</span>: [&#123;</span><br><span class="line">                            <span class="attr">type</span>: <span class="string">&quot;category&quot;</span>,</span><br><span class="line">                            <span class="attr">data</span>: date</span><br><span class="line">                        &#125;],</span><br><span class="line">                        <span class="attr">yAxis</span>: [&#123;</span><br><span class="line">                            <span class="attr">type</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">                        &#125;],</span><br><span class="line">                        <span class="attr">series</span>: [&#123;</span><br><span class="line">                            <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>,</span><br><span class="line">                            <span class="attr">data</span>: temperature,</span><br><span class="line">                            <span class="attr">markPoint</span>: &#123;</span><br><span class="line">                                <span class="attr">data</span>: [&#123;</span><br><span class="line">                                    <span class="attr">type</span>: <span class="string">&quot;max&quot;</span>,</span><br><span class="line">                                    <span class="attr">name</span>: <span class="string">&quot;最大值&quot;</span></span><br><span class="line">                                &#125;,</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="attr">type</span>: <span class="string">&quot;min&quot;</span>,</span><br><span class="line">                                        <span class="attr">name</span>: <span class="string">&quot;最小值&quot;</span></span><br><span class="line">                                    &#125;]</span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">markLine</span>: &#123;</span><br><span class="line">                                <span class="attr">data</span>: [&#123;</span><br><span class="line">                                    <span class="attr">type</span>: <span class="string">&quot;average&quot;</span>,</span><br><span class="line">                                    <span class="attr">name</span>: <span class="string">&quot;平均值&quot;</span></span><br><span class="line">                                &#125;]</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;]</span><br><span class="line">                    &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="comment">//第二个</span></span><br><span class="line">                            <span class="attr">title</span>: &#123;</span><br><span class="line">                                <span class="attr">text</span>: <span class="string">&quot;湿度-淀粉含量变化&quot;</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">tooltip</span>: &#123;</span><br><span class="line">                                <span class="attr">trigger</span>: <span class="string">&quot;axis&quot;</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">legend</span>: &#123;</span><br><span class="line">                                <span class="attr">data</span>: [<span class="string">&quot;淀粉含量%&quot;</span>, <span class="string">&quot;湿度%&quot;</span>]</span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">xAxis</span>: [&#123;</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&quot;category&quot;</span>,</span><br><span class="line">                                <span class="attr">boundaryGap</span>: !<span class="number">1</span>,</span><br><span class="line">                                <span class="attr">data</span>: date</span><br><span class="line">                            &#125;],</span><br><span class="line">                            <span class="attr">yAxis</span>: [&#123;</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&quot;value&quot;</span>,</span><br><span class="line">                                <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">                                    <span class="attr">formatter</span>: <span class="string">&quot;&#123;value&#125; &quot;</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;],</span><br><span class="line">                            <span class="attr">series</span>: [&#123;</span><br><span class="line">                                <span class="attr">name</span>: <span class="string">&quot;淀粉含量%&quot;</span>,</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>,</span><br><span class="line">                                <span class="attr">data</span>: starch,</span><br><span class="line">                                <span class="attr">markPoint</span>: &#123;</span><br><span class="line">                                    <span class="attr">data</span>: [&#123;</span><br><span class="line">                                        <span class="attr">type</span>: <span class="string">&quot;max&quot;</span>,</span><br><span class="line">                                        <span class="attr">name</span>: <span class="string">&quot;最大值&quot;</span></span><br><span class="line">                                    &#125;,</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            <span class="attr">type</span>: <span class="string">&quot;min&quot;</span>,</span><br><span class="line">                                            <span class="attr">name</span>: <span class="string">&quot;最小值&quot;</span></span><br><span class="line">                                        &#125;]</span><br><span class="line">                                &#125;,</span><br><span class="line">                                <span class="attr">markLine</span>: &#123;</span><br><span class="line">                                    <span class="attr">data</span>: [&#123;</span><br><span class="line">                                        <span class="attr">type</span>: <span class="string">&quot;average&quot;</span>,</span><br><span class="line">                                        <span class="attr">name</span>: <span class="string">&quot;平均值&quot;</span></span><br><span class="line">                                    &#125;]</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;,</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="attr">name</span>: <span class="string">&quot;湿度%&quot;</span>,</span><br><span class="line">                                    <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>,</span><br><span class="line">                                    <span class="attr">data</span>: humidity,</span><br><span class="line">                                    <span class="attr">markPoint</span>: &#123;</span><br><span class="line">                                        <span class="attr">data</span>: [&#123;</span><br><span class="line">                                            <span class="attr">type</span>: <span class="string">&quot;max&quot;</span>,</span><br><span class="line">                                            <span class="attr">name</span>: <span class="string">&quot;最大值&quot;</span></span><br><span class="line">                                        &#125;,</span><br><span class="line">                                            &#123;</span><br><span class="line">                                                <span class="attr">type</span>: <span class="string">&quot;min&quot;</span>,</span><br><span class="line">                                                <span class="attr">name</span>: <span class="string">&quot;最小值&quot;</span></span><br><span class="line">                                            &#125;]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    <span class="attr">markLine</span>: &#123;</span><br><span class="line">                                        <span class="attr">data</span>: [&#123;</span><br><span class="line">                                            <span class="attr">type</span>: <span class="string">&quot;average&quot;</span>,</span><br><span class="line">                                            <span class="attr">name</span>: <span class="string">&quot;平均值&quot;</span></span><br><span class="line">                                        &#125;]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                           <span class="comment">//第三个</span></span><br><span class="line">                            <span class="attr">title</span>: &#123;</span><br><span class="line">                                <span class="attr">text</span>: <span class="string">&quot;PH-酒精含量变化&quot;</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">tooltip</span>: &#123;</span><br><span class="line">                                <span class="attr">trigger</span>: <span class="string">&quot;axis&quot;</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">legend</span>: &#123;</span><br><span class="line">                                <span class="attr">data</span>: [<span class="string">&quot;酒精含量%&quot;</span>, <span class="string">&quot;PH&quot;</span>]</span><br><span class="line">                            &#125;,</span><br><span class="line">                            <span class="attr">xAxis</span>: [&#123;</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&quot;category&quot;</span>,</span><br><span class="line">                                <span class="attr">boundaryGap</span>: !<span class="number">1</span>,</span><br><span class="line">                                <span class="attr">data</span>: date</span><br><span class="line">                            &#125;],</span><br><span class="line">                            <span class="attr">yAxis</span>: [&#123;</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&quot;value&quot;</span>,</span><br><span class="line">                                <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">                                    <span class="attr">formatter</span>: <span class="string">&quot;&#123;value&#125; &quot;</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;],</span><br><span class="line">                            <span class="attr">series</span>: [&#123;</span><br><span class="line">                                <span class="attr">name</span>: <span class="string">&quot;PH&quot;</span>,</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>,</span><br><span class="line">                                <span class="attr">data</span>: acid,</span><br><span class="line">                                <span class="attr">markPoint</span>: &#123;</span><br><span class="line">                                    <span class="attr">data</span>: [&#123;</span><br><span class="line">                                        <span class="attr">type</span>: <span class="string">&quot;max&quot;</span>,</span><br><span class="line">                                        <span class="attr">name</span>: <span class="string">&quot;最大值&quot;</span></span><br><span class="line">                                    &#125;,</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            <span class="attr">type</span>: <span class="string">&quot;min&quot;</span>,</span><br><span class="line">                                            <span class="attr">name</span>: <span class="string">&quot;最小值&quot;</span></span><br><span class="line">                                        &#125;]</span><br><span class="line">                                &#125;,</span><br><span class="line">                                <span class="attr">markLine</span>: &#123;</span><br><span class="line">                                    <span class="attr">data</span>: [&#123;</span><br><span class="line">                                        <span class="attr">type</span>: <span class="string">&quot;average&quot;</span>,</span><br><span class="line">                                        <span class="attr">name</span>: <span class="string">&quot;平均值&quot;</span></span><br><span class="line">                                    &#125;]</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;,</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="attr">name</span>: <span class="string">&quot;酒精含量%&quot;</span>,</span><br><span class="line">                                    <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>,</span><br><span class="line">                                    <span class="attr">data</span>: alcohol,</span><br><span class="line">                                    <span class="attr">markPoint</span>: &#123;</span><br><span class="line">                                        <span class="attr">data</span>: [&#123;</span><br><span class="line">                                            <span class="attr">type</span>: <span class="string">&quot;max&quot;</span>,</span><br><span class="line">                                            <span class="attr">name</span>: <span class="string">&quot;最大值&quot;</span></span><br><span class="line">                                        &#125;,</span><br><span class="line">                                            &#123;</span><br><span class="line">                                                <span class="attr">type</span>: <span class="string">&quot;min&quot;</span>,</span><br><span class="line">                                                <span class="attr">name</span>: <span class="string">&quot;最小值&quot;</span></span><br><span class="line">                                            &#125;]</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    <span class="attr">markLine</span>: &#123;</span><br><span class="line">                                        <span class="attr">data</span>: [&#123;</span><br><span class="line">                                            <span class="attr">type</span>: <span class="string">&quot;average&quot;</span>,</span><br><span class="line">                                            <span class="attr">name</span>: <span class="string">&quot;平均值&quot;</span></span><br><span class="line">                                        &#125;]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;]</span><br><span class="line">                        &#125;],</span><br><span class="line">                    n = <span class="title function_">e</span>(<span class="string">&quot;#LAY-index-dataview&quot;</span>).<span class="title function_">children</span>(<span class="string">&quot;div&quot;</span>),</span><br><span class="line">                    r = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                        i[e] = a.<span class="title function_">init</span>(n[e], layui.<span class="property">echartsTheme</span>),</span><br><span class="line">                            i[e].<span class="title function_">setOption</span>(l[e]),</span><br><span class="line">                            <span class="variable language_">window</span>.<span class="property">onresize</span> = i[e].<span class="property">resize</span></span><br><span class="line">                    &#125;;</span><br><span class="line">                <span class="keyword">if</span> (n[<span class="number">0</span>]) &#123;</span><br><span class="line">                    <span class="title function_">r</span>(<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">var</span> o = <span class="number">0</span>;</span><br><span class="line">                    t.<span class="title function_">on</span>(<span class="string">&quot;change(LAY-index-dataview)&quot;</span>,</span><br><span class="line">                        <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="title function_">r</span>(o = e.<span class="property">index</span>)</span><br><span class="line">                        &#125;),</span><br><span class="line">                        layui.<span class="property">admin</span>.<span class="title function_">on</span>(<span class="string">&quot;side&quot;</span>,</span><br><span class="line">                            <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                        <span class="title function_">r</span>(o)</span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    <span class="number">300</span>)</span><br><span class="line">                            &#125;),</span><br><span class="line">                        layui.<span class="property">admin</span>.<span class="title function_">on</span>(<span class="string">&quot;hash(tab)&quot;</span>,</span><br><span class="line">                            <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                layui.<span class="title function_">router</span>().<span class="property">path</span>.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>) || <span class="title function_">r</span>(o)</span><br><span class="line">                            &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h4 id="时间格式化器"><a href="#时间格式化器" class="headerlink" title="时间格式化器"></a>时间格式化器</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">   &lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//var time2 = new Date(time).format(&quot;yyyy-MM-dd&quot;);</span></span><br><span class="line">    <span class="title class_">Date</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">format</span> = <span class="keyword">function</span>(<span class="params">fmt</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> o = &#123;</span><br><span class="line">        <span class="string">&quot;M+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getMonth</span>()+<span class="number">1</span>, <span class="comment">//月份</span></span><br><span class="line">        <span class="string">&quot;d+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getDate</span>(), <span class="comment">//日</span></span><br><span class="line">        <span class="string">&quot;h+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getHours</span>()%<span class="number">12</span> == <span class="number">0</span> ? <span class="number">12</span> : <span class="variable language_">this</span>.<span class="title function_">getHours</span>()%<span class="number">12</span>, <span class="comment">//小时</span></span><br><span class="line">        <span class="string">&quot;H+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getHours</span>(), <span class="comment">//小时</span></span><br><span class="line">        <span class="string">&quot;m+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getMinutes</span>(), <span class="comment">//分</span></span><br><span class="line">        <span class="string">&quot;s+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getSeconds</span>(), <span class="comment">//秒</span></span><br><span class="line">        <span class="string">&quot;q+&quot;</span> : <span class="title class_">Math</span>.<span class="title function_">floor</span>((<span class="variable language_">this</span>.<span class="title function_">getMonth</span>()+<span class="number">3</span>)/<span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line">        <span class="string">&quot;S&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getMilliseconds</span>() <span class="comment">//毫秒</span></span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.<span class="title function_">test</span>(fmt))</span><br><span class="line">        fmt=fmt.<span class="title function_">replace</span>(<span class="title class_">RegExp</span>.<span class="property">$1</span>, (<span class="variable language_">this</span>.<span class="title function_">getFullYear</span>()+<span class="string">&quot;&quot;</span>).<span class="title function_">substr</span>(<span class="number">4</span> - <span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span>));</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;(&quot;</span>+ k +<span class="string">&quot;)&quot;</span>).<span class="title function_">test</span>(fmt))</span><br><span class="line">          fmt = fmt.<span class="title function_">replace</span>(<span class="title class_">RegExp</span>.<span class="property">$1</span>, (<span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span>==<span class="number">1</span>) ? (o[k]) : ((<span class="string">&quot;00&quot;</span>+ o[k]).<span class="title function_">substr</span>((<span class="string">&quot;&quot;</span>+ o[k]).<span class="property">length</span>)));</span><br><span class="line">      <span class="keyword">return</span> fmt;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="Jquery调用"><a href="#Jquery调用" class="headerlink" title="Jquery调用"></a>Jquery调用</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;http://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//模板 替换HTML网页内容</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;sensorList2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/html&quot;</span> &gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">    //each为多显示内容</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">    </span><span class="template-tag">&#123;&#123;#  <span class="name">layui.each</span>(<span class="name">d</span>, function(<span class="name">index</span>, item)&#123; &#125;&#125;</span></span></span></span><br><span class="line"><span class="template-tag"><span class="language-handlebars"><span class="language-xml">    &lt;option <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; item.path &#125;&#125;&quot;</span>&gt;&#123;&#123;item.time+item.file&#125;&#125;&lt;/option&gt;</span></span></span></span><br><span class="line"><span class="template-tag"><span class="language-handlebars"><span class="language-xml">    &#123;&#123;#  &#125;); &#125;&#125;</span><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">  </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">$.<span class="title function_">get</span>(<span class="string">&quot;/upload/finish&quot;</span>,&#123;&#125;, <span class="keyword">function</span>(<span class="params">sensordata</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="comment">//格式化时间</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (sensordata.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sensordata.<span class="property">length</span>; i++) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          sensordata[i].<span class="property">time</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(sensordata[i].<span class="property">time</span>).<span class="title function_">format</span>(<span class="string">&quot;yy-MM-dd HH:mm &quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//调用模板</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      layui.<span class="title function_">use</span>(<span class="string">&quot;laytpl&quot;</span>,<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> laytpl = layui.<span class="property">laytpl</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> getTpl2 = sensorList2.<span class="property">innerHTML</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                ,view2 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sensorView2&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">laytpl</span>(getTpl2).<span class="title function_">render</span>(sensordata, <span class="keyword">function</span>(<span class="params">html2</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          view2.<span class="property">innerHTML</span> = html2;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="URL中的变量取出"><a href="#URL中的变量取出" class="headerlink" title="URL中的变量取出"></a>URL中的变量取出</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将URL中的变量取出</span></span><br><span class="line">    <span class="comment">//调用方式</span></span><br><span class="line">    <span class="comment">// getQueryVariable(&quot;sensorId&quot;)  or var id =getQueryVariable(&quot;sensorId&quot;);</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getQueryVariable</span>(<span class="params">variable</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">var</span> query = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">substring</span>(<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">var</span> vars = query.<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;vars.<span class="property">length</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> pair = vars[i].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(pair[<span class="number">0</span>] == variable)&#123;<span class="keyword">return</span> pair[<span class="number">1</span>];&#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span>(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="根据某些值得改变来选择显示隐藏DIV"><a href="#根据某些值得改变来选择显示隐藏DIV" class="headerlink" title="根据某些值得改变来选择显示隐藏DIV"></a>根据某些值得改变来选择显示隐藏DIV</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--如果message是空的话就不显示此标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not (message == null)&#125;&quot;</span>   &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--如果value是1 的话值为第一个否则为第二个--&gt;</span></span><br><span class="line">class=&quot;$&#123;value==1?&#x27;a&#x27;:&#x27;b&#x27;&#125;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//隐藏div</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//给div添加change事件</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#select&quot;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span>($(<span class="variable language_">this</span>).<span class="title function_">val</span>() == <span class="number">4</span> ) &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">show</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span></span></span><br><span class="line"><span class="language-javascript">      &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="修改span标签的值"><a href="#修改span标签的值" class="headerlink" title="修改span标签的值"></a>修改span标签的值</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&lt;!-- 搜索框js --&gt;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeType</span>(<span class="params">type</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;type&quot;</span>).<span class="property">value</span> = type;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;display&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (type == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;标题&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;内容&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;发件人&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="空格-换行-居中"><a href="#空格-换行-居中" class="headerlink" title="空格+换行+居中"></a>空格+换行+居中</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>  空格 </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>换行</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span>分割线</span><br><span class="line">style=&quot;text-align:center&quot;  文字居中</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger&quot;</span> <span class="attr">role</span>=<span class="string">&quot;alert&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span></span><br><span class="line">                                    此处暂时没有信息！</span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="修改input的placeholder"><a href="#修改input的placeholder" class="headerlink" title="修改input的placeholder"></a>修改input的placeholder</h4><p>方法1：通过js来设置文本框input的placeholder值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;input&quot;).setAttribute(&quot;placeholder&quot;,&quot;新文本内容&quot;);</span><br></pre></td></tr></table></figure><p>方法2：通过jquery设置文本框input的placeholder值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;#input&#x27;).attr(&#x27;placeholder&#x27;,&#x27;新文本内容&#x27;)；</span><br></pre></td></tr></table></figure><h4 id="判断input值为空"><a href="#判断input值为空" class="headerlink" title="判断input值为空"></a>判断input值为空</h4><p><a href="https://blog.csdn.net/weixin_42645716/article/details/87984442">https://blog.csdn.net/weixin_42645716/article/details/87984442</a></p><p>一、Input获取value</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;请输入姓名&quot;</span> name=<span class="string">&quot;name&quot;</span> id=<span class="string">&quot;name&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> name; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    name = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;name&quot;</span>).<span class="property">value</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    name = form1.<span class="property">name</span>.<span class="property">value</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    name = $(<span class="string">&quot;#name&quot;</span>).<span class="title function_">val</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    name =  $(<span class="string">&quot;input[id=&#x27;name&#x27;]&quot;</span>).<span class="title function_">val</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    name = $(<span class="string">&quot;#name&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;value&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    name = $(<span class="string">&quot;input[id=&#x27;name&#x27;]&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;value&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>二、判断value是否为空</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 方法一:</span><br><span class="line">if(name == null || name == undefined || name == &#x27;&#x27;)&#123;</span><br><span class="line">    console.log(&quot;value 为空&quot;)</span><br><span class="line">&#125;</span><br><span class="line">// 方法二:</span><br><span class="line">if(name.length &gt; 0 )&#123;</span><br><span class="line">    console.log(&quot;value 不为空&quot;)</span><br><span class="line">&#125;三、null、undefined、‘’的区别</span><br></pre></td></tr></table></figure><p>null:空对象\不是对象,转为数值为0<br>undefined:全局对象window的一个特殊属性.undefined表示”缺少值”，就是此处应该有一个值，但是还没有定义。转为数值为NaN.典型用法是：</p><p>（1）变量被声明了，但没有赋值时，就等于undefined。<br>（2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。<br>（3）对象没有赋值的属性，该属性的值为undefined。<br>（4）函数没有返回值时，默认返回undefined。</p><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h3><p>下载地址：<a href="https://fengfeng.lanzoui.com/i6Ei0oo81gd">APP 1.0</a></p><p>下载地址： <a href="https://fengfeng.lanzoui.com/ipkWVooeifa">备份</a></p><h4 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h4><h5 id="RestController"><a href="#RestController" class="headerlink" title="RestController"></a>RestController</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span>=<span class="meta">@Controller</span>+<span class="meta">@ResponseBoby</span><span class="comment">//返回数据可以是JSON或者是String、Map、List等执行ajax回调</span></span><br></pre></td></tr></table></figure><h5 id="ResultJSON"><a href="#ResultJSON" class="headerlink" title="ResultJSON"></a>ResultJSON</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口返回的JSON数据</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">resultJson</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> count;</span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">resultJson</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">resultJson</span><span class="params">(<span class="type">int</span> code, String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">resultJson</span><span class="params">(<span class="type">int</span> count, T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.count = count;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路径</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/path&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/path&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/path&quot;)</span></span><br><span class="line"><span class="comment">//携带的参数</span></span><br><span class="line"><span class="meta">@RequestParam(&quot;parmester&quot;)</span> Integer id</span><br></pre></td></tr></table></figure><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><h5 id="获取时间戳"><a href="#获取时间戳" class="headerlink" title="获取时间戳"></a>获取时间戳</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Timestamp</span> <span class="variable">timestamp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timestamp</span>(System.currentTimeMillis());</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy/MM/dd hh:mm:ss&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">timestamp</span> <span class="operator">=</span> sdf.format(log.getTime());<span class="comment">//格式化器</span></span><br><span class="line"></span><br><span class="line">thymeleaf 时间戳格式化器</span><br><span class="line">th:text=<span class="string">&quot;$&#123;#dates.format(Time, &#x27;yyyy-MM-dd hh:mm:ss&#x27;)&#125;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="从html页面的form表单提取数据与封装"><a href="#从html页面的form表单提取数据与封装" class="headerlink" title="从html页面的form表单提取数据与封装"></a>从html页面的form表单提取数据与封装</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestParam(&quot;select&quot;)</span> Integer val   <span class="comment">//根据name获取值</span></span><br><span class="line">    Model model         <span class="comment">//封装model</span></span><br><span class="line">    model.addAttribute(<span class="string">&quot;focusgoods&quot;</span>,selectallfocusbyid);   <span class="comment">//名值对形式</span></span><br><span class="line">    HttpSession session</span><br><span class="line">    session.setAttribute(<span class="string">&quot;goodshot&quot;</span>,goods);</span><br></pre></td></tr></table></figure><h5 id="String-转Int"><a href="#String-转Int" class="headerlink" title="String 转Int"></a>String 转Int</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer.parseInt(id)</span><br></pre></td></tr></table></figure><h5 id="判断一个list集合是否为空"><a href="#判断一个list集合是否为空" class="headerlink" title="判断一个list集合是否为空"></a>判断一个list集合是否为空</h5><p><strong>isEmpty() 和(list.size() &#x3D;&#x3D; 0)都是判断List内容是否为空。</strong></p><p><strong>null判断是判断有没有对list集合分配内存空间，而不是list里面内容是否为空</strong></p><h5 id="转发与重定向"><a href="#转发与重定向" class="headerlink" title="转发与重定向"></a>转发与重定向</h5><p><strong>转发</strong></p><p>1.使用 “forword” 关键字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;forword:/url&quot;</span>;</span><br></pre></td></tr></table></figure><p>2.使用servlet 提供的API</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(<span class="string">&quot;/url&quot;</span>).forward(request,response);</span><br></pre></td></tr></table></figure><p><strong>重定向</strong></p><p>1.使用servlet 提供的API</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HttpServletResponse response;</span><br><span class="line">response.sendRedirect(<span class="string">&quot;/url&quot;</span>);<span class="comment">//转发到制定的url及对应Controler</span></span><br></pre></td></tr></table></figure><p>2.使用 “redirect” 关键字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;redirect:/url&quot;</span>;</span><br></pre></td></tr></table></figure><h5 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;Select * From message where title like CONCAT(&#x27;%&#x27;,#&#123;title&#125;,&#x27;%&#x27;)&quot;)</span></span><br></pre></td></tr></table></figure><h5 id="文件上传与Java调用Python"><a href="#文件上传与Java调用Python" class="headerlink" title="文件上传与Java调用Python"></a>文件上传与Java调用Python</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前时间、文件名</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">      <span class="type">Timestamp</span> <span class="variable">timestamp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timestamp</span>(System.currentTimeMillis());</span><br><span class="line">      <span class="comment">//时间转换成字符串区分上传文件</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> timestamp.getTime()+<span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="comment">//定义上传文件的目录为upload/times/file</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">dirPath</span> <span class="operator">=</span> <span class="string">&quot;/upload/&quot;</span>+path;</span><br><span class="line">      <span class="comment">//存储记录</span></span><br><span class="line">      <span class="type">analyze</span> <span class="variable">analyze</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">analyze</span>(timestamp,originalFilename,((<span class="type">float</span>)file.getSize())/<span class="number">1024</span>,<span class="string">&quot;未分析&quot;</span>,path);</span><br><span class="line">      <span class="type">Boolean</span> <span class="variable">result</span> <span class="operator">=</span> analyzeMapper.addNewFile(analyze);</span><br><span class="line">      <span class="comment">//文件的存储</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="string">&quot;/&quot;</span>+originalFilename;</span><br><span class="line">      <span class="comment">//新建一个要保存目录的新文件，将上传的文件法制过去</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dirPath + filePath).mkdirs();</span><br><span class="line">      <span class="type">File</span> <span class="variable">save</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dirPath + filePath).getAbsoluteFile();</span><br><span class="line">      file.transferTo(save);</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用python代码</span></span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="string">&quot;/&quot;</span>+originalFilename;</span><br><span class="line">      <span class="type">String</span> <span class="variable">analyPath</span> <span class="operator">=</span> <span class="string">&quot;D:\\upload\\analyze.py&quot;</span>;</span><br><span class="line">      <span class="type">String</span> <span class="variable">projectPath</span>  <span class="operator">=</span>  <span class="string">&quot;D:\\upload\\&quot;</span>+path+filePath;</span><br><span class="line">      <span class="type">String</span> <span class="variable">savePath</span>  <span class="operator">=</span>  <span class="string">&quot;D:\\upload\\&quot;</span>+path; </span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">//这个方法是类似隐形开启了命令执行器，输入指令执行python脚本</span></span><br><span class="line">          <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> Runtime.getRuntime()</span><br><span class="line">                  .exec(<span class="string">&quot;python &quot;</span>+analyPath+<span class="string">&quot;  --filePath &quot;</span>+projectPath);</span><br><span class="line">          <span class="comment">//这种方式获取返回值的方式是需要用python打印输出，然后java去获取命令行的输出，在java返回</span></span><br><span class="line">          <span class="type">InputStreamReader</span> <span class="variable">ir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(process.getInputStream());</span><br><span class="line">          <span class="type">LineNumberReader</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LineNumberReader</span>(ir);</span><br><span class="line">          <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> input.readLine();<span class="comment">//中文的话这里可能会有乱码，可以尝试转一下不过问题不大</span></span><br><span class="line"><span class="comment">//            result1 = new String(result.getBytes(&quot;iso8859-1&quot;),&quot;utf-8&quot;);</span></span><br><span class="line">          input.close();</span><br><span class="line">          ir.close();</span><br><span class="line">          <span class="type">int</span> <span class="variable">re</span> <span class="operator">=</span> process.waitFor();</span><br><span class="line">          System.out.println(result);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException | InterruptedException e) &#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;调用python脚本并读取结果时出错：&quot;</span> + e.getMessage());</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h5 id="返回一张图片"><a href="#返回一张图片" class="headerlink" title="返回一张图片"></a>返回一张图片</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取图片加载一下</span></span><br><span class="line">      <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(savePath);</span><br><span class="line">      <span class="type">ByteArrayOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">      <span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">      <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">while</span>((len = fileInputStream.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">          bos.write(b, <span class="number">0</span>, len);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="type">byte</span>[] fileByte = bos.toByteArray();</span><br><span class="line">      <span class="comment">//以上为读取图片变成字节数组</span></span><br><span class="line">      <span class="comment">//进行base64位加密</span></span><br><span class="line">      <span class="type">BASE64Encoder</span> <span class="variable">encoder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BASE64Encoder</span>();</span><br><span class="line">      <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> encoder.encode(fileByte);</span><br><span class="line">      <span class="comment">//System.out.println(data);</span></span><br><span class="line">      HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">      map.put(<span class="string">&quot;image&quot;</span>,data);</span><br><span class="line">      map.put(<span class="string">&quot;res&quot;</span>,res);</span><br><span class="line">      <span class="keyword">return</span> map;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;Image&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">loada</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      $.<span class="title function_">get</span>(<span class="string">&quot;/test/img&quot;</span>,&#123;&#125;, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> image = data.<span class="property">image</span>;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#Image&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>, <span class="string">&quot;data:image/png;base64,&quot;</span> + image);<span class="comment">//添加一个属性</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//上传完毕回调</span></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入一条记录</span></span><br><span class="line"><span class="meta">@Insert(&quot;insert into `analyze`(time,file,size,state,path) values (#&#123;time&#125;,#&#123;file&#125;,#&#123;size&#125;,#&#123;state&#125;,#&#123;path&#125;)&quot;)</span></span><br><span class="line">   Boolean <span class="title function_">addNewFile</span><span class="params">(analyze analyze)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询所有记录</span></span><br><span class="line"><span class="meta">@Select(&quot;select * from `analyze` ORDER BY id DESC limit #&#123;Start&#125;,#&#123;Limit&#125;&quot;)</span></span><br><span class="line">   List&lt;analyze&gt; <span class="title function_">pageSensorFile</span><span class="params">( Integer Start, Integer Limit)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//改</span></span><br><span class="line"><span class="meta">@Update(&quot;UPDATE `analyze` SET state=#&#123;state&#125; WHERE (path=#&#123;path&#125;)&quot;)</span></span><br><span class="line">   Boolean <span class="title function_">changeState</span><span class="params">(String state,String path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删</span></span><br><span class="line"><span class="meta">@Update(&quot;UPDATE `analyze` SET state=#&#123;state&#125; WHERE (path=#&#123;path&#125;)&quot;)</span></span><br><span class="line">   Boolean <span class="title function_">changeState</span><span class="params">(String state,String path)</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DRL笔记</title>
      <link href="/peaky/2021/03/15/217f21be.html"/>
      <url>/peaky/2021/03/15/217f21be.html</url>
      
        <content type="html"><![CDATA[<h4 id="强化学习介绍"><a href="#强化学习介绍" class="headerlink" title="强化学习介绍"></a>强化学习介绍</h4><p>根据不同的分列方法可以将强化学习算法分成不同的种类：<br><strong>1.基于概率（policy-based）和基于价值（value-based）</strong></p><p>基于概率是强化学习中最直接的一种, 他能通过感官分析所处的环境, 直接输出下一步要采取的各种动作的概率, 然后根据概率采取行动, 所以每种动作都有可能被选中, 只是可能性不同. 而基于价值的方法输出则是所有动作的价值, 我们会根据最高价值来选着动作, 相比基于概率的方法, 基于价值的决策部分更为铁定, 毫不留情, 就选价值最高的, 而基于概率的, 即使某个动作的概率最高, 但是还是不一定会选到他.</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312210405206.png" alt="image-20210312210405206"></p><p>其中policy-based中的典型算法有Policy Gradients，value-based的典型算法有Q-learning、SARSA、DQN，两者重合的典型模型有AC、A2C、A3C</p><span id="more"></span><p><strong>2.在线学习（on-policy）和离线学习（off-policy）</strong></p><p>所谓在线学习（on-policy）, 就是指我必须本人在场, 并且一定是本人边玩边学习, 学习者与环境必须产生实际的交互。</p><p>而离线学习（off-policy）是你可以选择自己玩, 也可以选择看着别人玩, 通过看别人玩来学习别人的行为准则。</p><p>on-policy的典型算法是SARSA， off-policy的典型算法是Q-learning、DQN。</p><p>on-policy是的学习者必学进行完一系列实际动作后才能产生样本，这样效率往往较慢。off-policy可以从以往的经验或别人的动作开学习，效率往往比较高。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312210627505.png" alt="image-20210312210627505"></p><p><strong>3.model-based和model-free</strong><br>可以将所有强化学习的方法分为理不理解所处环境,如果我们不尝试去理解环境, 环境给了我们什么就是什么. 我们就把这种方法叫做 model-free, 这里的 model 就是用模型来表示环境, 那理解了环境也就是学会了用一个模型来代表环境, 所以这种就是 model-based 方法.</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312210824998.png" alt="image-20210312210824998"></p><h4 id="SARSA算法原理"><a href="#SARSA算法原理" class="headerlink" title="SARSA算法原理"></a>SARSA算法原理</h4><p>强化学习的主要功能就是让agent学习尽可能好的动作action，使其后续获得的奖励尽可能的大。</p><p>假设在时刻t时，处于状态长期奖励为：<br><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/2020032311212617.png" alt="在这里插入图片描述"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312211035990.png" alt="image-20210312211035990"><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312211102633.png" alt="image-20210312211102633"></p><p> <img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312213327171.png" alt="image-20210312213327171"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312213401080.png" alt="image-20210312213401080"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312213418619.png" alt="image-20210312213418619"></p><h4 id="二、SARSA代码"><a href="#二、SARSA代码" class="headerlink" title="二、SARSA代码"></a>二、SARSA代码</h4><p>此处直接参考莫烦python的<a href="https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/1-1-A-RL/">强化学习教程</a>进行代码编写，在基础上说明每一行代码的用途</p><p>1.environment的编写<br>首先RL需要一个环境，因为我们控制不了环境（比如下围棋时我们不不能改变棋盘的大小，何落子方式，只能只能在范围内落在线与线之间的交叉点上），这个环境是不可以改变的，因此后面的Q-learning也将沿用此环境。通常不同的问题有不同环境，我们真正需要关注的是agent即算法逻辑的编写。<br>此处以走方格为例编写一个environment</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312215227492.png" alt="image-20210312215227492"></p><p>maze_env</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Reinforcement learning maze example.</span></span><br><span class="line"><span class="string">Red rectangle:          explorer.</span></span><br><span class="line"><span class="string">Black rectangles:       hells       [reward = -1].</span></span><br><span class="line"><span class="string">Yellow bin circle:      paradise    [reward = +1].</span></span><br><span class="line"><span class="string">All other states:       ground      [reward = 0].</span></span><br><span class="line"><span class="string">This script is the environment part of this example. The RL is in RL_brain.py.</span></span><br><span class="line"><span class="string">View more on my tutorial page: https://morvanzhou.github.io/tutorials/</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">if</span> sys.version_info.major == <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">import</span> Tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">UNIT = <span class="number">40</span>   <span class="comment"># pixels</span></span><br><span class="line">MAZE_H = <span class="number">4</span>  <span class="comment"># grid height</span></span><br><span class="line">MAZE_W = <span class="number">4</span>  <span class="comment"># grid width</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Maze</span>(tk.Tk, <span class="built_in">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Maze, self).__init__()</span><br><span class="line">        self.action_space = [<span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;r&#x27;</span>]</span><br><span class="line">        self.n_actions = <span class="built_in">len</span>(self.action_space)</span><br><span class="line">        self.title(<span class="string">&#x27;maze&#x27;</span>)</span><br><span class="line">        self.geometry(<span class="string">&#x27;&#123;0&#125;x&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(MAZE_H * UNIT, MAZE_H * UNIT))</span><br><span class="line">        self._build_maze()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_build_maze</span>(<span class="params">self</span>):</span><br><span class="line">        self.canvas = tk.Canvas(self, bg=<span class="string">&#x27;white&#x27;</span>,</span><br><span class="line">                           height=MAZE_H * UNIT,</span><br><span class="line">                           width=MAZE_W * UNIT)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create grids</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, MAZE_W * UNIT, UNIT):</span><br><span class="line">            x0, y0, x1, y1 = c, <span class="number">0</span>, c, MAZE_H * UNIT</span><br><span class="line">            self.canvas.create_line(x0, y0, x1, y1)</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, MAZE_H * UNIT, UNIT):</span><br><span class="line">            x0, y0, x1, y1 = <span class="number">0</span>, r, MAZE_W * UNIT, r</span><br><span class="line">            self.canvas.create_line(x0, y0, x1, y1)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create origin</span></span><br><span class="line">        origin = np.array([<span class="number">20</span>, <span class="number">20</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># hell</span></span><br><span class="line">        hell1_center = origin + np.array([UNIT * <span class="number">2</span>, UNIT])</span><br><span class="line">        self.hell1 = self.canvas.create_rectangle(</span><br><span class="line">            hell1_center[<span class="number">0</span>] - <span class="number">15</span>, hell1_center[<span class="number">1</span>] - <span class="number">15</span>,</span><br><span class="line">            hell1_center[<span class="number">0</span>] + <span class="number">15</span>, hell1_center[<span class="number">1</span>] + <span class="number">15</span>,</span><br><span class="line">            fill=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">        <span class="comment"># hell</span></span><br><span class="line">        hell2_center = origin + np.array([UNIT, UNIT * <span class="number">2</span>])</span><br><span class="line">        self.hell2 = self.canvas.create_rectangle(</span><br><span class="line">            hell2_center[<span class="number">0</span>] - <span class="number">15</span>, hell2_center[<span class="number">1</span>] - <span class="number">15</span>,</span><br><span class="line">            hell2_center[<span class="number">0</span>] + <span class="number">15</span>, hell2_center[<span class="number">1</span>] + <span class="number">15</span>,</span><br><span class="line">            fill=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create oval</span></span><br><span class="line">        oval_center = origin + UNIT * <span class="number">2</span></span><br><span class="line">        self.oval = self.canvas.create_oval(</span><br><span class="line">            oval_center[<span class="number">0</span>] - <span class="number">15</span>, oval_center[<span class="number">1</span>] - <span class="number">15</span>,</span><br><span class="line">            oval_center[<span class="number">0</span>] + <span class="number">15</span>, oval_center[<span class="number">1</span>] + <span class="number">15</span>,</span><br><span class="line">            fill=<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create red rect</span></span><br><span class="line">        self.rect = self.canvas.create_rectangle(</span><br><span class="line">            origin[<span class="number">0</span>] - <span class="number">15</span>, origin[<span class="number">1</span>] - <span class="number">15</span>,</span><br><span class="line">            origin[<span class="number">0</span>] + <span class="number">15</span>, origin[<span class="number">1</span>] + <span class="number">15</span>,</span><br><span class="line">            fill=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pack all</span></span><br><span class="line">        self.canvas.pack()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reset</span>(<span class="params">self</span>):</span><br><span class="line">        self.update()</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        self.canvas.delete(self.rect)</span><br><span class="line">        origin = np.array([<span class="number">20</span>, <span class="number">20</span>])</span><br><span class="line">        self.rect = self.canvas.create_rectangle(</span><br><span class="line">            origin[<span class="number">0</span>] - <span class="number">15</span>, origin[<span class="number">1</span>] - <span class="number">15</span>,</span><br><span class="line">            origin[<span class="number">0</span>] + <span class="number">15</span>, origin[<span class="number">1</span>] + <span class="number">15</span>,</span><br><span class="line">            fill=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">        <span class="comment"># return observation</span></span><br><span class="line">        <span class="keyword">return</span> self.canvas.coords(self.rect)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">step</span>(<span class="params">self, action</span>):</span><br><span class="line">        s = self.canvas.coords(self.rect)</span><br><span class="line">        base_action = np.array([<span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> action == <span class="number">0</span>:   <span class="comment"># up</span></span><br><span class="line">            <span class="keyword">if</span> s[<span class="number">1</span>] &gt; UNIT:</span><br><span class="line">                base_action[<span class="number">1</span>] -= UNIT</span><br><span class="line">        <span class="keyword">elif</span> action == <span class="number">1</span>:   <span class="comment"># down</span></span><br><span class="line">            <span class="keyword">if</span> s[<span class="number">1</span>] &lt; (MAZE_H - <span class="number">1</span>) * UNIT:</span><br><span class="line">                base_action[<span class="number">1</span>] += UNIT</span><br><span class="line">        <span class="keyword">elif</span> action == <span class="number">2</span>:   <span class="comment"># right</span></span><br><span class="line">            <span class="keyword">if</span> s[<span class="number">0</span>] &lt; (MAZE_W - <span class="number">1</span>) * UNIT:</span><br><span class="line">                base_action[<span class="number">0</span>] += UNIT</span><br><span class="line">        <span class="keyword">elif</span> action == <span class="number">3</span>:   <span class="comment"># left</span></span><br><span class="line">            <span class="keyword">if</span> s[<span class="number">0</span>] &gt; UNIT:</span><br><span class="line">                base_action[<span class="number">0</span>] -= UNIT</span><br><span class="line"></span><br><span class="line">        self.canvas.move(self.rect, base_action[<span class="number">0</span>], base_action[<span class="number">1</span>])  <span class="comment"># move agent</span></span><br><span class="line"></span><br><span class="line">        s_ = self.canvas.coords(self.rect)  <span class="comment"># next state</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># reward function</span></span><br><span class="line">        <span class="keyword">if</span> s_ == self.canvas.coords(self.oval):</span><br><span class="line">            reward = <span class="number">1</span></span><br><span class="line">            done = <span class="literal">True</span></span><br><span class="line">            s_ = <span class="string">&#x27;terminal&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> s_ <span class="keyword">in</span> [self.canvas.coords(self.hell1), self.canvas.coords(self.hell2)]:</span><br><span class="line">            reward = -<span class="number">1</span></span><br><span class="line">            done = <span class="literal">True</span></span><br><span class="line">            s_ = <span class="string">&#x27;terminal&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            reward = <span class="number">0</span></span><br><span class="line">            done = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s_, reward, done</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">render</span>(<span class="params">self</span>):</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        self.update()</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update</span>():</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        s = env.reset()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            env.render()</span><br><span class="line">            a = <span class="number">1</span></span><br><span class="line">            s, r, done = env.step(a)</span><br><span class="line">            <span class="keyword">if</span> done:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    env = Maze()</span><br><span class="line">    env.after(<span class="number">100</span>, update)</span><br><span class="line">    env.mainloop()</span><br></pre></td></tr></table></figure><p><strong>agent</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> maze_env <span class="keyword">import</span> Maze    <span class="comment">#即为上面的environment</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">#RL的父类定义</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RL</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment">#初始化</span></span><br><span class="line">    <span class="comment">#actions为可选动作， learning_rate为学习率，reward_decay为传递奖励是的递减系数gamma，1-e_greed为随机选择其他动作的概率</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, actions, learning_rate=<span class="number">0.01</span>, reward_decay=<span class="number">0.9</span>, e_greedy=<span class="number">0.9</span></span>):</span><br><span class="line">        self.actions = actions</span><br><span class="line">        self.lr = learning_rate</span><br><span class="line">        self.gamma = reward_decay</span><br><span class="line">        self.epsilon = e_greedy</span><br><span class="line">        <span class="comment">#初始化qtable，行为observation的state， 列为当前状态可以选择的action（对于所有列，可以选择的action一样）</span></span><br><span class="line">        self.q_table = pd.DataFrame(columns = self.actions, dtype=np.float64)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_action</span>(<span class="params">self, observation</span>):</span><br><span class="line">        self.check_state_exist(observation)  <span class="comment">#检查当前状态是否存在，不存在就添加这个状态</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> np.random.uniform() &lt; self.epsilon:</span><br><span class="line">            state_action = self.q_table.loc[observation, :]  <span class="comment">#找到当前状态可以选择的动作</span></span><br><span class="line">            <span class="comment">#由于初始化或更新后一个状态下的动作值可能是相同的，为了避免每次都选择相同动作，用random.choice在值最大的action中损及选择一个</span></span><br><span class="line">            action = np.random.choice(state_action[state_action==np.<span class="built_in">max</span>(state_action)].index)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            action = np.random.choice(self.actions)   <span class="comment">#0.1的几率随机选择动作</span></span><br><span class="line">        <span class="keyword">return</span> action</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_state_exist</span>(<span class="params">self, state</span>):</span><br><span class="line">        <span class="keyword">if</span> state <span class="keyword">not</span> <span class="keyword">in</span> self.q_table.index:</span><br><span class="line">            <span class="comment">#若找不到该obversation的转态，则添加该状态到新的qtable</span></span><br><span class="line">            <span class="comment">#新的state的动作的q初始值赋值为0，列名为dataframe的列名，index为state</span></span><br><span class="line">            self.q_table = self.q_table.append(pd.Series([<span class="number">0</span>]*<span class="built_in">len</span>(self.actions), index=self.q_table.columns, name=state))</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#不同方式的学习方法不同，用可变参数，直接pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learning</span>(<span class="params">self, *args</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SarsaTable</span>(<span class="title class_ inherited__">RL</span>):  <span class="comment">#继承上面的RL</span></span><br><span class="line">    <span class="comment">#初始化</span></span><br><span class="line">    <span class="comment">#参数自己定义，含义继承父类RL</span></span><br><span class="line">    <span class="comment">#类方法choose_action、check_state_exist自动继承RL，参数不变</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, actions, learning_rate=<span class="number">0.01</span>, reward_decay=<span class="number">0.9</span>, e_greedy=<span class="number">0.9</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(SarsaTable, self).__init__(actions, learning_rate, reward_decay, e_greedy)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learning</span>(<span class="params">self, s, a,r, s_, a_</span>):</span><br><span class="line">        self.check_state_exist(s_)   <span class="comment">#检查动作后状态s_是否存在</span></span><br><span class="line">        </span><br><span class="line">        q_old = self.q_table.loc[s, a]  <span class="comment">#旧的q[s,a]值</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> s_!=<span class="string">&#x27;terminal&#x27;</span>:</span><br><span class="line">            <span class="comment">#取下个状态s_和动作a_下q值</span></span><br><span class="line">            q_predict = self.q_table.loc[s_, a_]</span><br><span class="line">            q_new = r+self.gamma*q_predict   <span class="comment">#计算新的值</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            q_new = r</span><br><span class="line">        </span><br><span class="line">        self.q_table.loc[s,a] = q_old - self.lr*(q_new - q_old)    <span class="comment">#根据更新公式更新，类似于梯度下降</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update</span>():</span><br><span class="line">    <span class="keyword">for</span> episode <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        <span class="comment">#初始化环境</span></span><br><span class="line">        observation = env.reset()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#根据当前状态选行为</span></span><br><span class="line">        action = RL.choose_action(<span class="built_in">str</span>(observation))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 刷新环境</span></span><br><span class="line">            env.render()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 在环境中采取行为, 获得下一个 state_ (obervation_), reward, 和是否终止</span></span><br><span class="line">            observation_, reward, done = env.step(action)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#根据observation_选择observation_下应该选择的动作action_</span></span><br><span class="line">            action_ = RL.choose_action(<span class="built_in">str</span>(observation_))</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#从当前状态state，当前动作action，奖励r，执行动作后state_，state_下的action_,(s,a,r,s,a)</span></span><br><span class="line">            RL.learning(<span class="built_in">str</span>(observation), action, reward, <span class="built_in">str</span>(observation_), action_)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 将下一个当成下一步的 state (observation) and action。</span></span><br><span class="line">            <span class="comment">#与qlearning的却别是sarsa在observation_下真正执行了动作action_，供下次使用</span></span><br><span class="line">            <span class="comment">#而qlearning中下次状态observation_时还要重新选择action_</span></span><br><span class="line">            observation = observation_</span><br><span class="line">            action = action_</span><br><span class="line">            </span><br><span class="line">             <span class="comment"># 终止时跳出循环</span></span><br><span class="line">        <span class="keyword">if</span> done:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 大循环完毕</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;game over&#x27;</span>)</span><br><span class="line">    env.destroy()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    env = Maze()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#Sarsa和SarsaLambda的调用方式一模一样</span></span><br><span class="line">    <span class="comment">#RL = SarsaTable(actions=list(range(env.n_actions)))</span></span><br><span class="line">    RL = SarsaLambdaTable(actions=<span class="built_in">list</span>(<span class="built_in">range</span>(env.n_actions)))</span><br><span class="line"></span><br><span class="line">    env.after(<span class="number">100</span>, update)</span><br><span class="line">    env.mainloop()</span><br></pre></td></tr></table></figure><h4 id="Q-learning、"><a href="#Q-learning、" class="headerlink" title="Q-learning、"></a>Q-learning、</h4><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315201907446.png" alt="image-20210315201907446"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/20200323154100203.png" alt="在这里插入图片描述"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315202102199.png" alt="image-20210315202102199"></p><p>用同一个env</p><p>qlearnning-agent</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> maze_env <span class="keyword">import</span> Maze</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># RL的父类定义</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RL</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    <span class="comment"># actions为可选动作， learning_rate为学习率，reward_decay为传递奖励是的递减系数gamma，1-e_greed为随机选择其他动作的概率</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, actions, learning_rate=<span class="number">0.01</span>, reward_decay=<span class="number">0.9</span>, e_greedy=<span class="number">0.9</span></span>):</span><br><span class="line">        self.actions = actions</span><br><span class="line">        self.lr = learning_rate</span><br><span class="line">        self.gamma = reward_decay</span><br><span class="line">        self.epsilon = e_greedy</span><br><span class="line">        <span class="comment"># 初始化qtable，行为observation的state， 列为当前状态可以选择的action（对于所有列，可以选择的action一样）</span></span><br><span class="line">        self.q_table = pd.DataFrame(columns=self.actions, dtype=np.float64)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_action</span>(<span class="params">self, observation</span>):</span><br><span class="line">        self.check_state_exist(observation)  <span class="comment"># 检查当前状态是否存在，不存在就添加这个状态</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> np.random.uniform() &lt; self.epsilon:</span><br><span class="line">            state_action = self.q_table.loc[observation, :]  <span class="comment"># 找到当前状态可以选择的动作</span></span><br><span class="line">            <span class="comment"># 由于初始化或更新后一个状态下的动作值可能是相同的，为了避免每次都选择相同动作，用random.choice在值最大的action中损及选择一个</span></span><br><span class="line">            action = np.random.choice(state_action[state_action == np.<span class="built_in">max</span>(state_action)].index)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            action = np.random.choice(self.actions)  <span class="comment"># 0.1的几率随机选择动作</span></span><br><span class="line">        <span class="keyword">return</span> action</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_state_exist</span>(<span class="params">self, state</span>):</span><br><span class="line">        <span class="keyword">if</span> state <span class="keyword">not</span> <span class="keyword">in</span> self.q_table.index:</span><br><span class="line">            <span class="comment"># 若找不到该obversation的转态，则添加该状态到新的qtable</span></span><br><span class="line">            <span class="comment"># 新的state的动作的q初始值赋值为0，列名为dataframe的列名，index为state</span></span><br><span class="line">            self.q_table = self.q_table.append(</span><br><span class="line">                pd.Series([<span class="number">0</span>] * <span class="built_in">len</span>(self.actions), index=self.q_table.columns, name=state))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 不同方式的学习方法不同，用可变参数，直接pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learning</span>(<span class="params">self, *args</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># QLearning继承RL</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QLearningTable</span>(<span class="title class_ inherited__">RL</span>):</span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    <span class="comment"># 参数自己定义，含义继承父类RL</span></span><br><span class="line">    <span class="comment"># 类方法choose_action、check_state_exist自动继承RL，参数不变</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, actions, learning_rate=<span class="number">0.01</span>, reward_decay=<span class="number">0.9</span>, e_greedy=<span class="number">0.9</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(QLearningTable, self).__init__(actions, learning_rate, reward_decay, e_greedy)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根绝当前观察状态s，选择动作a，选择动作后的奖励r，和执行动作后的状态s_，来更新qtable</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learning</span>(<span class="params">self, s, a, r, s_</span>):</span><br><span class="line">        self.check_state_exist(s_)  <span class="comment"># 检查动作后状态s_是否存在</span></span><br><span class="line"></span><br><span class="line">        q_old = self.q_table.loc[s, a]  <span class="comment"># 旧的q[s,a]值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> s_ != <span class="string">&#x27;terminal&#x27;</span>:</span><br><span class="line">            <span class="comment"># 下个状态下最大的值</span></span><br><span class="line">            max_s_ = self.q_table.loc[s_, :].<span class="built_in">max</span>()</span><br><span class="line">            q_new = r + self.gamma * max_s_  <span class="comment"># 计算新的值</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            q_new = r</span><br><span class="line"></span><br><span class="line">        self.q_table.loc[s, a] = q_old - self.lr * (q_new - q_old)  <span class="comment"># 根据更新公式更新，类似于梯度下降</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update</span>():</span><br><span class="line">    <span class="keyword">for</span> episode <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        <span class="comment"># 初始化 state 的观测值</span></span><br><span class="line">        observation = env.reset()  <span class="comment"># 每轮训练都要初始化观测值，即回到原点状态</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            env.render()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># RL 大脑根据 state 的观测值挑选 action</span></span><br><span class="line">            action = RL.choose_action(<span class="built_in">str</span>(observation))  <span class="comment"># qlearning采用greeed方法，选择q值最大的action</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 探索者在环境中实施这个 action, 并得到环境返回的下一个 state 观测值, reward 和 done (是否是掉下地狱或者升上天堂)</span></span><br><span class="line">            <span class="comment"># 是根据当前选择动作，观察到的采取动作后的状态和奖励</span></span><br><span class="line">            observation_, reward, done = env.step(action)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># RL 从这个序列 (state, action, reward, state_) 中学习</span></span><br><span class="line">            <span class="comment"># 根绝旧observation的q值，和采取动作，以及奖励和采取动作后的observation_的最大q值进行更新</span></span><br><span class="line">            RL.learning(<span class="built_in">str</span>(observation), action, reward, <span class="built_in">str</span>(observation_))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 将下一个 state 的值传到下一次循环</span></span><br><span class="line">            observation = observation_</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> done:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 结束游戏并关闭窗口</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;game over&#x27;</span>)</span><br><span class="line">    env.destroy()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 定义环境 env 和 RL 方式</span></span><br><span class="line">    env = Maze()</span><br><span class="line">    RL = QLearningTable(actions=<span class="built_in">list</span>(<span class="built_in">range</span>(env.n_actions)))</span><br><span class="line">    <span class="comment"># 开始可视化环境 env</span></span><br><span class="line">    env.after(<span class="number">100</span>, update)</span><br><span class="line">    env.mainloop()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>唯一不同是on -&gt;off</p><p>并未真正执行a’，而是选择所有a中Q值最大的一项；</p><h5 id="DQN"><a href="#DQN" class="headerlink" title="DQN"></a>DQN</h5><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315202734362.png" alt="image-20210315202734362"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315203248027.png" alt="image-20210315203248027"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315203406102.png" alt="image-20210315203406102"></p><p>DQN的算法</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/20200323172714471.png" alt="在这里插入图片描述"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315204554812.png" alt="image-20210315204554812"></p><h5 id="学习策略：observation"><a href="#学习策略：observation" class="headerlink" title="学习策略：observation"></a>学习策略：observation</h5><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315213257698.png" alt="image-20210315213257698"></p><p><strong>更新方式一</strong>：更新慢，需要将所有的动作执行完才能更新</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315205418821.png" alt="image-20210315205418821"></p><p><strong><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/20200323190859264.png" alt="在这里插入图片描述">更新方式二</strong>：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/20200323191743435.png" alt="在这里插入图片描述"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315211111470.png" alt="image-20210315211111470"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315211131717.png" alt="image-20210315211131717"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315221326359.png" alt="image-20210315221326359"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315221342578.png" alt="image-20210315221342578"></p><p>但上面算法中，也有一些与Q-learning不同的地方，这是使DQN变得更加有效和技巧：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315221711848.png" alt="image-20210315221711848"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210315221729557.png" alt="image-20210315221729557"></p><h4 id="Dobule-DQN"><a href="#Dobule-DQN" class="headerlink" title="Dobule DQN"></a>Dobule DQN</h4><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316191813210.png" alt="image-20210316191813210"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316193812638.png" alt="image-20210316193812638"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316193825686.png" alt="image-20210316193825686"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316193923094.png" alt="image-20210316193923094"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316193946037.png" alt="image-20210316193946037"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316194102502.png" alt="image-20210316194102502"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Double_DeepQNetwork</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment">#replace_target_iter为更新target network的步数，防止target network和eval network差别过大</span></span><br><span class="line">    <span class="comment">#memory_size为buffer储存记忆上线，方便使用以前记忆学习</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n_actions, n_features,learning_rate=<span class="number">0.01</span>,reward_decay=<span class="number">0.9</span>,e_greedy=<span class="number">0.9</span>,replace_target_iter=<span class="number">300</span>,memory_size=<span class="number">500</span>,batch_size=<span class="number">32</span>,e_greedy_increment=<span class="literal">None</span>,output_graph=<span class="literal">False</span></span>):</span><br><span class="line">        self.n_actions = n_actions</span><br><span class="line">        self.n_features = n_features</span><br><span class="line">        self.lr = learning_rate</span><br><span class="line">        self.gamma = reward_decay</span><br><span class="line">        self.epsilon_max = e_greedy     <span class="comment"># epsilon后面奖励对前面的递减参数</span></span><br><span class="line">        self.replace_target_iter = replace_target_iter  <span class="comment"># 更换 target_net 的步数</span></span><br><span class="line">        self.memory_size = memory_size  <span class="comment"># 记忆上限</span></span><br><span class="line">        self.batch_size = batch_size    <span class="comment"># 每次更新时从 memory 里面取多少记忆出来</span></span><br><span class="line">        self.epsilon_increment = e_greedy_increment <span class="comment"># epsilon 的增量</span></span><br><span class="line">        <span class="comment">#epsilon = 0等于0时，后面的奖励创传不到前面，前面的状态就开启随机探索模式</span></span><br><span class="line">        self.epsilon = <span class="number">0</span> <span class="keyword">if</span> e_greedy_increment <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> self.epsilon_max <span class="comment"># 是否开启探索模式, 并逐步减少探索次数</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 记录学习次数 (用于判断是否更换 target_net 参数)</span></span><br><span class="line">        self.learn_step_counter = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 初始化全 0 记忆 [s, a, r, s_]， 实际上feature为状态的维度，n_features*2分别记录s和s_，+2记录a和r</span></span><br><span class="line">        self.memory = np.zeros((self.memory_size, n_features*<span class="number">2</span>+<span class="number">2</span>))</span><br><span class="line">        </span><br><span class="line">        self._build_net()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#替换 target net 的参数</span></span><br><span class="line">        t_params = tf.get_collection(<span class="string">&#x27;target_net_params&#x27;</span>)  <span class="comment">#提取 target_net 的参数</span></span><br><span class="line">        e_params = tf.get_collection(<span class="string">&#x27;eval_net_params&#x27;</span>)   <span class="comment"># 提取  eval_net 的参数</span></span><br><span class="line">        <span class="comment">#将eval_network中每一个variable的值赋值给target network的对应变量</span></span><br><span class="line">        self.replace_target_op = [tf.assign(t, e) <span class="keyword">for</span> t, e <span class="keyword">in</span> <span class="built_in">zip</span>(t_params, e_params)] <span class="comment">#更新 target_net 参数</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        self.sess = tf.Session()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> output_graph:</span><br><span class="line">            tf.summary.FileWriter(<span class="string">&quot;logs/&quot;</span>, self.sess.graph)</span><br><span class="line">        </span><br><span class="line">        self.sess.run(tf.global_variables_initializer())</span><br><span class="line">        <span class="comment">#用于记录# 记录所有 cost 变化</span></span><br><span class="line">        self.cost_his = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#李宏毅老师克重的relpay buffer，通过以往的记忆中不断训练</span></span><br><span class="line">    <span class="comment">#这是DQN变为off-policy的核心</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">store_transition</span>(<span class="params">self, s, a, r, s_</span>):</span><br><span class="line">        <span class="comment">#如果DeepQNetwork中定义了memory_counter，进行记忆存储</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(self, <span class="string">&#x27;memory_counter&#x27;</span>):</span><br><span class="line">            self.memory_counter = <span class="number">0</span></span><br><span class="line">        <span class="comment">#记录一条 [s, a, r, s_] 记录</span></span><br><span class="line">        transition = np.hstack((s, [a, r], s_))</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#总 memory 大小是固定的, 如果超出总大小, 旧 memory 就被新 memory 替换</span></span><br><span class="line">        index = self.memory_counter % self.memory_size  <span class="comment">#类似hashmap赋值思想</span></span><br><span class="line">        self.memory[index, :] = transition  <span class="comment">#进行替换</span></span><br><span class="line">        </span><br><span class="line">        self.memory_counter += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">#建立神经网络</span></span><br><span class="line">    <span class="comment">#此处建立两个申请网络，一个为target network，用于得到q现实。一个为eval_network，用于得到q估计</span></span><br><span class="line">    <span class="comment">#target network和eval_network结构一样，target network用比较老的参数，eval_network为真正训练的神经网络</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_build_net</span>(<span class="params">self</span>):</span><br><span class="line">        tf.reset_default_graph()  <span class="comment">#清空计算图</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#创建eval神经网络,及时提升参数</span></span><br><span class="line">        self.s = tf.placeholder(tf.float32, [<span class="literal">None</span>, self.n_features], name=<span class="string">&#x27;s&#x27;</span>)  <span class="comment"># 用来接收 observation，即神经网络的输入</span></span><br><span class="line">        self.q_target = tf.placeholder(tf.float32, [<span class="literal">None</span>, self.n_actions], name=<span class="string">&#x27;Q_target&#x27;</span>) <span class="comment"># q_target的值, 这个之后会通过计算得到，神经网络的输出</span></span><br><span class="line">        <span class="comment">#eval_net域下的变量</span></span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;eval_net&#x27;</span>):</span><br><span class="line">            <span class="comment">#c_names用于在一定步数之后更新target network</span></span><br><span class="line">            <span class="comment">#GLOBAL_VARIABLES作用是collection默认加入所有的Variable对象，用于共享</span></span><br><span class="line">            c_names = [<span class="string">&#x27;eval_net_params&#x27;</span>, tf.GraphKeys.GLOBAL_VARIABLES]</span><br><span class="line">            n_l1 = <span class="number">10</span>  <span class="comment">#n_l1为network隐藏层神经元的个数 </span></span><br><span class="line">            w_initializer = tf.random_normal_initializer(<span class="number">0.</span>,<span class="number">0.3</span>)  </span><br><span class="line">            b_initializer = tf.constant_initializer(<span class="number">0.1</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#eval_network第一层全连接神经网络</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;l1&#x27;</span>):</span><br><span class="line">                w1 = tf.get_variable(<span class="string">&#x27;w1&#x27;</span>, [self.n_features, n_l1], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b1 = tf.get_variable(<span class="string">&#x27;b1&#x27;</span>, [<span class="number">1</span>, n_l1], initializer=b_initializer, collections=c_names)</span><br><span class="line">                l1 = tf.nn.relu(tf.matmul(self.s, w1)+b1)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#eval_network第二层全连接神经网络</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;l1&#x27;</span>):</span><br><span class="line">                w2 = tf.get_variable(<span class="string">&#x27;w2&#x27;</span>, [n_l1, self.n_actions], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b2 = tf.get_variable(<span class="string">&#x27;b2&#x27;</span>, [<span class="number">1</span>, self.n_actions], initializer=b_initializer, collections=c_names)</span><br><span class="line">                <span class="comment">#求出q估计值，长度为n_actions的向量</span></span><br><span class="line">                self.q_eval = tf.matmul(l1, w2) + b2</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;loss&#x27;</span>): <span class="comment"># 求误差</span></span><br><span class="line">            <span class="comment">#使用平方误差</span></span><br><span class="line">            self.loss = tf.reduce_mean(tf.squared_difference(self.q_target, self.q_eval))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;train&#x27;</span>):    <span class="comment"># 梯度下降</span></span><br><span class="line">            optimizer = tf.train.RMSPropOptimizer(self.lr)</span><br><span class="line">            self._train_op = optimizer.minimize(self.loss)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#创建target network，输入选择一个action后的状态s_,输出q_target</span></span><br><span class="line">        self.s_ = tf.placeholder(tf.float32, [<span class="literal">None</span>, self.n_features], name=<span class="string">&#x27;s_&#x27;</span>)    <span class="comment"># 接收下个 observation</span></span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;target_net&#x27;</span>):</span><br><span class="line">            c_names = [<span class="string">&#x27;target_net_params&#x27;</span>, tf.GraphKeys.GLOBAL_VARIABLES]</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># target_net 的第一层fc， collections 是在更新 target_net 参数时会用到</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;l1&#x27;</span>):</span><br><span class="line">                w1 = tf.get_variable(<span class="string">&#x27;w1&#x27;</span>, [self.n_features, n_l1], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b1 = tf.get_variable(<span class="string">&#x27;b1&#x27;</span>, [<span class="number">1</span>, n_l1], initializer=b_initializer, collections=c_names)</span><br><span class="line">                l1 = tf.nn.relu(tf.matmul(self.s_, w1) + b1)</span><br><span class="line">                </span><br><span class="line">            <span class="comment"># target_net 的第二层fc</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;l2&#x27;</span>):</span><br><span class="line">                w2 = tf.get_variable(<span class="string">&#x27;w2&#x27;</span>, [n_l1, self.n_actions], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b2 = tf.get_variable(<span class="string">&#x27;b2&#x27;</span>, [<span class="number">1</span>, self.n_actions], initializer=b_initializer, collections=c_names)</span><br><span class="line">                <span class="comment">#申请网络输出</span></span><br><span class="line">                self.q_next = tf.matmul(l1, w2) + b2</span><br><span class="line">            </span><br><span class="line">        <span class="built_in">print</span>(self.q_next)</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_action</span>(<span class="params">self, observation</span>):</span><br><span class="line">        <span class="comment">#根据observation（state）选行为</span></span><br><span class="line">        <span class="comment">#使用eval network选出state下的行为估计</span></span><br><span class="line">        <span class="comment">#将observation的shape变为(1, size_of_observation)，行向量变为列向量才能与NN维度统一</span></span><br><span class="line">        observation = observation[np.newaxis, :]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> np.random.uniform() &lt; self.epsilon:</span><br><span class="line">            action_value = self.sess.run(self.q_eval, feed_dict=&#123;self.s:observation&#125;)</span><br><span class="line">            action = np.argmax(action_value)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            action = np.random.randint(<span class="number">0</span>, self.n_actions)   <span class="comment">#随机选择</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> action</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.learn_step_counter % self.replace_target_iter ==<span class="number">0</span>:</span><br><span class="line">            self.sess.run(self.replace_target_op)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;\ntarget_params_replaced\n&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#从memory中随机抽取batch_size这么多记忆</span></span><br><span class="line">        <span class="keyword">if</span> self.memory_counter &gt; self.memory_size:   <span class="comment">#说明记忆库已经存满，可以从记忆库任意位置收取</span></span><br><span class="line">            sample_index = np.random.choice(self.memory_size, size=self.batch_size)</span><br><span class="line">        <span class="keyword">else</span>:   <span class="comment">#记忆库还没有存满，从现有的存储记忆提取</span></span><br><span class="line">            sample_index = np.random.choice(self.memory_counter, size=self.batch_size)</span><br><span class="line">        </span><br><span class="line">        batch_memory= self.memory[sample_index, :]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取q_next即q现实(target_net产生的q)和q_eval(eval_net产生的q)</span></span><br><span class="line">        <span class="comment">#q_next和q_eval都是一个向量，包含了对应状态下所有动作的q值</span></span><br><span class="line">        <span class="comment">#实际上feature为状态的维度，batch_memory[:, -self.n_features:]为s_,即状态s采取动作action后的状态s_, batch_memory[:, :self.n_features]为s</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取q_next即q现实(target_net产生的q)和q_eval(eval_net产生的q)</span></span><br><span class="line">        <span class="comment">#q_next和q_eval都是一个向量，包含了对应状态下所有动作的q值</span></span><br><span class="line">        <span class="comment">#实际上feature为状态的维度，batch_memory[:, -self.n_features:]为s_,即状态s采取动作action后的状态s_, batch_memory[:, :self.n_features]为s</span></span><br><span class="line">        <span class="comment">#q_next, q_eval的维度为[None,n_actions]</span></span><br><span class="line">        q_next, q_eval = self.sess.run([self.q_next, self.q_eval], feed_dict=&#123;self.s_: batch_memory[:, -self.n_features:],self.s: batch_memory[:, :self.n_features]&#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#用t+1的状态带入eval network先选出动作</span></span><br><span class="line">        action_value = self.sess.run(self.q_eval, feed_dict=&#123;self.s: batch_memory[:, -self.n_features:]&#125;)</span><br><span class="line">        <span class="comment">#维度为[batch_size, 1]</span></span><br><span class="line">        action = np.argmax(action_value, axis=<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#下面这几步十分重要. q_next, q_eval 包含所有 action 的值, 而我们需要的只是已经选择好的 action 的值, 其他的并不需要.所以我们将其他的 action 值全变成 0, 将用到的 action 误差值 反向传递回去, 作为更新凭据.</span></span><br><span class="line">        <span class="comment">#这是我们最终要达到的样子, 比如 q_target - q_eval = [1, 0, 0] - [-1, 0, 0] = [2, 0, 0]</span></span><br><span class="line">        <span class="comment"># q_eval = [-1, 0, 0] 表示这一个记忆中有我选用过 action 0, 而action0带来的 Q(s, a0)=-1,而其他的 Q(s, a1)=Q(s, a2)=0</span></span><br><span class="line">        <span class="comment"># q_target = [1, 0, 0] 表示这个记忆中的 r+gamma*maxQ(s_) = 1, 而且不管在 s_ 上我们取了哪个 action</span></span><br><span class="line">        <span class="comment"># 我们都需要对应上 q_eval 中的 action 位置, 所以就将 q_target的1放在了 action0的位置.</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 下面也是为了达到上面说的目的, 不过为了更方面让程序运算, 达到目的的过程有点不同.# 是将 q_eval 全部赋值给 q_target, 这时 q_target-q_eval 全为 0,</span></span><br><span class="line">        <span class="comment"># 不过 我们再根据 batch_memory 当中的 action 这个 column 来给 q_target 中的对应的 memory-action 位置来修改赋值.</span></span><br><span class="line">        <span class="comment"># 使新的赋值为 reward + gamma * maxQ(s_), 这样 q_target-q_eval 就可以变成我们所需的样子.</span></span><br><span class="line">        q_target = q_eval.copy()</span><br><span class="line">        <span class="comment">#每个样本下标</span></span><br><span class="line">        batch_index = np.arange(self.batch_size, dtype=np.int32)</span><br><span class="line">        <span class="comment">#记录每个样本执行的动作</span></span><br><span class="line">        eval_act_index = batch_memory[:, self.n_features].astype(<span class="built_in">int</span>)</span><br><span class="line">        <span class="comment">#记录每个样本动作的奖励</span></span><br><span class="line">        reward = batch_memory[:, self.n_features + <span class="number">1</span>]</span><br><span class="line">        <span class="comment">#生成每个样本中q值对应动作的更新，即生成的q现实， </span></span><br><span class="line">        q_target[batch_index, eval_act_index]=reward+self.gamma * q_next[batch_index, action] </span><br><span class="line">        </span><br><span class="line">        <span class="comment">#假如在这个 batch 中, 我们有2个提取的记忆, 根据每个记忆可以生产3个 action 的值:</span></span><br><span class="line">        <span class="comment">#q_eval =[[1, 2, 3],[4, 5, 6]]， 另q_target = q_eval.copy()</span></span><br><span class="line">        <span class="comment">#然后根据 memory 当中的具体 action 位置来修改 q_target 对应 action 上的值:</span></span><br><span class="line">        <span class="comment">#比如在:记忆 0 的 q_target 计算值是 -1, 而且我用了 action 0;忆1的 q_target 计算值是-2, 而且我用了 action 2:</span></span><br><span class="line">        <span class="comment">#q_target =[[-1, 2, 3],[4, 5, -2]]</span></span><br><span class="line">        <span class="comment">#所以 (q_target - q_eval) 就变成了:[[(-1)-(1), 0, 0],[0, 0, (-2)-(6)]]</span></span><br><span class="line">        <span class="comment">#最后我们将这个 (q_target - q_eval) 当成误差, 反向传递会神经网络</span></span><br><span class="line">        <span class="comment">#所有为 0 的 action 值是当时没有选择的 action, 之前有选择的 action 才有不为0的值.</span></span><br><span class="line">        <span class="comment">#我们只反向传递之前选择的 action 的值,</span></span><br><span class="line">        _, self.cost = self.sess.run([self._train_op, self.loss],feed_dict=&#123;self.s: batch_memory[:, :self.n_features],self.q_target: q_target&#125;)</span><br><span class="line">        </span><br><span class="line">        self.cost_his.append(self.cost) <span class="comment"># 记录 cost 误差</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#每调用一次learn，降低一次epsilon，即行为随机性</span></span><br><span class="line">        self.epsilon = self.epsilon + self.epsilon_increment <span class="keyword">if</span> self.epsilon &lt; self.epsilon_max <span class="keyword">else</span> self.epsilon_max</span><br><span class="line">        </span><br><span class="line">        self.learn_step_counter += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">plot_cost</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">        plt.plot(np.arange(<span class="built_in">len</span>(self.cost_his)), self.cost_his)</span><br><span class="line">        plt.ylabel(<span class="string">&#x27;Cost&#x27;</span>)</span><br><span class="line">        plt.xlabel(<span class="string">&#x27;training steps&#x27;</span>)</span><br><span class="line">        plt.show()</span><br></pre></td></tr></table></figure><p>Double-DQN的agent编写与DQN几乎一样只是在求q估计的时候先用eval network求出价值最大的动作，再讲这个动作带入target network。<br>之前在DQN中使用的公式为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">q_target[batch_index, eval_act_index]=reward+self.gamma * np.<span class="built_in">max</span>(q_next, axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment">#改为：</span></span><br><span class="line"><span class="comment">#用t+1的状态带入eval network先选出动作</span></span><br><span class="line">action_value = self.sess.run(self.q_eval, feed_dict=&#123;self.s: batch_memory[:, -self.n_features:]&#125;)</span><br><span class="line"><span class="comment">#维度为[batch_size, 1]</span></span><br><span class="line">action = np.argmax(action_value, axis=<span class="number">1</span>)</span><br><span class="line">q_target[batch_index, eval_act_index]=reward+self.gamma * q_next[batch_index, action]</span><br></pre></td></tr></table></figure><h4 id="Duling-DQN"><a href="#Duling-DQN" class="headerlink" title="Duling DQN"></a>Duling DQN</h4><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316204901396.png" alt="image-20210316204901396"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316204930844.png" alt="image-20210316204930844"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316205031940.png" alt="image-20210316205031940"></p><p>Dueling DQN与DQN的网络结构不同，其他过程相似。着重是更改原来DQN Agent的build_net()方法。<br>之前构建的方式是通过一个隐藏层直接获得q值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;l1&#x27;</span>):</span><br><span class="line">                w2 = tf.get_variable(<span class="string">&#x27;w2&#x27;</span>, [n_l1, self.n_actions], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b2 = tf.get_variable(<span class="string">&#x27;b2&#x27;</span>, [<span class="number">1</span>, self.n_actions], initializer=b_initializer, collections=c_names)</span><br><span class="line">                <span class="comment">#求出q估计值，长度为n_actions的向量</span></span><br><span class="line">                self.q_eval = tf.matmul(l1, w2) + b2</span><br><span class="line">                </span><br><span class="line"><span class="comment">#现在将q_eval 拆分为状态价值v和动作价值a，其中动作价值a的均值为0（q_target需要做同样的改动）：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#状态的价值</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;value&#x27;</span>):</span><br><span class="line">                w21 = tf.get_variable(<span class="string">&#x27;w21&#x27;</span>, [n_l1, <span class="number">1</span>], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b21 = tf.get_variable(<span class="string">&#x27;b21&#x27;</span>, [<span class="number">1</span>], initializer=b_initializer, collections=c_names)</span><br><span class="line">                vs_out = tf.matmul(l1, w21) + b21</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#动作的advantage</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;advantage&#x27;</span>):</span><br><span class="line">                w22 = tf.get_variable(<span class="string">&#x27;w22&#x27;</span>, [n_l1, self.n_actions], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b22 = tf.get_variable(<span class="string">&#x27;b22&#x27;</span>, [<span class="number">1</span>, self.n_actions], initializer=b_initializer, collections=c_names)</span><br><span class="line">                aa = tf.matmul(l1, w22) + b22</span><br><span class="line">                <span class="comment">#为了不让A直接学成了Q, 我们减掉了A的均值，此时A的均值始终为0</span></span><br><span class="line">                aa_out = aa - tf.reduce_mean(aa, axis=<span class="number">1</span>, keep_dims=<span class="literal">True</span>)</span><br><span class="line">                </span><br><span class="line">            <span class="comment">#合并V和A, 求出q估计值</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;Q&#x27;</span>):</span><br><span class="line">                self.q_eval = vs_out + aa_out</span><br><span class="line">                </span><br><span class="line">               </span><br></pre></td></tr></table></figure><p>完整的dueling DQN的Agent的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dueling_DeepQNetwork</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment">#replace_target_iter为更新target network的步数，防止target network和eval network差别过大</span></span><br><span class="line">    <span class="comment">#memory_size为buffer储存记忆上线，方便使用以前记忆学习</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n_actions, n_features,learning_rate=<span class="number">0.01</span>,reward_decay=<span class="number">0.9</span>,e_greedy=<span class="number">0.9</span>,replace_target_iter=<span class="number">300</span>,memory_size=<span class="number">500</span>,batch_size=<span class="number">32</span>,e_greedy_increment=<span class="literal">None</span>,output_graph=<span class="literal">False</span></span>):</span><br><span class="line">        self.n_actions = n_actions</span><br><span class="line">        self.n_features = n_features</span><br><span class="line">        self.lr = learning_rate</span><br><span class="line">        self.gamma = reward_decay</span><br><span class="line">        self.epsilon_max = e_greedy     <span class="comment"># epsilon后面奖励对前面的递减参数</span></span><br><span class="line">        self.replace_target_iter = replace_target_iter  <span class="comment"># 更换 target_net 的步数</span></span><br><span class="line">        self.memory_size = memory_size  <span class="comment"># 记忆上限</span></span><br><span class="line">        self.batch_size = batch_size    <span class="comment"># 每次更新时从 memory 里面取多少记忆出来</span></span><br><span class="line">        self.epsilon_increment = e_greedy_increment <span class="comment"># epsilon 的增量</span></span><br><span class="line">        <span class="comment">#epsilon = 0等于0时，后面的奖励创传不到前面，前面的状态就开启随机探索模式</span></span><br><span class="line">        self.epsilon = <span class="number">0</span> <span class="keyword">if</span> e_greedy_increment <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> self.epsilon_max <span class="comment"># 是否开启探索模式, 并逐步减少探索次数</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 记录学习次数 (用于判断是否更换 target_net 参数)</span></span><br><span class="line">        self.learn_step_counter = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 初始化全 0 记忆 [s, a, r, s_]， 实际上feature为状态的维度，n_features*2分别记录s和s_，+2记录a和r</span></span><br><span class="line">        self.memory = np.zeros((self.memory_size, n_features*<span class="number">2</span>+<span class="number">2</span>))</span><br><span class="line">        </span><br><span class="line">        self._build_net()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#替换 target net 的参数</span></span><br><span class="line">        t_params = tf.get_collection(<span class="string">&#x27;target_net_params&#x27;</span>)  <span class="comment">#提取 target_net 的参数</span></span><br><span class="line">        e_params = tf.get_collection(<span class="string">&#x27;eval_net_params&#x27;</span>)   <span class="comment"># 提取  eval_net 的参数</span></span><br><span class="line">        <span class="comment">#将eval_network中每一个variable的值赋值给target network的对应变量</span></span><br><span class="line">        self.replace_target_op = [tf.assign(t, e) <span class="keyword">for</span> t, e <span class="keyword">in</span> <span class="built_in">zip</span>(t_params, e_params)] <span class="comment">#更新 target_net 参数</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        self.sess = tf.Session()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> output_graph:</span><br><span class="line">            tf.summary.FileWriter(<span class="string">&quot;logs/&quot;</span>, self.sess.graph)</span><br><span class="line">        </span><br><span class="line">        self.sess.run(tf.global_variables_initializer())</span><br><span class="line">        <span class="comment">#用于记录# 记录所有 cost 变化</span></span><br><span class="line">        self.cost_his = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#李宏毅老师克重的relpay buffer，通过以往的记忆中不断训练</span></span><br><span class="line">    <span class="comment">#这是DQN变为off-policy的核心</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">store_transition</span>(<span class="params">self, s, a, r, s_</span>):</span><br><span class="line">        <span class="comment">#如果DeepQNetwork中定义了memory_counter，进行记忆存储</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(self, <span class="string">&#x27;memory_counter&#x27;</span>):</span><br><span class="line">            self.memory_counter = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#记录一条 [s, a, r, s_] 记录</span></span><br><span class="line">        transition = np.hstack((s, [a, r], s_))</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#总 memory 大小是固定的, 如果超出总大小, 旧 memory 就被新 memory 替换</span></span><br><span class="line">        index = self.memory_counter % self.memory_size  <span class="comment">#类似hashmap赋值思想</span></span><br><span class="line">        self.memory[index, :] = transition  <span class="comment">#进行替换</span></span><br><span class="line">        </span><br><span class="line">        self.memory_counter += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">#建立神经网络</span></span><br><span class="line">    <span class="comment">#此处建立两个申请网络，一个为target network，用于得到q现实。一个为eval_network，用于得到q估计</span></span><br><span class="line">    <span class="comment">#target network和eval_network结构一样，target network用比较老的参数，eval_network为真正训练的神经网络</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_build_net</span>(<span class="params">self</span>):</span><br><span class="line">        tf.reset_default_graph()  <span class="comment">#清空计算图</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#创建eval神经网络,及时提升参数</span></span><br><span class="line">        self.s = tf.placeholder(tf.float32, [<span class="literal">None</span>, self.n_features], name=<span class="string">&#x27;s&#x27;</span>)  <span class="comment"># 用来接收 observation，即神经网络的输入</span></span><br><span class="line">        self.q_target = tf.placeholder(tf.float32, [<span class="literal">None</span>, self.n_actions], name=<span class="string">&#x27;Q_target&#x27;</span>) <span class="comment"># q_target的值, 这个之后会通过计算得到，神经网络的输出</span></span><br><span class="line">        <span class="comment">#eval_net域下的变量</span></span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;eval_net&#x27;</span>):</span><br><span class="line">            <span class="comment">#c_names用于在一定步数之后更新target network</span></span><br><span class="line">            <span class="comment">#GLOBAL_VARIABLES作用是collection默认加入所有的Variable对象，用于共享</span></span><br><span class="line">            c_names = [<span class="string">&#x27;eval_net_params&#x27;</span>, tf.GraphKeys.GLOBAL_VARIABLES]</span><br><span class="line">            n_l1 = <span class="number">10</span>  <span class="comment">#n_l1为network隐藏层神经元的个数 </span></span><br><span class="line">            w_initializer = tf.random_normal_initializer(<span class="number">0.</span>,<span class="number">0.3</span>)  </span><br><span class="line">            b_initializer = tf.constant_initializer(<span class="number">0.1</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#eval_network第一层全连接神经网络</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;l1&#x27;</span>):</span><br><span class="line">                w1 = tf.get_variable(<span class="string">&#x27;w1&#x27;</span>, [self.n_features, n_l1], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b1 = tf.get_variable(<span class="string">&#x27;b1&#x27;</span>, [<span class="number">1</span>, n_l1], initializer=b_initializer, collections=c_names)</span><br><span class="line">                l1 = tf.nn.relu(tf.matmul(self.s, w1)+b1)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#状态的价值</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;value&#x27;</span>):</span><br><span class="line">                w21 = tf.get_variable(<span class="string">&#x27;w21&#x27;</span>, [n_l1, <span class="number">1</span>], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b21 = tf.get_variable(<span class="string">&#x27;b21&#x27;</span>, [<span class="number">1</span>], initializer=b_initializer, collections=c_names)</span><br><span class="line">                vs_out = tf.matmul(l1, w21) + b21</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#动作的advantage</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;advantage&#x27;</span>):</span><br><span class="line">                w22 = tf.get_variable(<span class="string">&#x27;w22&#x27;</span>, [n_l1, self.n_actions], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b22 = tf.get_variable(<span class="string">&#x27;b22&#x27;</span>, [<span class="number">1</span>, self.n_actions], initializer=b_initializer, collections=c_names)</span><br><span class="line">                aa = tf.matmul(l1, w22) + b22</span><br><span class="line">                <span class="comment">#为了不让A直接学成了Q, 我们减掉了A的均值，此时A的均值始终为0</span></span><br><span class="line">                aa_out = aa - tf.reduce_mean(aa, axis=<span class="number">1</span>, keep_dims=<span class="literal">True</span>)</span><br><span class="line">                </span><br><span class="line">            <span class="comment">#合并V和A, 求出q估计值</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;Q&#x27;</span>):</span><br><span class="line">                self.q_eval = vs_out + aa_out</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;loss&#x27;</span>): <span class="comment"># 求误差</span></span><br><span class="line">            <span class="comment">#使用平方误差</span></span><br><span class="line">            self.loss = tf.reduce_mean(tf.squared_difference(self.q_target, self.q_eval))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;train&#x27;</span>):    <span class="comment"># 梯度下降</span></span><br><span class="line">            optimizer = tf.train.RMSPropOptimizer(self.lr)</span><br><span class="line">            self._train_op = optimizer.minimize(self.loss)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#创建target network，输入选择一个action后的状态s_,输出q_target</span></span><br><span class="line">        self.s_ = tf.placeholder(tf.float32, [<span class="literal">None</span>, self.n_features], name=<span class="string">&#x27;s_&#x27;</span>)    <span class="comment"># 接收下个 observation</span></span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;target_net&#x27;</span>):</span><br><span class="line">            c_names = [<span class="string">&#x27;target_net_params&#x27;</span>, tf.GraphKeys.GLOBAL_VARIABLES]</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># target_net 的第一层fc， collections 是在更新 target_net 参数时会用到</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;l1&#x27;</span>):</span><br><span class="line">                w1 = tf.get_variable(<span class="string">&#x27;w1&#x27;</span>, [self.n_features, n_l1], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b1 = tf.get_variable(<span class="string">&#x27;b1&#x27;</span>, [<span class="number">1</span>, n_l1], initializer=b_initializer, collections=c_names)</span><br><span class="line">                l1 = tf.nn.relu(tf.matmul(self.s_, w1) + b1)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#状态的价值</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;value&#x27;</span>):</span><br><span class="line">                w21 = tf.get_variable(<span class="string">&#x27;w21&#x27;</span>, [n_l1, <span class="number">1</span>], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b21 = tf.get_variable(<span class="string">&#x27;b21&#x27;</span>, [<span class="number">1</span>], initializer=b_initializer, collections=c_names)</span><br><span class="line">                vs_out = tf.matmul(l1, w21) + b21</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#动作的advantage</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;advantage&#x27;</span>):</span><br><span class="line">                w22 = tf.get_variable(<span class="string">&#x27;w22&#x27;</span>, [n_l1, self.n_actions], initializer=w_initializer, collections=c_names)</span><br><span class="line">                b22 = tf.get_variable(<span class="string">&#x27;b22&#x27;</span>, [<span class="number">1</span>, self.n_actions], initializer=b_initializer, collections=c_names)</span><br><span class="line">                aa = tf.matmul(l1, w22) + b22</span><br><span class="line">                <span class="comment">#为了不让A直接学成了Q, 我们减掉了A的均值，此时A的均值始终为0</span></span><br><span class="line">                aa_out = aa - tf.reduce_mean(aa, axis=<span class="number">1</span>, keep_dims=<span class="literal">True</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#合并V和A, 求出q估计值</span></span><br><span class="line">            <span class="keyword">with</span> tf.variable_scope(<span class="string">&#x27;Q&#x27;</span>):</span><br><span class="line">                self.q_next = vs_out + aa_out</span><br><span class="line">            </span><br><span class="line">        <span class="built_in">print</span>(self.q_next)</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_action</span>(<span class="params">self, observation</span>):</span><br><span class="line">        <span class="comment">#根据observation（state）选行为</span></span><br><span class="line">        <span class="comment">#使用eval network选出state下的行为估计</span></span><br><span class="line">        <span class="comment">#将observation的shape变为(1, size_of_observation)，行向量变为列向量才能与NN维度统一</span></span><br><span class="line">        observation = observation[np.newaxis, :]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> np.random.uniform() &lt; self.epsilon:</span><br><span class="line">            action_value = self.sess.run(self.q_eval, feed_dict=&#123;self.s:observation&#125;)</span><br><span class="line">            action = np.argmax(action_value)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            action = np.random.randint(<span class="number">0</span>, self.n_actions)   <span class="comment">#随机选择</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> action</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.learn_step_counter % self.replace_target_iter ==<span class="number">0</span>:</span><br><span class="line">            self.sess.run(self.replace_target_op)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;\ntarget_params_replaced\n&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#从memory中随机抽取batch_size这么多记忆</span></span><br><span class="line">        <span class="keyword">if</span> self.memory_counter &gt; self.memory_size:   <span class="comment">#说明记忆库已经存满，可以从记忆库任意位置收取</span></span><br><span class="line">            sample_index = np.random.choice(self.memory_size, size=self.batch_size)</span><br><span class="line">        <span class="keyword">else</span>:   <span class="comment">#记忆库还没有存满，从现有的存储记忆提取</span></span><br><span class="line">            sample_index = np.random.choice(self.memory_counter, size=self.batch_size)</span><br><span class="line">        </span><br><span class="line">        batch_memory= self.memory[sample_index, :]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取q_next即q现实(target_net产生的q)和q_eval(eval_net产生的q)</span></span><br><span class="line">        <span class="comment">#q_next和q_eval都是一个向量，包含了对应状态下所有动作的q值</span></span><br><span class="line">        <span class="comment">#实际上feature为状态的维度，batch_memory[:, -self.n_features:]为s_,即状态s采取动作action后的状态s_, batch_memory[:, :self.n_features]为s</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取q_next即q现实(target_net产生的q)和q_eval(eval_net产生的q)</span></span><br><span class="line">        <span class="comment">#q_next和q_eval都是一个向量，包含了对应状态下所有动作的q值</span></span><br><span class="line">        <span class="comment">#实际上feature为状态的维度，batch_memory[:, -self.n_features:]为s_,即状态s采取动作action后的状态s_, batch_memory[:, :self.n_features]为s</span></span><br><span class="line">        <span class="comment">#q_next, q_eval的维度为[None,n_actions]</span></span><br><span class="line">        q_next, q_eval = self.sess.run([self.q_next, self.q_eval], feed_dict=&#123;self.s_: batch_memory[:, -self.n_features:],self.s: batch_memory[:, :self.n_features]&#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#下面这几步十分重要. q_next, q_eval 包含所有 action 的值, 而我们需要的只是已经选择好的 action 的值, 其他的并不需要.所以我们将其他的 action 值全变成 0, 将用到的 action 误差值 反向传递回去, 作为更新凭据.</span></span><br><span class="line">        <span class="comment">#这是我们最终要达到的样子, 比如 q_target - q_eval = [1, 0, 0] - [-1, 0, 0] = [2, 0, 0]</span></span><br><span class="line">        <span class="comment"># q_eval = [-1, 0, 0] 表示这一个记忆中有我选用过 action 0, 而action0带来的 Q(s, a0)=-1,而其他的 Q(s, a1)=Q(s, a2)=0</span></span><br><span class="line">        <span class="comment"># q_target = [1, 0, 0] 表示这个记忆中的 r+gamma*maxQ(s_) = 1, 而且不管在 s_ 上我们取了哪个 action</span></span><br><span class="line">        <span class="comment"># 我们都需要对应上 q_eval 中的 action 位置, 所以就将 q_target的1放在了 action0的位置.</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 下面也是为了达到上面说的目的, 不过为了更方面让程序运算, 达到目的的过程有点不同.# 是将 q_eval 全部赋值给 q_target, 这时 q_target-q_eval 全为 0,</span></span><br><span class="line">        <span class="comment"># 不过 我们再根据 batch_memory 当中的 action 这个 column 来给 q_target 中的对应的 memory-action 位置来修改赋值.</span></span><br><span class="line">        <span class="comment"># 使新的赋值为 reward + gamma * maxQ(s_), 这样 q_target-q_eval 就可以变成我们所需的样子.</span></span><br><span class="line">        </span><br><span class="line">        q_target = q_eval.copy()</span><br><span class="line">        <span class="comment">#每个样本下标</span></span><br><span class="line">        batch_index = np.arange(self.batch_size, dtype=np.int32)</span><br><span class="line">        <span class="comment">#记录每个样本执行的动作</span></span><br><span class="line">        eval_act_index = batch_memory[:, self.n_features].astype(<span class="built_in">int</span>)</span><br><span class="line">        <span class="comment">#记录每个样本动作的奖励</span></span><br><span class="line">        reward = batch_memory[:, self.n_features + <span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#生成每个样本中q值对应动作的更新，即生成的q现实，</span></span><br><span class="line">        q_target[batch_index, eval_act_index]=reward+self.gamma * np.<span class="built_in">max</span>(q_next, axis=<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#假如在这个 batch 中, 我们有2个提取的记忆, 根据每个记忆可以生产3个 action 的值:</span></span><br><span class="line">        <span class="comment">#q_eval =[[1, 2, 3],[4, 5, 6]]， 另q_target = q_eval.copy()</span></span><br><span class="line">        <span class="comment">#然后根据 memory 当中的具体 action 位置来修改 q_target 对应 action 上的值:</span></span><br><span class="line">        <span class="comment">#比如在:记忆 0 的 q_target 计算值是 -1, 而且我用了 action 0;忆1的 q_target 计算值是-2, 而且我用了 action 2:</span></span><br><span class="line">        <span class="comment">#q_target =[[-1, 2, 3],[4, 5, -2]]</span></span><br><span class="line">        <span class="comment">#所以 (q_target - q_eval) 就变成了:[[(-1)-(1), 0, 0],[0, 0, (-2)-(6)]]</span></span><br><span class="line">        <span class="comment">#最后我们将这个 (q_target - q_eval) 当成误差, 反向传递会神经网络</span></span><br><span class="line">        <span class="comment">#所有为 0 的 action 值是当时没有选择的 action, 之前有选择的 action 才有不为0的值.</span></span><br><span class="line">        <span class="comment">#我们只反向传递之前选择的 action 的值,</span></span><br><span class="line">        _, self.cost = self.sess.run([self._train_op, self.loss],feed_dict=&#123;self.s: batch_memory[:, :self.n_features],self.q_target: q_target&#125;)</span><br><span class="line">        </span><br><span class="line">        self.cost_his.append(self.cost) <span class="comment"># 记录 cost 误差</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#每调用一次learn，降低一次epsilon，即行为随机性</span></span><br><span class="line">        self.epsilon = self.epsilon + self.epsilon_increment <span class="keyword">if</span> self.epsilon &lt; self.epsilon_max <span class="keyword">else</span> self.epsilon_max</span><br><span class="line">        </span><br><span class="line">        self.learn_step_counter += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">plot_cost</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">        plt.plot(np.arange(<span class="built_in">len</span>(self.cost_his)), self.cost_his)</span><br><span class="line">        plt.ylabel(<span class="string">&#x27;Cost&#x27;</span>)</span><br><span class="line">        plt.xlabel(<span class="string">&#x27;training steps&#x27;</span>)</span><br><span class="line">        plt.show()</span><br></pre></td></tr></table></figure><h4 id="Policy-Gradient"><a href="#Policy-Gradient" class="headerlink" title="Policy Gradient"></a>Policy Gradient</h4><p>之前说的SARSA、Q-learning、DQN学习的都是在状态s下动作a的价值，属于value-based的方法。而Policy Gradient学习的是在状态s下每个动作a被选择的概率，属于policy-based的方法。</p><p>我们先说Policy Gradient的整体思想，之后将整体思想进行拆分，产生Policy Gradient每一步的流程。</p><p>Policy Gradient的网络要学习的是状态下动作输出的概率。按照常识来讲，可以获得越大的奖励的动作应该被选择的概率是越大的。需要注意的是这里所说的奖励并不是一个动作单步的奖励，而是当整个游戏结束时，这个动作整体所产生的价值，这个价值我们叫做advantage。因此我们的网络要学习的目标就是：按照每个动作的概率进行选择时，获得的奖励的期望值是最大的。</p><p><a href="https://www.jianshu.com/p/428b640046aa">https://www.jianshu.com/p/428b640046aa</a></p><h5 id="策略梯度"><a href="#策略梯度" class="headerlink" title="策略梯度"></a>策略梯度</h5><p>在PG算法中，我们的Agent又被称为Actor，Actor对于一个特定的任务，都有自己的一个策略π，策略π通常用一个神经网络表示，其参数为θ。从一个特定的状态state出发，一直到任务的结束，被称为一个完整的eposide，在每一步，我们都能获得一个奖励r，一个完整的任务所获得的最终奖励被称为R。这样，一个有T个时刻的eposide，Actor不断与环境交互，形成如下的序列τ：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316210642889.png" alt="image-20210316210642889"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210311213430270.png" alt="image-20210311213430270"></p><p>这样一个序列τ是不确定的，因为Actor在不同state下所采取的action可能是不同的，一个序列τ发生的概率为：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210311213447597.png" alt="image-20210311213447597"></p><p>序列τ所获得的奖励为每个阶段所得到的奖励的和，称为R(τ)。因此，在Actor的策略为π的情况下，所能获得的期望奖励为：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210311213514694.png" alt="image-20210311213514694"></p><p>而我们的期望是调整Actor的策略π，使得期望奖励最大化，于是我们有了策略梯度的方法，既然我们的期望函数已经有了，我们只要使用梯度提升的方法更新我们的网络参数θ（即更新策略π）就好了，所以问题的重点变为了求参数的梯度。梯度的求解过程如下：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316210915795.png" alt="image-20210316210915795"></p><p>首先利用log函数求导的特点进行转化，随后用N次采样的平均值来近似期望，最后，我们将pθ展开，将与θ无关的项去掉，即得到了最终的结果。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210311213315228.png" alt="image-20210311213315228"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210311213339458.png" alt="image-20210311213339458"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316211600007.png" alt="image-20210316211600007"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316211642310.png" alt="image-20210316211642310"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316211734692.png" alt="image-20210316211734692"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316211747501.png" alt="image-20210316211747501"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210316211839980.png" alt="image-20210316211821933"></p><p>policy gradient 的Agent的实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> maze_env_drl <span class="keyword">import</span> Maze</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PolicyGradient</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n_actions, n_features, learning_rate=<span class="number">0.01</span>, reward_decay=<span class="number">0.95</span>, output_graph=<span class="literal">False</span></span>):</span><br><span class="line">        self.n_actions = n_actions</span><br><span class="line">        self.n_features = n_features</span><br><span class="line">        self.lr = learning_rate     <span class="comment"># 学习率</span></span><br><span class="line">        self.gamma = reward_decay   <span class="comment"># reward 递减率</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#因为需要模拟整个回合才能得到最终奖励，才能进行网络学习，所以需要将达到终点点整个序列的状态、动作、奖励记录下来</span></span><br><span class="line">        self.ep_obs, self.ep_as, self.ep_rs = [], [], []    <span class="comment">#这是我们存储 回合信息的 list</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#下面与之前是一样的</span></span><br><span class="line">        self._build_net()  <span class="comment">#建立网络</span></span><br><span class="line">        self.sess = tf.Session()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> output_graph:</span><br><span class="line">            tf.summary.FileWriter(<span class="string">&quot;logs/&quot;</span>, self.sess.graph)</span><br><span class="line">        </span><br><span class="line">        self.sess.run(tf.global_variables_initializer())</span><br><span class="line">        </span><br><span class="line">    <span class="comment">#与此前不同之前储存记忆利用的是replay buffer机制。存储内容分可能来自不同执行序列和不同参数的神经网络</span></span><br><span class="line">    <span class="comment">#此处只是为了储存达到终点前一个系列的动作</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">store_transition</span>(<span class="params">self, s, a, r</span>):</span><br><span class="line">        self.ep_obs.append(s)</span><br><span class="line">        self.ep_as.append(a)</span><br><span class="line">        self.ep_rs.append(r)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#构建网络，因为直接走到终点，奖励是可以观察的，不再需要target_work去求st+1的最大价值</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_build_net</span>(<span class="params">self</span>):</span><br><span class="line">        tf.reset_default_graph()  <span class="comment">#清空计算图</span></span><br><span class="line">        <span class="keyword">with</span> tf.name_scope(<span class="string">&#x27;input&#x27;</span>):</span><br><span class="line">            self.tf_obs = tf.placeholder(tf.float32, [<span class="literal">None</span>, self.n_features], name=<span class="string">&quot;observations&quot;</span>)  <span class="comment">#接收observation</span></span><br><span class="line">            <span class="comment">#标签维度为[batch_size, 1]。标签是具体动作，不是概率</span></span><br><span class="line">            self.tf_acts = tf.placeholder(tf.int32, [<span class="literal">None</span>, ], name=<span class="string">&quot;actions_num&quot;</span>)   <span class="comment"># 接收我们在这个回合中选过的actions</span></span><br><span class="line">            <span class="comment">#接收每个state-action所对应的value(通过reward计算),注意此处不是单步的奖励，而是整个一些列动作的奖励,vt=本reward + 衰减的未来reward</span></span><br><span class="line">            self.tf_vt = tf.placeholder(tf.float32, [<span class="literal">None</span>, ], name=<span class="string">&quot;actions_value&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#权重初始化方式</span></span><br><span class="line">        w_initializer = tf.random_normal_initializer(<span class="number">0.</span>,<span class="number">0.3</span>)  </span><br><span class="line">        b_initializer = tf.constant_initializer(<span class="number">0.1</span>)</span><br><span class="line">        n_l1 = <span class="number">10</span>  <span class="comment">#n_l1为network隐藏层神经元的个数 </span></span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;lay1&quot;</span>):</span><br><span class="line">            w1 = tf.get_variable(<span class="string">&#x27;w1&#x27;</span>, [self.n_features, n_l1], initializer=w_initializer)</span><br><span class="line">            b1 = tf.get_variable(<span class="string">&#x27;b1&#x27;</span>, [<span class="number">1</span>, n_l1], initializer=b_initializer)</span><br><span class="line">            l1 = tf.nn.tanh(tf.matmul(self.tf_obs, w1)+b1)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;lay2&quot;</span>):</span><br><span class="line">            w2 = tf.get_variable(<span class="string">&#x27;w2&#x27;</span>, [n_l1, self.n_actions], initializer=w_initializer)</span><br><span class="line">            b2 = tf.get_variable(<span class="string">&#x27;b2&#x27;</span>, [<span class="number">1</span>, self.n_actions], initializer=b_initializer)</span><br><span class="line">            output = tf.matmul(l1, w2)+b2</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#ploicy gradient求解在一个状态下每个动作的概率，因此使用softmax出动作概率</span></span><br><span class="line">        self.all_act_prob = tf.nn.softmax(output)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> tf.name_scope(<span class="string">&#x27;loss&#x27;</span>):</span><br><span class="line">            <span class="comment">#交叉熵作为损失函数,训练样本中选中的action即为我们的label,因为还没求出最终损失,此处用reduce_sum</span></span><br><span class="line">            neg_log_prob = -tf.reduce_sum(tf.log(self.all_act_prob)*tf.one_hot(self.tf_acts, self.n_actions), axis=<span class="number">1</span>)</span><br><span class="line">            <span class="comment">#可是视为当前这个局部损失*对应权重，可以看到state-action的value越大，权重越大</span></span><br><span class="line">            <span class="comment">#可以认为state-action的value越大，就越会顺着这个梯度下降，这个动作就越可信</span></span><br><span class="line">            <span class="comment">#若不加基准线b为如下方式：</span></span><br><span class="line">            <span class="comment">#loss = tf.reduce_mean(neg_log_prob * (self.tf_vt))</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">#加入基准线b的损失</span></span><br><span class="line">            loss = tf.reduce_mean(neg_log_prob * (self.tf_vt-tf.reduce_mean(self.tf_vt)))</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">with</span> tf.name_scope(<span class="string">&#x27;train&#x27;</span>):</span><br><span class="line">            self.train_op = tf.train.AdamOptimizer(self.lr).minimize(loss)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#之前DQN根据最大动作价值选择动作，ploicy gradient根据网络输出的动作概率，依照概率选择动作</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_action</span>(<span class="params">self, observation</span>):</span><br><span class="line">        <span class="comment"># 所有action的概率</span></span><br><span class="line">        prob_weights = self.sess.run(self.all_act_prob, feed_dict=&#123;self.tf_obs: observation[np.newaxis, :]&#125;)</span><br><span class="line">        <span class="comment">#按照概率选择动作</span></span><br><span class="line">        action = np.random.choice(<span class="built_in">range</span>(prob_weights.shape[<span class="number">1</span>]), p=prob_weights.ravel())</span><br><span class="line">        <span class="keyword">return</span> action</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#用于计算回合的state-action value</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_discount_and_norm_rewards</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#先计算单步的奖励，在逐步将后面的奖励逐步衰减加到前面</span></span><br><span class="line">        discounted_ep_rs = np.zeros_like(self.ep_rs)</span><br><span class="line">        running_add = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#将后面的奖励逐步衰减加到前面</span></span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">reversed</span>(<span class="built_in">range</span>(<span class="built_in">len</span>(self.ep_rs))):</span><br><span class="line">            running_add = running_add * self.gamma + self.ep_rs[t]</span><br><span class="line">            discounted_ep_rs[t] = running_add</span><br><span class="line">            </span><br><span class="line">        <span class="comment">#防止每个回合计算出的奖励量纲不同，进行正态标准化</span></span><br><span class="line">        discounted_ep_rs = np.array(discounted_ep_rs,dtype=np.<span class="built_in">float</span>) </span><br><span class="line">        discounted_ep_rs -= np.mean(discounted_ep_rs)</span><br><span class="line">        discounted_ep_rs /= np.std(discounted_ep_rs)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> discounted_ep_rs</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">learn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#因为训练时传入的不是动作单步奖励，执行完动作后的整体奖励，因此先计算执行完动作后的整体奖励</span></span><br><span class="line">        discounted_ep_rs_norm = self._discount_and_norm_rewards()</span><br><span class="line">        <span class="comment">#np.vstack(self.ep_obs)的shape=[None, n_obs]，np.array(self.ep_as)的shape=[None,]，discounted_ep_rs_norm的shape=[None,]</span></span><br><span class="line">        <span class="comment">#每次的训练样本相当于一和完整流程状态和对应的动作以及对应奖励。</span></span><br><span class="line">        self.sess.run(self.train_op, feed_dict=&#123;self.tf_obs: np.vstack(self.ep_obs),self.tf_acts: np.array(self.ep_as),self.tf_vt: discounted_ep_rs_norm&#125;)</span><br><span class="line">        <span class="comment">#次回合动作已经训练完，清空记忆。下次训练需要重新产生训练样本</span></span><br><span class="line">        self.ep_obs, self.ep_as, self.ep_rs = [], [], []</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#返回这一回合的state-action value</span></span><br><span class="line">        <span class="keyword">return</span> discounted_ep_rs_norm  </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_maze</span>(<span class="params">RENDER</span>):</span><br><span class="line">    <span class="keyword">for</span> episode <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3000</span>):</span><br><span class="line">        <span class="comment"># 初始化环境</span></span><br><span class="line">        observation = env.reset()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> RENDER:</span><br><span class="line">                <span class="comment"># 刷新环境</span></span><br><span class="line">                env.render()</span><br><span class="line">            <span class="comment"># DQN 根据观测值选择行为</span></span><br><span class="line">            action = RL.choose_action(observation)</span><br><span class="line">            <span class="comment"># 环境根据行为给出下一个state, reward,是否终止</span></span><br><span class="line">            observation_, reward, done = env.step(action)</span><br><span class="line">            <span class="comment">#存储记忆</span></span><br><span class="line">            RL.store_transition(observation, action, reward)</span><br><span class="line">            <span class="comment">#知道获得最终奖励才能进行训练，这是MC的方法</span></span><br><span class="line">            <span class="keyword">if</span> done:</span><br><span class="line">                ep_rs_sum=<span class="built_in">sum</span>(RL.ep_rs)</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;running_reward&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">locals</span>():</span><br><span class="line">                    running_reward = ep_rs_sum</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    running_reward = running_reward * <span class="number">0.99</span> + ep_rs_sum * <span class="number">0.01</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> running_reward&gt; DISPLAY_REWARD_THRESHOLD:</span><br><span class="line">                    RENDER=<span class="literal">True</span></span><br><span class="line">                </span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;episode:&quot;</span>, episode, <span class="string">&quot;  reward:&quot;</span>, <span class="built_in">int</span>(running_reward))</span><br><span class="line">                </span><br><span class="line">                vt = RL.learn()</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> episode==<span class="number">0</span>:</span><br><span class="line">                    plt.plot(vt)    <span class="comment"># plot这个回合的vt</span></span><br><span class="line">                    plt.xlabel(<span class="string">&#x27;episode steps&#x27;</span>)</span><br><span class="line">                    plt.ylabel(<span class="string">&#x27;normalized state-action value&#x27;</span>)</span><br><span class="line">                    plt.show()</span><br><span class="line">                <span class="keyword">break</span>   <span class="comment">#此次模拟完毕</span></span><br><span class="line">                </span><br><span class="line">            observation = observation_  <span class="comment">#还没有获取奖励，去要继续执行模拟</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    RENDER=<span class="literal">False</span></span><br><span class="line">    DISPLAY_REWARD_THRESHOLD=<span class="number">300</span></span><br><span class="line">    env = Maze() </span><br><span class="line">    </span><br><span class="line">    RL = PolicyGradient(n_actions=env.n_actions, n_features=env.n_features, learning_rate=<span class="number">0.02</span>, reward_decay=<span class="number">0.99</span>, output_graph=<span class="literal">True</span>)</span><br><span class="line">    run_maze(RENDER)</span><br></pre></td></tr></table></figure><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317112639995.png" alt="image-20210317112639995"></p><p>可以看出policy gradient是基于回合更新的，因此我们需要需要很大的耐心和环境产生交互样本，进行回合训练，并且由于每个回合是不稳定的，因此我们需要的大量的样本</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155054551.png" alt="image-20210317155054551"></p><p>Q-learning学习的是每个动作的价值，要求动作必须是离散的。</p><p>policy gradient和Q-learning都有各自的优缺点。我们可以将两者整合起来，即记忆使用off-policy的学习，也可以使用连续的动作。</p><p>下面两段话摘自莫烦python的强化学习教程：Actor-Critic 的 Actor 的前生是 Policy Gradients, 这能让它毫不费力地在连续动作中选取合适的动作, 而 Q-learning 做这件事会瘫痪. 那为什么不直接用 Policy Gradients 呢? 原来 Actor Critic 中的 Critic 的前生是 Q-learning 或者其他的 以值为基础的学习法 , 能进行单步更新, 而传统的 Policy Gradients 则是回合更新, 这降低了学习效率。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155324880.png" alt="image-20210317155324880"></p><p>Actor 和 Critic, 他们都能用不同的神经网络来代替 . 在 Policy Gradients 的影片中提到过, 现实中的奖惩会左右 Actor 的更新情况. Policy Gradients 也是靠着这个来获取适宜的更新. 那么何时会有奖惩这种信息能不能被学习呢? 这看起来不就是 以值为基础的强化学习方法做过的事吗. 那我们就拿一个 Critic 去学习这些奖惩机制, 学习完了以后. 由 Actor 来指手画脚, 由 Critic 来告诉 Actor 你的那些指手画脚哪些指得好, 哪些指得差, Critic 通过学习环境和奖励之间的关系, 能看到现在所处状态的潜在奖励, 所以用它来指点 Actor 便能使 Actor 每一步都在更新, 如果使用单纯的 Policy Gradients, Actor 只能等到回合结束才能开始更新。</p><p>以前我们用过回合的奖励来进行policy gradient的更新，Actor-Critic将回合奖励替换成动作的价值，来对网络进行学习，自然就将Q-learning结合了起来：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155528931.png" alt="image-20210317155528931"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155542474.png" alt="image-20210317155542474"></p><p>在PG策略中，如果我们用Q函数来代替R，同时我们创建一个Critic网络来计算Q函数值，那么我们就得到了Actor-Critic方法。Actor参数的梯度变为：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210311221748445.png" alt="image-20210311221748445"></p><p>此时的Critic根据估计的Q值和实际Q值的<strong>平方误差</strong>进行更新，对Critic来说，其loss为：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210311221814333.png" alt="image-20210311221814333"></p><p>AC代码的实现地址为：<a href="https://github.com/princewen/tensorflow_practice/tree/master/RL/Basic-AC-Demo">https://github.com/princewen/tensorflow_practice/tree/master/RL/Basic-AC-Demo</a></p><h1 id="Advantage-Actor-Critic-A2C"><a href="#Advantage-Actor-Critic-A2C" class="headerlink" title="Advantage Actor-Critic(A2C)"></a>Advantage Actor-Critic(A2C)</h1><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155623826.png" alt="image-20210317155623826"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155634647.png" alt="image-20210317155634647"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155755636.png" alt="image-20210317155755636"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155831237.png" alt="image-20210317155831237"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317155955489.png" alt="image-20210317155955489"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317160425425.png" alt="image-20210317160425425"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317160942244.png" alt="image-20210317160942244"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210317162607727.png" alt="image-20210317162607727"></p><p>本文基于如下架构进行Advantage Actor-Critic的Agent实现。其中Actor和Critic的第一层权重共享：</p><h4 id="Q-learning"><a href="#Q-learning" class="headerlink" title="Q-learning"></a>Q-learning</h4><p>Q-learning是一种value_based的方法。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210312203323472.png" alt="image-20210312203323472"></p>]]></content>
      
      
      <categories>
          
          <category> RL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> RL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署到阿里云OSS上</title>
      <link href="/peaky/2021/03/01/514027fa.html"/>
      <url>/peaky/2021/03/01/514027fa.html</url>
      
        <content type="html"><![CDATA[<h2 id="修改hexo适配oss访问规则"><a href="#修改hexo适配oss访问规则" class="headerlink" title="修改hexo适配oss访问规则"></a>修改hexo适配oss访问规则</h2><p>hexo生成的静态博客很多都是以文件夹形式的，然后默认省略了index.html。而对于阿里云的OSS来说，并不会默认访问文件夹下的index.html，所以，生成的时候需要做调整</p><span id="more"></span><h3 id="文章链接修改"><a href="#文章链接修改" class="headerlink" title="文章链接修改"></a>文章链接修改</h3><p>文章的连接直接修改根目录下_config.yml中permalink: p&#x2F;:abbrlink.html的生成规则，详细可以参考之前写的文章<a href="https://www.jianshu.com/p/920894191281">链接持久化</a></p><h3 id="归档、标签、分类修改"><a href="#归档、标签、分类修改" class="headerlink" title="归档、标签、分类修改"></a>归档、标签、分类修改</h3><p>修改主题目录下_config.yml中的menu:加入index.html</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/|| user</span></span><br><span class="line">  <span class="attr">top:</span> <span class="string">/top/index.html||</span> <span class="string">signal</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/index.html||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/index.html||</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/index.html||</span> <span class="string">archive</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="文章翻页跳转"><a href="#文章翻页跳转" class="headerlink" title="文章翻页跳转"></a>文章翻页跳转</h3><p>打开<code>themes\next\layout\_partials\pagination.swig</code>文件，添加format文件路径</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">paginator(&#123;</span></span><br><span class="line">       <span class="attr">prev_text:</span> <span class="string">&#x27;&lt;i class=&quot;fa fa-angle-left&quot; aria-label=&quot;&#x27;</span><span class="string">+__(&#x27;accessibility.prev_page&#x27;)+&#x27;&quot;&gt;&lt;/i&gt;&#x27;,</span></span><br><span class="line">       <span class="attr">next_text:</span> <span class="string">&#x27;&lt;i class=&quot;fa fa-angle-right&quot; aria-label=&quot;&#x27;</span><span class="string">+__(&#x27;accessibility.next_page&#x27;)+&#x27;&quot;&gt;&lt;/i&gt;&#x27;,</span></span><br><span class="line">       <span class="attr">mid_size:</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line">       <span class="attr">format:</span> <span class="string">&#x27;page/%d/index.html&#x27;</span><span class="string">,</span></span><br><span class="line">       <span class="attr">escape:</span> <span class="literal">false</span></span><br><span class="line">     <span class="string">&#125;)</span></span><br></pre></td></tr></table></figure><h3 id="目录分类页中链接修改"><a href="#目录分类页中链接修改" class="headerlink" title="目录分类页中链接修改"></a>目录分类页中链接修改</h3><p>打开<code>themes\next\layout\page.swig</code>文件修改<code>list_categories</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">修改前：</span>      &#123;&#123; <span class="string">list_categories()</span> &#125;&#125;</span><br><span class="line"><span class="string">修改后：</span>      &#123;&#123; <span class="string">list_categories(</span>&#123;<span class="attr">suffix:</span> <span class="string">&#x27;index.html&#x27;</span>&#125;<span class="string">)</span> &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="标签页中链接修改"><a href="#标签页中链接修改" class="headerlink" title="标签页中链接修改"></a>标签页中链接修改</h3><p>next中标签用到了tagcloud而不是list_tags,而tagclud并没有suffix配置，所以，可以仿照list_tags修改一下。<br>打开node_modules\hexo\lib\plugins\helper\tagcloud.js, 加入suffix配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">修改前：const</span> &#123; <span class="string">transform</span> &#125; <span class="string">=</span> <span class="string">options;</span> </span><br><span class="line"><span class="string">修改后：const</span> &#123; <span class="string">transform</span> , <span class="string">suffix</span> <span class="string">=</span> <span class="string">&#x27;&#x27;</span>&#125; <span class="string">=</span> <span class="string">options;</span></span><br></pre></td></tr></table></figure><p>在result.push的超链接中加入${suffix}</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">result.push(</span></span><br><span class="line">      <span class="string">`&lt;a</span> <span class="string">href=&quot;$&#123;this.url_for(tag.path)&#125;$&#123;suffix&#125;&quot;</span> <span class="string">style=&quot;$&#123;style&#125;&quot;&gt;$&#123;transform</span> <span class="string">?</span> <span class="string">transform(tag.name)</span> <span class="string">:</span> <span class="string">tag.name&#125;&lt;/a&gt;`</span></span><br><span class="line">    <span class="string">);</span></span><br></pre></td></tr></table></figure><p>修改tagcloud调用。打开themes\next\layout\page.swig文件修改tagcloud</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">修改前：&#123;&#123;</span> <span class="string">tagcloud(&#123;min_font:</span> <span class="number">12</span><span class="string">,</span> <span class="attr">max_font:</span> <span class="number">30</span><span class="string">,</span> <span class="attr">amount:</span> <span class="number">300</span><span class="string">,</span> <span class="attr">color:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">start_color:</span> <span class="string">&#x27;#ccc&#x27;</span><span class="string">,</span> <span class="attr">end_color:</span> <span class="string">&#x27;#111&#x27;</span><span class="string">&#125;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">修改后：&#123;&#123;</span> <span class="string">tagcloud(&#123;min_font:</span> <span class="number">12</span><span class="string">,</span> <span class="attr">max_font:</span> <span class="number">30</span><span class="string">,</span> <span class="attr">amount:</span> <span class="number">300</span><span class="string">,</span> <span class="attr">color:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">start_color:</span> <span class="string">&#x27;#ccc&#x27;</span><span class="string">,</span> <span class="attr">end_color:</span> <span class="string">&#x27;#111&#x27;</span><span class="string">,suffix:</span> <span class="string">&#x27;index.html&#x27;</span><span class="string">&#125;)</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="文章内的目录和标签连接"><a href="#文章内的目录和标签连接" class="headerlink" title="文章内的目录和标签连接"></a>文章内的目录和标签连接</h3><p>打开themes\next\layout_macro\post.swig文件</p><p>找到for cat in post.categories在href中添加index.html</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">for</span> <span class="string">cat</span> <span class="string">in</span> <span class="string">post.categories</span> <span class="string">%</span>&#125;</span><br><span class="line">  <span class="string">&lt;span</span> <span class="string">itemprop=&quot;about&quot;</span> <span class="string">itemscope</span> <span class="string">itemtype=&quot;http://schema.org/Thing&quot;&gt;</span></span><br><span class="line">    <span class="string">&lt;a</span> <span class="string">href=&quot;&#123;&#123;</span> <span class="string">url_for(cat.path)</span> <span class="string">&#125;&#125;index.html&quot;</span> <span class="string">itemprop=&quot;url&quot;</span> <span class="string">rel=&quot;index&quot;&gt;</span></span><br><span class="line">      <span class="string">&lt;span</span> <span class="string">itemprop=&quot;name&quot;&gt;&#123;&#123;</span> <span class="string">cat.name</span> <span class="string">&#125;&#125;&lt;/span&gt;</span></span><br><span class="line">    <span class="string">&lt;/a&gt;</span></span><br><span class="line">  <span class="string">&lt;/span&gt;</span></span><br></pre></td></tr></table></figure><p>找到for tag in post.tags在href中添加index.html</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">for</span> <span class="string">tag</span> <span class="string">in</span> <span class="string">post.tags</span> <span class="string">%</span>&#125;</span><br><span class="line">  <span class="string">&lt;a</span> <span class="string">href=&quot;&#123;&#123;</span> <span class="string">url_for(tag.path)</span> <span class="string">&#125;&#125;index.html&quot;</span> <span class="string">rel=&quot;tag&quot;&gt;&lt;i</span> <span class="string">class=&quot;fa</span> <span class="string">fa-tag&quot;&gt;&lt;/i&gt;</span> &#123;&#123; <span class="string">tag.name</span> &#125;&#125;<span class="string">&lt;/a&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="左侧状态栏日志链接"><a href="#左侧状态栏日志链接" class="headerlink" title="左侧状态栏日志链接"></a>左侧状态栏日志链接</h3><p>修改themes\next\layout_macro\sidebar.swig文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">修改前：&lt;a</span> <span class="string">href=&quot;&#123;&#123;</span> <span class="string">url_for(config.archive_dir)</span> <span class="string">&#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="string">修改后：&lt;a</span> <span class="string">href=&quot;&#123;&#123;</span> <span class="string">url_for(theme.menu.archives.split(&#x27;||&#x27;)[0])</span> <span class="string">&#125;&#125;&quot;&gt;</span></span><br></pre></td></tr></table></figure><h2 id="部署到阿里云OSS"><a href="#部署到阿里云OSS" class="headerlink" title="部署到阿里云OSS"></a>部署到阿里云OSS</h2><p>阿里云OSS国内站点需要绑定备案的域名才可以当静态网站范围。</p><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><p>清理编译并自动生成网页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>将博客目录下的public目录上传到OSS根目录下</p><h3 id="脚本自动提交"><a href="#脚本自动提交" class="headerlink" title="脚本自动提交"></a>脚本自动提交</h3><p>安装阿里oss脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install ali-oss</span><br></pre></td></tr></table></figure><p>在根目录下创建depoly-to-oss.js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">&#x27;util&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS</span> = <span class="built_in">require</span>(<span class="string">&#x27;ali-oss&#x27;</span>).<span class="property">Wrapper</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> promisifyReaddir = util.<span class="title function_">promisify</span>(fs.<span class="property">readdir</span>)</span><br><span class="line"><span class="keyword">const</span> promisifyStat = util.<span class="title function_">promisify</span>(fs.<span class="property">stat</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title function_">OSS</span>(&#123;</span><br><span class="line">  <span class="attr">region</span>: <span class="string">&#x27;&lt;oss region&gt;&#x27;</span>,</span><br><span class="line">  <span class="comment">//云账号AccessKey有所有API访问权限，建议遵循阿里云安全最佳实践，部署在服务端使用RAM子账号或STS，部署在客户端使用STS。</span></span><br><span class="line">  <span class="attr">accessKeyId</span>: <span class="string">&#x27;&lt;Your accessKeyId&gt;&#x27;</span>,</span><br><span class="line">  <span class="attr">accessKeySecret</span>: <span class="string">&#x27;&lt;Your accessKeySecret&gt;&#x27;</span>,</span><br><span class="line">  <span class="attr">bucket</span>: <span class="string">&#x27;&lt;Your bucket name&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传的目录</span></span><br><span class="line"><span class="keyword">const</span> publicPath = path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./public&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步上传文件</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">put</span>(<span class="params">proPath = <span class="string">&#x27;&#x27;</span></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> dir = <span class="keyword">await</span> <span class="title function_">promisifyReaddir</span>(<span class="string">`<span class="subst">$&#123;publicPath&#125;</span><span class="subst">$&#123;proPath&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dir.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> stat = <span class="keyword">await</span> <span class="title function_">promisifyStat</span>(path.<span class="title function_">resolve</span>(<span class="string">`<span class="subst">$&#123;publicPath&#125;</span><span class="subst">$&#123;proPath&#125;</span>`</span>, dir[i]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (stat.<span class="title function_">isFile</span>()) &#123;</span><br><span class="line">      <span class="keyword">const</span> fileStream = fs.<span class="title function_">createReadStream</span>(path.<span class="title function_">resolve</span>(<span class="string">`<span class="subst">$&#123;publicPath&#125;</span><span class="subst">$&#123;proPath&#125;</span>`</span>, dir[i]))</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`上传文件: <span class="subst">$&#123;proPath&#125;</span>/<span class="subst">$&#123;dir[i]&#125;</span>`</span>)</span><br><span class="line">      <span class="keyword">const</span> result = <span class="keyword">await</span> client.<span class="title function_">putStream</span>(<span class="string">`<span class="subst">$&#123;proPath&#125;</span>/<span class="subst">$&#123;dir[i]&#125;</span>`</span>, fileStream)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (stat.<span class="title function_">isDirectory</span>()) &#123;</span><br><span class="line">      <span class="comment">// 递归子目录</span></span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">put</span>(<span class="string">`<span class="subst">$&#123;proPath&#125;</span>/<span class="subst">$&#123;dir[i]&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">put</span>()</span><br></pre></td></tr></table></figure><p>编译之后，直接使用上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node depoly-to-oss.js</span><br></pre></td></tr></table></figure><p><strong>本文作者：</strong> 过客<br><strong>本文链接：</strong> <a href="https://zengwu.com.cn/p/dd7e8a7b.html">https://zengwu.com.cn/p/dd7e8a7b.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LayUI入门</title>
      <link href="/peaky/2021/01/28/ef00c80b.html"/>
      <url>/peaky/2021/01/28/ef00c80b.html</url>
      
        <content type="html"><![CDATA[<p><strong>Start</strong></p><p>LayUI入门</p><p><a href="https://fengfeng.lanzoui.com/iVH4Ekz8f2f">点此下载</a>Layuiadmin</p><p><a href="https://www.layui.com/doc/">点此跳转</a>Layui官方文档</p><p><a href="https://www.cnblogs.com/niuben/p/11038897.html">点此跳转</a>Layui第三方文档</p><span id="more"></span><p>直接开始！</p><h3 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h3><p>下载后可以这样部署文件到自己的开发环境</p><ul><li><p>src&#x2F;</p><p>layuiAdmin 源代码，通常用于开发环境（如本地），推荐你在本地开发时，将 .&#x2F;start&#x2F;index.html 中的 layui.css 和 layui.js 的引入路径由 dist 改为 src 目录。</p><ul><li>src&#x2F;controller&#x2F;：存放 JS 业务模块，即对视图进行事件等交互性处理</li><li>src&#x2F;lib&#x2F;：layuiAdmin 的核心模块，一般不推荐修改</li><li>src&#x2F;style&#x2F;：存放样式，其中 admin.css是核心样式</li><li>src&#x2F;views&#x2F;：存放视图文件。其中 layout.html 是整个框架结构的承载，一般不推荐做大量改动。</li><li>src&#x2F;config.js：layuiAdmin 的全局配置文件，可随意修改。</li><li>src&#x2F;index.js：layuiAdmin 的入口模块，一般不推荐修改</li></ul></li><li><p>dist&#x2F;<br>通过 gulp 将 layuiAdmin src 目录的源代码进行构建后生成的目录（即：将 JS 和 CSS 文件进行了压缩等处理），通常用于线上环境。关于 gulp 的使用，下文也有介绍。</p></li><li><p>start&#x2F;<br>存放 layuiAdmin 的入口页面、模拟接口数据、layui</p><p>index.html所有页面基于这个显示</p></li></ul><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><ul><li><p>在 start&#x2F;json&#x2F;menu.js 文件中，我们放置了默认的侧边菜单数据，你可以去随意改动它。</p><p>JSON数据:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span> <span class="comment">//状态码，key 名可以通过 config.js 去重新配置</span></span><br><span class="line">  <span class="punctuation">,</span><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span> <span class="comment">//提示信息</span></span><br><span class="line">  <span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span> <span class="comment">//菜单数据，key名可以通过 config.js 去重新配置</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;component&quot;</span> <span class="comment">//一级菜单名称（与视图的文件夹名称和路由路径对应）</span></span><br><span class="line">    <span class="punctuation">,</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;组件&quot;</span> <span class="comment">//一级菜单标题</span></span><br><span class="line">    <span class="punctuation">,</span><span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;layui-icon-component&quot;</span> <span class="comment">//一级菜单图标样式</span></span><br><span class="line">    <span class="punctuation">,</span><span class="attr">&quot;jump&quot;</span><span class="punctuation">:</span> &#x27;&#x27; <span class="comment">//自定义一级菜单路由地址，默认按照 name 解析。一旦设置，将优先按照 jump 设定的路由跳转</span></span><br><span class="line">    <span class="punctuation">,</span><span class="attr">&quot;spread&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span> <span class="comment">//是否默认展子菜单（1.0.0-beta9 新增）</span></span><br><span class="line">    <span class="punctuation">,</span><span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span> <span class="comment">//二级菜单</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;grid&quot;</span> <span class="comment">//二级菜单名称（与视图的文件夹名称和路由路径对应）</span></span><br><span class="line">      <span class="punctuation">,</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;栅格&quot;</span> <span class="comment">//二级菜单标题</span></span><br><span class="line">      <span class="punctuation">,</span><span class="attr">&quot;jump&quot;</span><span class="punctuation">:</span> &#x27;&#x27;  <span class="comment">//自定义二级菜单路由地址</span></span><br><span class="line">      <span class="punctuation">,</span><span class="attr">&quot;spread&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span> <span class="comment">//是否默认展子菜单（1.0.0-beta9 新增）</span></span><br><span class="line">      <span class="punctuation">,</span><span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span> <span class="comment">//三级菜单</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span> <span class="comment">//三级菜单名（与视图中最终的文件名和路由对应），如：component/grid/list</span></span><br><span class="line">        <span class="punctuation">,</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等比例列表排列&quot;</span> <span class="comment">//三级菜单标题</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mobile&quot;</span></span><br><span class="line">        <span class="punctuation">,</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;按移动端排列&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>修改index.html文件的layui-side-menu</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul <span class="keyword">class</span>=<span class="string">&quot;layui-nav layui-nav-tree&quot;</span> lay-shrink=<span class="string">&quot;all&quot;</span> id=<span class="string">&quot;LAY-system-side-menu&quot;</span> lay-filter=<span class="string">&quot;layadmin-system-side-menu&quot;</span>&gt;</span><br><span class="line">  &lt;!--  一级标题   --&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-name</span>=<span class="string">&quot;home&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item layui-nav-itemed&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">lay-tips</span>=<span class="string">&quot;主页&quot;</span> <span class="attr">lay-direction</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;layui-icon layui-icon-home&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">cite</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">cite</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">data-name</span>=<span class="string">&quot;console&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-this&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;home/console.html&quot;</span>&gt;</span>控制台<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-name</span>=<span class="string">&quot;component&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">lay-tips</span>=<span class="string">&quot;组件&quot;</span> <span class="attr">lay-direction</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;layui-icon layui-icon-component&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">cite</span>&gt;</span>组件<span class="tag">&lt;/<span class="name">cite</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!--  二级级标题   --&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">data-name</span>=<span class="string">&quot;grid&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>栅格<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                        <span class="comment">&lt;!--  三级标题   --&gt;</span></span></span><br><span class="line"><span class="language-xml">                      <span class="tag">&lt;<span class="name">dd</span> <span class="attr">data-name</span>=<span class="string">&quot;list&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;component/grid/list.html&quot;</span>&gt;</span>等比例列表排列<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                      <span class="tag">&lt;<span class="name">dd</span> <span class="attr">data-name</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;component/grid/mobile.html&quot;</span>&gt;</span>按移动端排列<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">data-name</span>=<span class="string">&quot;button&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;component/button/index.html&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">data-name</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>表单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;component/form/element.html&quot;</span>&gt;</span>表单元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                      <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;component/form/group.html&quot;</span>&gt;</span>表单组合<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">dd</span> <span class="attr">data-name</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;component/nav/index.html&quot;</span>&gt;</span>导航<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">  &lt;/ul&gt;</span><br></pre></td></tr></table></figure><h3 id="主体内容"><a href="#主体内容" class="headerlink" title="主体内容"></a>主体内容</h3><h4 id="控制台-x2F-主页"><a href="#控制台-x2F-主页" class="headerlink" title="控制台&#x2F;主页"></a>控制台&#x2F;主页</h4><p>略</p><h4 id="数据表格"><a href="#数据表格" class="headerlink" title="数据表格"></a>数据表格</h4><p>需要使用ajax接受异步数据：使用@RestController</p><p>配合接受JSON封装一个<strong>json类</strong>：</p><pre><code>public class resultJson&lt;T&gt; &#123;    private int code;    private String msg;    private int count;    private T data;public resultJson() &#123;&#125;public resultJson(int code, String msg) &#123;    this.code = code;    this.msg = msg;&#125;public resultJson(int code,int count, T data) &#123;    this.code = code;    this.count = count;    this.data = data;&#125;//AUTO Generate Getter and Setter&#125;</code></pre><p>从数据库查询到数据封装到JSON类后返回即可；</p><p><strong>前端调用JSON数据：</strong></p><p>绑定容器、设置数据接口、在表头设定对应的字段</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">lay-filter</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JS --&gt;</span></span><br><span class="line">var table = layui.table;</span><br><span class="line"> </span><br><span class="line">//执行渲染</span><br><span class="line">table.render(&#123;</span><br><span class="line">  elem: &#x27;#demo&#x27; //指定原始表格元素选择器（推荐id选择器）</span><br><span class="line">  ,height: 315 //容器高度</span><br><span class="line">  ,cols: [&#123;&#125;] //设置表头</span><br><span class="line">  //,…… //更多参数参考右侧目录：基本参数选项</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>自动渲染</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;layui-table&quot;</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;height:315, url:&#x27;/demo/table/user/&#x27;, page:true, id:&#x27;test&#x27;&#125;&quot;</span> <span class="attr">lay-filter</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;id&#x27;, width:80, sort: true&#125;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;username&#x27;, width:80&#125;&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;sex&#x27;, width:80, sort: true&#125;&quot;</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;city&#x27;&#125;&quot;</span>&gt;</span>城市<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;sign&#x27;&#125;&quot;</span>&gt;</span>签名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;experience&#x27;, sort: true&#125;&quot;</span>&gt;</span>积分<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;score&#x27;, sort: true&#125;&quot;</span>&gt;</span>评分<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;classify&#x27;&#125;&quot;</span>&gt;</span>职业<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;wealth&#x27;, sort: true&#125;&quot;</span>&gt;</span>财富<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="全部参数一览表"><a href="#全部参数一览表" class="headerlink" title="全部参数一览表"></a>全部参数一览表</h5><p>下面是目前 table 模块所支持的全部参数一览表，我们对重点参数进行了的详细说明，你可以点击下述表格最右侧的“示例”去查看</p><table><thead><tr><th align="left">参数</th><th align="left">类型</th><th align="left">说明</th><th align="left">示例值</th></tr></thead><tbody><tr><td align="left">elem</td><td align="left">String&#x2F;DOM</td><td align="left">指定原始 table 容器的选择器或 DOM，方法渲染方式必填</td><td align="left">“#demo”</td></tr><tr><td align="left">cols</td><td align="left">Array</td><td align="left">设置表头。值是一个二维数组。方法渲染方式必填</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#cols">详见表头参数</a></td></tr><tr><td align="left">url（等）</td><td align="left">-</td><td align="left">异步数据接口相关参数。其中 url 参数为必填项</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#async">详见异步接口</a></td></tr><tr><td align="left">toolbar</td><td align="left">String&#x2F;DOM&#x2F;Boolean</td><td align="left">开启表格头部工具栏区域，该参数支持四种类型值：toolbar: ‘#toolbarDemo’ <em>&#x2F;&#x2F;指向自定义工具栏模板选择器</em>toolbar: ‘<div>xxx</div>‘ <em>&#x2F;&#x2F;直接传入工具栏模板字符</em>toolbar: true <em>&#x2F;&#x2F;仅开启工具栏，不显示左侧模板</em>toolbar: ‘default’ <em>&#x2F;&#x2F;让工具栏左侧显示默认的内置模板</em>注意： 1. 该参数为 layui 2.4.0 开始新增。 2. 若需要“列显示隐藏”、“导出”、“打印”等功能，则必须开启该参数</td><td align="left">false</td></tr><tr><td align="left">defaultToolbar</td><td align="left">Array</td><td align="left">该参数可自由配置头部工具栏右侧的图标按钮</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#defaultToolbar">详见头工具栏图标</a></td></tr><tr><td align="left">width</td><td align="left">Number</td><td align="left">设定容器宽度。table容器的默认宽度是跟随它的父元素铺满，你也可以设定一个固定值，当容器中的内容超出了该宽度时，会自动出现横向滚动条。</td><td align="left">1000</td></tr><tr><td align="left">height</td><td align="left">Number&#x2F;String</td><td align="left">设定容器高度</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#height">详见height</a></td></tr><tr><td align="left">cellMinWidth</td><td align="left">Number</td><td align="left">（layui 2.2.1 新增）全局定义所有常规单元格的最小宽度（默认：60），一般用于列宽自动分配的情况。其优先级低于表头参数中的 minWidth</td><td align="left">100</td></tr><tr><td align="left">done</td><td align="left">Function</td><td align="left">数据渲染完的回调。你可以借此做一些其它的操作</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#done">详见done回调</a></td></tr><tr><td align="left">data</td><td align="left">Array</td><td align="left">直接赋值数据。既适用于只展示一页数据，也非常适用于对一段已知数据进行多页展示。</td><td align="left">[{}, {}, {}, {}, …]</td></tr><tr><td align="left">totalRow</td><td align="left">Boolean</td><td align="left">是否开启合计行区域。layui 2.4.0 新增</td><td align="left">false</td></tr><tr><td align="left">page</td><td align="left">Boolean&#x2F;Object</td><td align="left">开启分页（默认：false） 注：从 layui 2.2.0 开始，支持传入一个对象，里面可包含 <a href="https://www.layui.com/doc/modules/laypage.html#options">laypage</a> 组件所有支持的参数（jump、elem除外）</td><td align="left">{theme: ‘#c00’}</td></tr><tr><td align="left">limit</td><td align="left">Number</td><td align="left">每页显示的条数（默认：10）。值务必对应 limits 参数的选项。 注意：<em>优先级低于 page 参数中的 limit 参数</em></td><td align="left">30</td></tr><tr><td align="left">limits</td><td align="left">Array</td><td align="left">每页条数的选择项，默认：[10,20,30,40,50,60,70,80,90]。 注意：<em>优先级低于 page 参数中的 limits 参数</em></td><td align="left">[30,60,90]</td></tr><tr><td align="left">loading</td><td align="left">Boolean</td><td align="left">是否显示加载条（默认：true）。如果设置 false，则在切换分页时，不会出现加载条。该参数只适用于 url 参数开启的方式</td><td align="left">false</td></tr><tr><td align="left">title</td><td align="left">String</td><td align="left">定义 table 的大标题（在文件导出等地方会用到）layui 2.4.0 新增</td><td align="left">“用户表”</td></tr><tr><td align="left">text</td><td align="left">Object</td><td align="left">自定义文本，如空数据时的异常提示等。注：layui 2.2.5 开始新增。</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#text">详见自定义文本</a></td></tr><tr><td align="left">autoSort</td><td align="left">Boolean</td><td align="left">默认 true，即直接由 table 组件在前端自动处理排序。 若为 false，则需自主排序，通常由服务端直接返回排序好的数据。 注意：该参数为 layui 2.4.4 新增</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#onsort">详见监听排序</a></td></tr><tr><td align="left">initSort</td><td align="left">Object</td><td align="left">初始排序状态。用于在数据表格渲染完毕时，默认按某个字段排序。</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#initSort">详见初始排序</a></td></tr><tr><td align="left">id</td><td align="left">String</td><td align="left">设定容器唯一 id。id 是对表格的数据操作方法上是必要的传递条件，它是表格容器的索引，你在下文诸多地方都将会见识它的存在。  值得注意的是：从 layui 2.2.0 开始，该参数也可以自动从 <em><table id="test"></table></em> 中的 id 参数中获取。</td><td align="left">test</td></tr><tr><td align="left">skin（等）</td><td align="left">-</td><td align="left">设定表格各种外观、尺寸等</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#skin">详见表格风格</a></td></tr></tbody></table><h5 id="cols-表头参数一览表"><a href="#cols-表头参数一览表" class="headerlink" title="cols - 表头参数一览表"></a>cols - 表头参数一览表</h5><p>相信我，在你还尚无法驾驭 layui table 的时候，你的所有焦点都应放在这里，它带引领你完成许多可见和不可见甚至你无法想象的工作。如果你采用的是方法渲染，cols 是一个二维数组，表头参数设定在数组内；如果你采用的自动渲染，表头参数的设定应放在 <em><th></em> 标签上</p><table><thead><tr><th align="left">参数</th><th align="left">类型</th><th align="left">说明</th><th align="left">示例值</th></tr></thead><tbody><tr><td align="left">field</td><td align="left">String</td><td align="left">设定字段名。字段名的设定非常重要，且是表格数据列的唯一标识</td><td align="left">username</td></tr><tr><td align="left">title</td><td align="left">String</td><td align="left">设定标题名称</td><td align="left">用户名</td></tr><tr><td align="left">width</td><td align="left">Number&#x2F;String</td><td align="left">设定列宽，若不填写，则自动分配；若填写，则支持值为：数字、百分比 请结合实际情况，对不同列做不同设定。</td><td align="left">200 30%</td></tr><tr><td align="left">minWidth</td><td align="left">Number</td><td align="left">局部定义当前常规单元格的最小宽度（默认：60），一般用于列宽自动分配的情况。其优先级高于基础参数中的 cellMinWidth</td><td align="left">100</td></tr><tr><td align="left">type</td><td align="left">String</td><td align="left">设定列类型。可选值有：normal（常规列，无需设定）checkbox（复选框列）radio（单选框列，layui 2.4.0 新增）numbers（序号列）space（空列）</td><td align="left">任意一个可选值</td></tr><tr><td align="left">LAY_CHECKED</td><td align="left">Boolean</td><td align="left">是否全选状态（默认：false）。必须复选框列开启后才有效，如果设置 true，则表示复选框默认全部选中。</td><td align="left">true</td></tr><tr><td align="left">fixed</td><td align="left">String</td><td align="left">固定列。可选值有：<em>left</em>（固定在左）、<em>right</em>（固定在右）。一旦设定，对应的列将会被固定在左或右，不随滚动条而滚动。 注意：<em>如果是固定在左，该列必须放在表头最前面；如果是固定在右，该列必须放在表头最后面。</em></td><td align="left">left（同 true） right</td></tr><tr><td align="left">hide</td><td align="left">Boolean</td><td align="left">是否初始隐藏列，默认：false。layui 2.4.0 新增</td><td align="left">true</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">totalRow</td><td align="left">Boolean&#x2F;Object</td><td align="left">是否开启该列的自动合计功能，默认：false。当开启时，则默认由前端自动合计当前行数据。从 layui 2.5.6 开始： 若接口直接返回了合计行数据，则优先读取接口合计行数据，格式如下：<code>codelayui.code&#123;  &quot;code&quot;: 0,  &quot;msg&quot;: &quot;&quot;,  &quot;count&quot;: 1000,  &quot;data&quot;: [&#123;&#125;, &#123;&#125;]  &quot;totalRow&quot;: &#123;    &quot;score&quot;: &quot;666&quot;    ,&quot;experience&quot;: &quot;999&quot;  &#125;&#125;              </code>如上，在 totalRow 中返回所需统计的列字段名和值即可。 另外，totalRow 字段同样可以通过 parseData 回调来解析成为 table 组件所规定的数据格式。</td><td align="left">true</td></tr><tr><td align="left">totalRowText</td><td align="left">String</td><td align="left">用于显示自定义的合计文本。layui 2.4.0 新增</td><td align="left">“合计：”</td></tr><tr><td align="left">sort</td><td align="left">Boolean</td><td align="left">是否允许排序（默认：false）。如果设置 true，则在对应的表头显示排序icon，从而对列开启排序功能。注意：<em>不推荐对值同时存在“数字和普通字符”的列开启排序，因为会进入字典序比对</em>。比如：*’贤心’ &gt; ‘2’ &gt; ‘100’*，这可能并不是你想要的结果，但字典序排列算法（ASCII码比对）就是如此。</td><td align="left">true</td></tr><tr><td align="left">unresize</td><td align="left">Boolean</td><td align="left">是否禁用拖拽列宽（默认：false）。默认情况下会根据列类型（type）来决定是否禁用，如复选框列，会自动禁用。而其它普通列，默认允许拖拽列宽，当然你也可以设置 true 来禁用该功能。</td><td align="left">false</td></tr><tr><td align="left">edit</td><td align="left">String</td><td align="left">单元格编辑类型（默认不开启）目前只支持：<em>text</em>（输入框）</td><td align="left">text</td></tr><tr><td align="left">event</td><td align="left">String</td><td align="left">自定义单元格点击事件名，以便在 <a href="https://www.layui.com/doc/modules/table.html#ontool">tool</a> 事件中完成对该单元格的业务处理</td><td align="left">任意字符</td></tr><tr><td align="left">style</td><td align="left">String</td><td align="left">自定义单元格样式。即传入 CSS 样式</td><td align="left">background-color: #5FB878; color: #fff;</td></tr><tr><td align="left">align</td><td align="left">String</td><td align="left">单元格排列方式。可选值有：<em>left</em>（默认）、<em>center</em>（居中）、<em>right</em>（居右）</td><td align="left">center</td></tr><tr><td align="left">colspan</td><td align="left">Number</td><td align="left">单元格所占列数（默认：1）。一般用于多级表头</td><td align="left">3</td></tr><tr><td align="left">rowspan</td><td align="left">Number</td><td align="left">单元格所占行数（默认：1）。一般用于多级表头</td><td align="left">2</td></tr><tr><td align="left">templet</td><td align="left">String</td><td align="left">自定义列模板，模板遵循 <a href="https://www.layui.com/doc/modules/laytpl.html">laytpl</a> 语法。这是一个非常实用的功能，你可借助它实现逻辑处理，以及将原始数据转化成其它格式，如时间戳转化为日期字符等</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#templet">详见自定义模板</a></td></tr><tr><td align="left">toolbar</td><td align="left">String</td><td align="left">绑定工具条模板。可在每行对应的列中出现一些自定义的操作性按钮</td><td align="left"><a href="https://www.layui.com/doc/modules/table.html#onrowtool">详见行工具事件</a></td></tr></tbody></table><h5 id="templet-自定义列模板"><a href="#templet-自定义列模板" class="headerlink" title="templet - 自定义列模板"></a>templet - 自定义列模板</h5><p>类型：<em>String</em>，默认值：<em>无</em></p><p>在默认情况下，单元格的内容是完全按照数据接口返回的content原样输出的，如果你想对某列的单元格添加链接等其它元素，你可以借助该参数来轻松实现。这是一个非常实用且强大的功能，你的表格内容会因此而丰富多样。</p><blockquote><p>templet 提供了三种使用方式，请结合实际场景选择最合适的一种：</p><ul><li>如果自定义模版的字符量太大，我们推荐你采用【方式一】；</li><li>如果自定义模板的字符量适中，或者想更方便地调用外部方法，我们推荐你采用【方式二】；</li><li>如果自定义模板的字符量很小，我们推荐你采用【方式三】</li></ul></blockquote><p><strong>方式一：绑定模版选择器。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> table.<span class="title function_">render</span>(&#123;</span><br><span class="line">  <span class="attr">cols</span>: [[</span><br><span class="line">    &#123;<span class="attr">field</span>:<span class="string">&#x27;title&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;文章标题&#x27;</span>, <span class="attr">width</span>: <span class="number">200</span>, <span class="attr">templet</span>: <span class="string">&#x27;#titleTpl&#x27;</span>&#125; <span class="comment">//这里的templet值是模板元素的选择器</span></span><br><span class="line">    ,&#123;<span class="attr">field</span>:<span class="string">&#x27;id&#x27;</span>, <span class="attr">title</span>:<span class="string">&#x27;ID&#x27;</span>, <span class="attr">width</span>:<span class="number">100</span>&#125;</span><br><span class="line">  ]]</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">等价于：</span><br><span class="line">&lt;th lay-data=<span class="string">&quot;&#123;field:&#x27;title&#x27;, width: 200, templet: &#x27;#titleTpl&#x27;&#125;&quot;</span>&gt;文章标题&lt;/th&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;field:&#x27;id&#x27;, width:100&#125;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span>   </span><br></pre></td></tr></table></figure><p>下述是templet对应的模板，它可以存放在页面的任意位置。模板遵循于 <a href="https://www.layui.com/doc/modules/laytpl.html">laytpl</a> 语法，可读取到返回的所有数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> id=<span class="string">&quot;titleTpl&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/&#123;&#123;d.id&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-table-link&quot;</span>&gt;</span>&#123;&#123;d.title&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">注意：上述的 &#123;&#123;d.<span class="property">id</span>&#125;&#125;、&#123;&#123;d.<span class="property">title</span>&#125;&#125; 是动态内容，它对应数据接口返回的字段名。除此之外，你还可以读取到以下额外字段：</span><br><span class="line">     序号：&#123;&#123; d.<span class="property">LAY_INDEX</span> &#125;&#125; （该额外字段为 layui <span class="number">2.2</span><span class="number">.0</span> 新增）</span><br><span class="line"> </span><br><span class="line">由于模板遵循 laytpl 语法（建议细读 laytpl文档 ），因此在模板中你可以写任意脚本语句（如 <span class="keyword">if</span> <span class="keyword">else</span>/<span class="keyword">for</span>等）：</span><br><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> id=<span class="string">&quot;titleTpl&quot;</span>&gt;</span><br><span class="line">  &#123;&#123;#  <span class="keyword">if</span>(d.<span class="property">id</span> &lt; <span class="number">100</span>)&#123; &#125;&#125;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/detail/&#123;&#123;d.id&#125;&#125;&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;layui-table-link&quot;</span>&gt;&#123;&#123;d.<span class="property">title</span>&#125;&#125;&lt;/a&gt;</span><br><span class="line">  &#123;&#123;#  &#125; <span class="keyword">else</span> &#123; &#125;&#125;</span><br><span class="line">    &#123;&#123;d.<span class="property">title</span>&#125;&#125;(普通用户)</span><br><span class="line">  &#123;&#123;#  &#125; &#125;&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>方式二：函数转义。</strong>自 layui 2.2.5 开始，templet 开始支持函数形式，函数返回一个参数 d，包含接口返回的所有字段和数据。如下所示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">table.<span class="title function_">render</span>(&#123;</span><br><span class="line">  <span class="attr">cols</span>: [[</span><br><span class="line">    &#123;<span class="attr">field</span>:<span class="string">&#x27;title&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;文章标题&#x27;</span>, <span class="attr">width</span>: <span class="number">200</span></span><br><span class="line">      ,<span class="attr">templet</span>: <span class="keyword">function</span>(<span class="params">d</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;ID：&#x27;</span>+ d.<span class="property">id</span> +<span class="string">&#x27;，标题：&lt;span style=&quot;color: #c00;&quot;&gt;&#x27;</span>+ d.<span class="property">title</span> +<span class="string">&#x27;&lt;/span&gt;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ,&#123;<span class="attr">field</span>:<span class="string">&#x27;id&#x27;</span>, <span class="attr">title</span>:<span class="string">&#x27;ID&#x27;</span>, <span class="attr">width</span>:<span class="number">100</span>&#125;</span><br><span class="line">  ]]</span><br><span class="line">&#125;);    </span><br><span class="line">        </span><br></pre></td></tr></table></figure><p><strong>方式三：直接赋值模版字符。</strong>事实上，templet 也可以直接是一段 html 内容，如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">templet</span>: <span class="string">&#x27;&lt;div&gt;&lt;a href=&quot;/detail/&#123;&#123;d.id&#125;&#125;&quot; class=&quot;layui-table-link&quot;&gt;&#123;&#123;d.title&#125;&#125;&lt;/a&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line"> </span><br><span class="line">注意：这里一定要被一层 &lt;div&gt;&lt;/div&gt; 包裹，否则无法读取到模板</span><br></pre></td></tr></table></figure><h5 id="toolbar-绑定工具条模板"><a href="#toolbar-绑定工具条模板" class="headerlink" title="toolbar - 绑定工具条模板"></a>toolbar - 绑定工具条模板</h5><p>类型：<em>String</em>，默认值：<em>无</em></p><p>通常你需要在表格的每一行加上 <em>查看</em>、<em>编辑</em>、<em>删除</em> 这样类似的操作按钮，而 tool 参数就是为此而生，你因此可以非常便捷地实现各种操作功能。<strong>tool 参数和 templet 参数的使用方式完全类似</strong>，通常接受的是一个选择器，也可以是一段HTML字符。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">table.<span class="title function_">render</span>(&#123;</span><br><span class="line">  <span class="attr">cols</span>: [[</span><br><span class="line">    &#123;<span class="attr">field</span>:<span class="string">&#x27;id&#x27;</span>, <span class="attr">title</span>:<span class="string">&#x27;ID&#x27;</span>, <span class="attr">width</span>:<span class="number">100</span>&#125;</span><br><span class="line">    ,&#123;<span class="attr">fixed</span>: <span class="string">&#x27;right&#x27;</span>, <span class="attr">width</span>:<span class="number">150</span>, <span class="attr">align</span>:<span class="string">&#x27;center&#x27;</span>, <span class="attr">toolbar</span>: <span class="string">&#x27;#barDemo&#x27;</span>&#125; <span class="comment">//这里的toolbar值是模板元素的选择器</span></span><br><span class="line">  ]]</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">等价于：</span><br><span class="line">&lt;th lay-data=<span class="string">&quot;&#123;field:&#x27;id&#x27;, width:100&#125;&quot;</span>&gt;<span class="variable constant_">ID</span>&lt;/th&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">th</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;fixed: &#x27;right&#x27;, width:150, align:&#x27;center&#x27;, toolbar: &#x27;#barDemo&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>下述是 toolbar 对应的模板，它可以存放在页面的任意位置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> id=<span class="string">&quot;barDemo&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-xs&quot;</span> <span class="attr">lay-event</span>=<span class="string">&quot;detail&quot;</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-xs&quot;</span> <span class="attr">lay-event</span>=<span class="string">&quot;edit&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-danger layui-btn-xs&quot;</span> <span class="attr">lay-event</span>=<span class="string">&quot;del&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line">  &lt;!-- 这里同样支持 laytpl 语法，如： --&gt;</span><br><span class="line">  &#123;&#123;#  <span class="keyword">if</span>(d.<span class="property">auth</span> &gt; <span class="number">2</span>)&#123; &#125;&#125;</span><br><span class="line">    &lt;a <span class="keyword">class</span>=<span class="string">&quot;layui-btn layui-btn-xs&quot;</span> lay-event=<span class="string">&quot;check&quot;</span>&gt;审核&lt;/a&gt;</span><br><span class="line">  &#123;&#123;#  &#125; &#125;&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">注意：属性 lay-event=<span class="string">&quot;&quot;</span> 是模板的关键所在，值可随意定义</span><br></pre></td></tr></table></figure><h3 id="Echart"><a href="#Echart" class="headerlink" title="Echart"></a>Echart</h3><p>这是一个图表的模板。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">layui.<span class="title function_">use</span>([<span class="string">&quot;carousel&quot;</span>,<span class="string">&quot;echarts&quot;</span>],<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> e=layui.<span class="property">$</span></span><br><span class="line">    ,a=(layui.<span class="property">carousel</span>,layui.<span class="property">echarts</span>)</span><br><span class="line">    ,t=[]</span><br><span class="line">    , i=[&#123;</span><br><span class="line">        &lt;!-- 主体部分 --&gt;</span><br><span class="line">        <span class="attr">title</span>:&#123;<span class="attr">text</span>:<span class="string">&quot;未来一周气温变化&quot;</span>,<span class="attr">subtext</span>:<span class="string">&quot;纯属虚构&quot;</span>&#125;</span><br><span class="line">        , <span class="attr">tooltip</span>:&#123;<span class="attr">trigger</span>:<span class="string">&quot;axis&quot;</span>&#125;</span><br><span class="line">        ,<span class="attr">legend</span>:&#123;<span class="attr">data</span>:[<span class="string">&quot;最高气温&quot;</span>,<span class="string">&quot;最低气温&quot;</span>]&#125;</span><br><span class="line">        , <span class="attr">calculable</span>:!<span class="number">0</span></span><br><span class="line">        ,<span class="attr">xAxis</span>:[&#123;<span class="attr">type</span>:<span class="string">&quot;category&quot;</span></span><br><span class="line">                 ,<span class="attr">boundaryGap</span>:!<span class="number">1</span></span><br><span class="line">                 , <span class="attr">data</span>:[<span class="string">&quot;周一&quot;</span>,<span class="string">&quot;周二&quot;</span>,<span class="string">&quot;周三&quot;</span>,<span class="string">&quot;周四&quot;</span>,<span class="string">&quot;周五&quot;</span>,<span class="string">&quot;周六&quot;</span>,<span class="string">&quot;周日&quot;</span>]&#125;]</span><br><span class="line">        , <span class="attr">yAxis</span>:[&#123;<span class="attr">type</span>:<span class="string">&quot;value&quot;</span></span><br><span class="line">                  ,<span class="attr">axisLabel</span>:&#123;<span class="attr">formatter</span>:<span class="string">&quot;&#123;value&#125; °C&quot;</span>&#125;&#125;]</span><br><span class="line">        , <span class="attr">series</span>:[&#123;<span class="attr">name</span>:<span class="string">&quot;最高气温&quot;</span></span><br><span class="line">                   ,<span class="attr">type</span>:<span class="string">&quot;line&quot;</span></span><br><span class="line">                   ,<span class="attr">data</span>:[<span class="number">11</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">10</span>]</span><br><span class="line">                   , <span class="attr">markPoint</span>:&#123;<span class="attr">data</span>:[&#123;<span class="attr">type</span>:<span class="string">&quot;max&quot;</span>,<span class="attr">name</span>:<span class="string">&quot;最大值&quot;</span>&#125;</span><br><span class="line">                                      ,&#123;<span class="attr">type</span>:<span class="string">&quot;min&quot;</span>,<span class="attr">name</span>:<span class="string">&quot;最小值&quot;</span>&#125;]&#125;</span><br><span class="line">                   , <span class="attr">markLine</span>:&#123;<span class="attr">data</span>:[&#123;<span class="attr">type</span>:<span class="string">&quot;average&quot;</span>,<span class="attr">name</span>:<span class="string">&quot;平均值&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">                  , &#123;<span class="attr">name</span>:<span class="string">&quot;最低气温&quot;</span></span><br><span class="line">                     ,<span class="attr">type</span>:<span class="string">&quot;line&quot;</span></span><br><span class="line">                     ,<span class="attr">data</span>:[<span class="number">1</span>,-<span class="number">2</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>]</span><br><span class="line">                     , <span class="attr">markPoint</span>:&#123;<span class="attr">data</span>:[&#123;<span class="attr">name</span>:<span class="string">&quot;周最低&quot;</span></span><br><span class="line">                                         ,<span class="attr">value</span>:-<span class="number">2</span></span><br><span class="line">                                         ,<span class="attr">xAxis</span>:<span class="number">1</span></span><br><span class="line">                                         ,<span class="attr">yAxis</span>:-<span class="number">1.5</span>&#125;]&#125;</span><br><span class="line">                     , <span class="attr">markLine</span>:&#123;<span class="attr">data</span>:[&#123;<span class="attr">type</span>:<span class="string">&quot;average&quot;</span></span><br><span class="line">                                        ,<span class="attr">name</span>:<span class="string">&quot;平均值&quot;</span>&#125;]&#125;&#125;]&#125;]</span><br><span class="line">    , n=<span class="title function_">e</span>(<span class="string">&quot;#LAY-index-normline&quot;</span>).<span class="title function_">children</span>(<span class="string">&quot;div&quot;</span>)</span><br><span class="line">    , l=<span class="keyword">function</span>(<span class="params">e</span>)&#123;t[e]=a.<span class="title function_">init</span>(n[e],layui.<span class="property">echartsTheme</span>)</span><br><span class="line">        , t[e].<span class="title function_">setOption</span>(i[e])</span><br><span class="line">        ,<span class="variable language_">window</span>.<span class="property">onresize</span>=t[e].<span class="property">resize</span>&#125;;</span><br><span class="line">&lt;!-- 结尾部分 --&gt;</span><br><span class="line">    n[<span class="number">0</span>]&amp;&amp;<span class="title function_">l</span>(<span class="number">0</span>)&#125;),</span><br></pre></td></tr></table></figure><h5 id="页面加载JS所用的语法："><a href="#页面加载JS所用的语法：" class="headerlink" title="页面加载JS所用的语法："></a>页面加载JS所用的语法：</h5><p><a href="https://www.layui.com/doc/base/modules.html#extend">文档示例</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//定义模块</span><br><span class="line">;layui.define(function(e)&#123;e(&quot;sample&quot;,&#123;&#125;)&#125;);</span><br><span class="line">//加载使用模块</span><br><span class="line">layui.use([&#x27;mymod&#x27;, &#x27;mod1&#x27;], function()&#123;</span><br><span class="line">  var mymod = layui.mymod</span><br><span class="line">  ,mod1 = layui.mod1</span><br><span class="line">  ,mod2 = layui.mod2;</span><br><span class="line">  mymod.hello(&#x27;World!&#x27;); //弹出 Hello World!</span><br><span class="line">&#125;);</span><br><span class="line">//定义模块可以加载模块</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Laytpl"><a href="#Laytpl" class="headerlink" title="Laytpl"></a>Laytpl</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script id=<span class="string">&quot;sensorList&quot;</span> type=<span class="string">&quot;text/html&quot;</span>&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-xs12 layui-col-sm4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     &#123;&#123;#  layui.each(d.list, function(index, item)&#123; &#125;&#125;</span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layuiadmin-card-text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-text-top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;layui-icon layui-icon-engine&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;http://www.layui.com/doc/modules/flow.html&quot;</span>&gt;</span>&#123;&#123; item.sensorName &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">       <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;layui-text-center&quot;</span>&gt;</span>&#123;&#123; item.sensorDetail &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">       <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;layui-text-bottom&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">lay-href</span>=<span class="string">&quot;http://www.layui.com/doc/modules/flow.html&quot;</span>&gt;</span>流加载<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>7 天前<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     &#123;&#123;#  &#125;); &#125;&#125;</span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"> &lt;/script&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  layui.<span class="title function_">use</span>(<span class="string">&quot;laytpl&quot;</span>,<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">var</span> laytpl = layui.<span class="property">laytpl</span>;</span><br><span class="line">   <span class="keyword">var</span> data = &#123; <span class="comment">//数据</span></span><br><span class="line">     <span class="string">&quot;title&quot;</span>:<span class="string">&quot;aaa&quot;</span></span><br><span class="line">     ,<span class="string">&quot;list&quot;</span>:[&#123;<span class="string">&quot;sensorName&quot;</span>:<span class="string">&quot;传感器1&quot;</span>,<span class="string">&quot;sensorDetail&quot;</span>:<span class="string">&quot;描述一般十多年&quot;</span>&#125;,&#123;<span class="string">&quot;sensorName&quot;</span>:<span class="string">&quot;传感器2&quot;</span>,<span class="string">&quot;sensorDetail&quot;</span>:<span class="string">&quot;描述一发般十多年&quot;</span>&#125;,&#123;<span class="string">&quot;sensorName&quot;</span>:<span class="string">&quot;传感器3&quot;</span>,<span class="string">&quot;sensorDetail&quot;</span>:<span class="string">&quot;描述而般十多年&quot;</span>&#125;]</span><br><span class="line">   &#125;;</span><br><span class="line">   <span class="keyword">var</span> getTpl = sensorList.<span class="property">innerHTML</span></span><br><span class="line">           ,view = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sensorView&#x27;</span>);</span><br><span class="line">   <span class="title function_">laytpl</span>(getTpl).<span class="title function_">render</span>(data, <span class="keyword">function</span>(<span class="params">html</span>)&#123;</span><br><span class="line">     view.<span class="property">innerHTML</span> = html;</span><br><span class="line">   &#125;);</span><br><span class="line"></span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h3 id="前台请求后台JSON数据"><a href="#前台请求后台JSON数据" class="headerlink" title="前台请求后台JSON数据"></a>前台请求后台JSON数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> $.<span class="title function_">post</span>(<span class="string">&quot;/aaa&quot;</span>,&#123;<span class="attr">id</span>:id,<span class="attr">datatablename</span>:datatablename,<span class="attr">dname</span>:dname&#125;, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    title=data;</span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line">$.<span class="title function_">post</span>(<span class="string">&#x27;url&#x27;</span>, &#123;&#125;, <span class="keyword">function</span>(<span class="params">str</span>)&#123;</span><br><span class="line">  layer.<span class="title function_">open</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">content</span>: str <span class="comment">//注意，如果str是object，那么需要字符拼接。</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取JSON数据后渲染页面</span></span><br><span class="line">$.<span class="title function_">get</span>(<span class="string">&quot;/database/sensorList&quot;</span>,&#123;&#125;, <span class="keyword">function</span>(<span class="params">sensordata</span>)&#123;</span><br><span class="line"></span><br><span class="line">      layui.<span class="title function_">use</span>(<span class="string">&quot;laytpl&quot;</span>,<span class="keyword">function</span> (<span class="params">sensordata</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> laytpl = layui.<span class="property">laytpl</span></span><br><span class="line">        ,getTpl = sensorList.<span class="property">innerHTML</span></span><br><span class="line">        ,view = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sensorView&#x27;</span>);</span><br><span class="line">        <span class="title function_">laytpl</span>(getTpl).<span class="title function_">render</span>(sensordata, <span class="keyword">function</span>(<span class="params">html</span>)&#123;</span><br><span class="line">          view.<span class="property">innerHTML</span> = html;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>**坑：返回json数据时dao层必须有Setter和Getter否则不能生成JSON数据</p><h4 id="监听Select选择"><a href="#监听Select选择" class="headerlink" title="监听Select选择"></a>监听Select选择</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">对于<span class="title class_">From</span>表单的自动渲染，需要在父标签中添加<span class="keyword">class</span>=<span class="string">&quot;lay-form&quot;</span></span><br><span class="line"></span><br><span class="line">form.<span class="title function_">on</span>(<span class="string">&#x27;select(filter)&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">elem</span>); <span class="comment">//得到select原始DOM对象</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">value</span>); <span class="comment">//得到被选中的值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">othis</span>); <span class="comment">//得到美化后的DOM对象</span></span><br><span class="line">&#125;);     </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">//获取JSON数据后渲染页面</span><br><span class="line">$.get(&quot;/database/acid?sensorId=1&quot;,&#123;&#125;, function(data)&#123;</span><br><span class="line"></span><br><span class="line">      layui.use([&quot;carousel&quot;,&quot;echarts&quot;],function(data)&#123;</span><br><span class="line">      </span><br><span class="line">  </span><br><span class="line">    var tmpdata = new Array();</span><br><span class="line">        var newindex = 0;</span><br><span class="line">        for( var i = 0; i &lt; 7; i++ ) &#123;</span><br><span class="line">          if (data[i] != null) &#123;</span><br><span class="line">            tmpdata[newindex] = dates.format(data[i].time, &#x27;MM-dd hh:mm&#x27;);</span><br><span class="line">            newindex++;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">    var e=layui.$</span><br><span class="line">    ,a=(layui.carousel,layui.echarts)</span><br><span class="line">    ,t=[]</span><br><span class="line">    , i=[&#123;</span><br><span class="line">        &lt;!-- 主体部分 --&gt;</span><br><span class="line">        title:&#123;text:&quot;PH-酒精含量变化&quot;,subtext:&quot;酒精含量为百分比&quot;&#125;</span><br><span class="line">        , tooltip:&#123;trigger:&quot;axis&quot;&#125;</span><br><span class="line">        ,legend:&#123;data:[&quot;酒精含量&quot;,&quot;PH&quot;]&#125;</span><br><span class="line">        , calculable:!0</span><br><span class="line">        ,xAxis:[&#123;type:&quot;category&quot;</span><br><span class="line">                 ,boundaryGap:!1</span><br><span class="line">                 , data:tmpdata&#125;]</span><br><span class="line">        , yAxis:[&#123;type:&quot;value&quot;</span><br><span class="line">                  ,axisLabel:&#123;formatter:&quot;&#123;value&#125; °C&quot;&#125;&#125;]</span><br><span class="line">        , series:[&#123;name:&quot;最高气温&quot;</span><br><span class="line">                   ,type:&quot;line&quot;</span><br><span class="line">                   ,data:[11,11,15,13,12,13,10]</span><br><span class="line">                   , markPoint:&#123;data:[&#123;type:&quot;max&quot;,name:&quot;最大值&quot;&#125;</span><br><span class="line">                                      ,&#123;type:&quot;min&quot;,name:&quot;最小值&quot;&#125;]&#125;</span><br><span class="line">                   , markLine:&#123;data:[&#123;type:&quot;average&quot;,name:&quot;平均值&quot;&#125;]&#125;&#125;</span><br><span class="line">                  , &#123;name:&quot;最低气温&quot;</span><br><span class="line">                     ,type:&quot;line&quot;</span><br><span class="line">                     ,data:[1,-2,2,5,3,2,0]</span><br><span class="line">                     , markPoint:&#123;data:[&#123;name:&quot;周最低&quot;</span><br><span class="line">                                         ,value:-2</span><br><span class="line">                                         ,xAxis:1</span><br><span class="line">                                         ,yAxis:-1.5&#125;]&#125;</span><br><span class="line">                     , markLine:&#123;data:[&#123;type:&quot;average&quot;</span><br><span class="line">                                        ,name:&quot;平均值&quot;&#125;]&#125;&#125;]&#125;]</span><br><span class="line">    , n=e(&quot;#LAY-index-normline&quot;).children(&quot;div&quot;)</span><br><span class="line">    , l=function(e)&#123;t[e]=a.init(n[e],layui.echartsTheme)</span><br><span class="line">        , t[e].setOption(i[e])</span><br><span class="line">        ,window.onresize=t[e].resize&#125;;</span><br><span class="line">&lt;!-- 结尾部分 --&gt;</span><br><span class="line">    n[0]&amp;&amp;l(0)&#125;),</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h4 id="JS格式化时间日期"><a href="#JS格式化时间日期" class="headerlink" title="JS格式化时间日期"></a>JS格式化时间日期</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">js <span class="title class_">Date</span> <span class="title function_">format</span>(日期格式化:yyyy-<span class="variable constant_">MM</span>-dd <span class="attr">HH</span>:<span class="attr">mm</span>:ss.<span class="property">S</span>)</span><br><span class="line">今天在做日期显示的时候，那个显示格式困扰了很久，各种组件都尝试了，总是不如意，最后自己网上找了一个，然后稍微修改一下，感觉这个<span class="title class_">Util</span>挺常用的，这里mark一下</span><br><span class="line"></span><br><span class="line"><span class="title class_">Date</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">format</span> = <span class="keyword">function</span>(<span class="params">fmt</span>)</span><br><span class="line">&#123; </span><br><span class="line">　　<span class="keyword">var</span> o = &#123;</span><br><span class="line">　　　　<span class="string">&quot;M+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getMonth</span>()+<span class="number">1</span>, <span class="comment">//月份</span></span><br><span class="line">　　　　<span class="string">&quot;d+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getDate</span>(), <span class="comment">//日</span></span><br><span class="line">　　　　<span class="string">&quot;h+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getHours</span>()%<span class="number">12</span> == <span class="number">0</span> ? <span class="number">12</span> : <span class="variable language_">this</span>.<span class="title function_">getHours</span>()%<span class="number">12</span>, <span class="comment">//小时</span></span><br><span class="line">　　　　<span class="string">&quot;H+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getHours</span>(), <span class="comment">//小时</span></span><br><span class="line">　　　　<span class="string">&quot;m+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getMinutes</span>(), <span class="comment">//分</span></span><br><span class="line">　　　　<span class="string">&quot;s+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getSeconds</span>(), <span class="comment">//秒</span></span><br><span class="line">　　　　<span class="string">&quot;q+&quot;</span> : <span class="title class_">Math</span>.<span class="title function_">floor</span>((<span class="variable language_">this</span>.<span class="title function_">getMonth</span>()+<span class="number">3</span>)/<span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line">　　　　<span class="string">&quot;S&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getMilliseconds</span>() <span class="comment">//毫秒</span></span><br><span class="line">　　&#125;;</span><br><span class="line">　　<span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.<span class="title function_">test</span>(fmt))</span><br><span class="line">　　　　fmt=fmt.<span class="title function_">replace</span>(<span class="title class_">RegExp</span>.<span class="property">$1</span>, (<span class="variable language_">this</span>.<span class="title function_">getFullYear</span>()+<span class="string">&quot;&quot;</span>).<span class="title function_">substr</span>(<span class="number">4</span> - <span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span>));</span><br><span class="line">　　<span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o)</span><br><span class="line">　　　　<span class="keyword">if</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;(&quot;</span>+ k +<span class="string">&quot;)&quot;</span>).<span class="title function_">test</span>(fmt))</span><br><span class="line">　　fmt = fmt.<span class="title function_">replace</span>(<span class="title class_">RegExp</span>.<span class="property">$1</span>, (<span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span>==<span class="number">1</span>) ? (o[k]) : ((<span class="string">&quot;00&quot;</span>+ o[k]).<span class="title function_">substr</span>((<span class="string">&quot;&quot;</span>+ o[k]).<span class="property">length</span>)));</span><br><span class="line">　　<span class="keyword">return</span> fmt;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">调用方式：</span><br><span class="line"></span><br><span class="line">　　<span class="keyword">var</span> time1 = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">format</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line"></span><br><span class="line">　　<span class="keyword">var</span> time2 = <span class="keyword">new</span> <span class="title class_">Date</span>(time).<span class="title function_">format</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line"></span><br><span class="line">简单记录，不熟前端，有问题大佬们请指正。</span><br></pre></td></tr></table></figure><h4 id="引入JQuery"><a href="#引入JQuery" class="headerlink" title="引入JQuery"></a>引入JQuery</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;http://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以使用</span></span><br><span class="line">$.<span class="title function_">get</span>(<span class="string">&quot;/database/acid?sensorId=1&quot;</span>,&#123;&#125;, <span class="keyword">function</span>(<span class="params">acidData</span>)&#123;&#125;</span><br><span class="line">      post等</span><br></pre></td></tr></table></figure><h4 id="JS解析URL内的数据"><a href="#JS解析URL内的数据" class="headerlink" title="JS解析URL内的数据"></a>JS解析URL内的数据</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将URL中的变量取出</span></span><br><span class="line">  <span class="comment">//调用方式</span></span><br><span class="line">  <span class="comment">// getQueryVariable(&quot;sensorId&quot;)</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">getQueryVariable</span>(<span class="params">variable</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">var</span> query = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">substring</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> vars = query.<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;vars.<span class="property">length</span>;i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> pair = vars[i].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>(pair[<span class="number">0</span>] == variable)&#123;<span class="keyword">return</span> pair[<span class="number">1</span>];&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>(<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="数据表格的重载"><a href="#数据表格的重载" class="headerlink" title="数据表格的重载"></a>数据表格的重载</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//渲染一个表格</span></span><br><span class="line">            i.<span class="title function_">render</span>(&#123;</span><br><span class="line">                <span class="attr">elem</span>: <span class="string">&quot;#sensorDataBaseTable&quot;</span>,</span><br><span class="line">                <span class="attr">title</span>:<span class="string">&quot;数据&quot;</span>,</span><br><span class="line">                <span class="attr">url</span>: <span class="string">&quot;/database/dataBaseTable/&quot;</span>,</span><br><span class="line">                <span class="attr">where</span>: &#123;<span class="attr">sensorId</span>:<span class="number">1</span>&#125;</span><br><span class="line">                ,<span class="attr">page</span>: <span class="literal">true</span> <span class="comment">//开启分页</span></span><br><span class="line">                 ,<span class="attr">toolbar</span>: <span class="literal">true</span></span><br><span class="line">                ,<span class="attr">height</span>: <span class="number">550</span> <span class="comment">//容器高度</span></span><br><span class="line">                ,<span class="attr">cols</span>: [[</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">field</span>: <span class="string">&quot;time&quot;</span>,</span><br><span class="line">                        <span class="attr">width</span>: <span class="number">200</span>,</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&quot;时间&quot;</span>,</span><br><span class="line">                        <span class="attr">sort</span>: !<span class="number">0</span>,</span><br><span class="line">                        <span class="attr">templet</span>: <span class="keyword">function</span>(<span class="params">d</span>)&#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Date</span>(d.<span class="property">time</span>).<span class="title function_">format</span>(<span class="string">&quot;MM-dd HH:mm&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">field</span>: <span class="string">&quot;acidity&quot;</span>,</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&quot;酸度-PH&quot;</span>,</span><br><span class="line">                        <span class="attr">minWidth</span>: <span class="number">100</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">field</span>: <span class="string">&quot;alcohol&quot;</span>,</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&quot;酒精含量%&quot;</span>,</span><br><span class="line">                        <span class="attr">minWidth</span>: <span class="number">100</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">field</span>: <span class="string">&quot;starch&quot;</span>,</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&quot;淀粉含量%&quot;</span>,</span><br><span class="line">                        <span class="attr">minWidth</span>: <span class="number">100</span>,</span><br><span class="line"></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">field</span>: <span class="string">&quot;humidity&quot;</span>,</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&quot;湿度%&quot;</span>,</span><br><span class="line">                        <span class="attr">minWidth</span>: <span class="number">100</span>,</span><br><span class="line"></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">field</span>: <span class="string">&quot;temperature&quot;</span>,</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&quot;温度℃&quot;</span>,</span><br><span class="line">                        <span class="attr">minWidth</span>: <span class="number">100</span>,</span><br><span class="line"></span><br><span class="line">                    &#125;]],</span><br><span class="line">                <span class="attr">limit</span>: <span class="number">10</span>,</span><br><span class="line">                <span class="attr">limits</span>: [<span class="number">10</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">80</span>, <span class="number">100</span>,<span class="number">200</span>,<span class="number">400</span>],</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&quot;对不起，加载出现异常！&quot;</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//定义执行重载该表格，查询或修改</span></span><br><span class="line">             <span class="keyword">var</span> $ = layui.<span class="property">$</span>,</span><br><span class="line">            active = &#123;</span><br><span class="line">            <span class="attr">reload</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> sensorId = $(<span class="string">&#x27;#sensorView2&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> start = $(<span class="string">&#x27;#start&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> end = $(<span class="string">&#x27;#end&#x27;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//执行重载</span></span><br><span class="line">                i.<span class="title function_">reload</span>(<span class="string">&#x27;sensorDataBaseTable&#x27;</span>, &#123;</span><br><span class="line">                    <span class="attr">page</span>: &#123;</span><br><span class="line">                        <span class="attr">curr</span>: <span class="number">1</span> <span class="comment">//重新从第 1 页开始</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    ,<span class="attr">where</span>: &#123;</span><br><span class="line">                            <span class="attr">sensorId</span>: sensorId.<span class="title function_">val</span>(),</span><br><span class="line">                            <span class="attr">start</span>:start.<span class="title function_">val</span>(),</span><br><span class="line">                            <span class="attr">end</span>:end.<span class="title function_">val</span>()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//监听该表格，修改</span></span><br><span class="line">        $(<span class="string">&#x27;.layui-inline .layui-btn&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> type = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;type&#x27;</span>);</span><br><span class="line">            active[type] ? active[type].<span class="title function_">call</span>(<span class="variable language_">this</span>) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用templet渲染修改数据</span></span><br><span class="line">table.<span class="title function_">render</span>(&#123;</span><br><span class="line">  <span class="attr">cols</span>: [[</span><br><span class="line">    &#123;<span class="attr">field</span>:<span class="string">&#x27;title&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;文章标题&#x27;</span>, <span class="attr">width</span>: <span class="number">200</span></span><br><span class="line">      ,<span class="attr">templet</span>: <span class="keyword">function</span>(<span class="params">d</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;ID：&#x27;</span>+ d.<span class="property">id</span> +<span class="string">&#x27;，标题：&lt;span style=&quot;color: #c00;&quot;&gt;&#x27;</span>+ d.<span class="property">title</span> +<span class="string">&#x27;&lt;/span&gt;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ,&#123;<span class="attr">field</span>:<span class="string">&#x27;id&#x27;</span>, <span class="attr">title</span>:<span class="string">&#x27;ID&#x27;</span>, <span class="attr">width</span>:<span class="number">100</span>&#125;</span><br><span class="line">  ]]</span><br><span class="line">&#125;);    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米手机刷机入门指北（小白向）</title>
      <link href="/peaky/2021/01/23/44737761.html"/>
      <url>/peaky/2021/01/23/44737761.html</url>
      
        <content type="html"><![CDATA[<p>今天这一期给大家带来小米手机刷机入门指北</p><p>原文来自酷安@米粥酱</p><p>原文链接：<a href="https://www.coolapk.com/feed/17782931?shareKey=YmY1MDY0YjBjYmFiNjAwYjAwYjY~&shareUid=1162770&shareFrom=com.coolapk.market_11.0-beta7">查看链接</a></p><p>本文主要是写给那些想刷机却不知该如何下手的小白用户，大佬们可以先跳过主要写卡刷，线刷部分我会简写。</p><p>文章内容都是一些比较基础的刷机知识，容易理解和快速上手，希望可以帮到各位，好了，我们上正文</p> <span id="more"></span><p>首先我们得先了解一些刷机必备的知识（知道的可以不用点链接）</p><p>BL锁是什么:<a href="https://baike.baidu.com/item/BootLoader/8733520">查看链接</a></p><p>Rec是什么:<a href="https://baike.sm.cn/item/702432c17c0cc802e45521be76eb07c0.html?from=smsc&uc_param_str=dnntnwvepffrgibijbpr">查看链接</a></p><p>Fastboot是什么:<a href="https://baike.baidu.com/item/fastboot/3228436">查看链接</a></p><p>Root是什么:<a href="https://baike.baidu.com/item/root/73226">查看链接</a></p><p>了解完呢，我们就可以正式进入刷机之旅啦</p><p>■卡刷</p><p>●解BL锁部分</p><p>首先，按照小米官方的说法，老机子都是不带BL锁的（老机子用户可以跳过这一part），而大部分的机子（米4之后的）都带BL锁，所以想知道自己手机是否解了锁，开机的时候看第一屏（就是刚刚开机首先显示出来的画面）底下是否有“unlock”字样，有的话就证明你已经解锁了，没有的话就说明你没解。</p><p>（已经解锁的用户请跳过这一part）</p><p>首先我们得去:<a href="http://www.miui.com/unlock/index.html">查看链接</a></p><p>申请解锁小米手机，让自己的账号获取解锁权限</p><p>等收到通知申请成功了，就按照网站上面的提示，下载解锁工具，如果你是新账号，一般来讲则需要等两周左右，所以提前做好准备，或者找个老账号，如果你是老账号就可以秒解。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps1.png" alt="img"> </p><p>★注意!这里解BL锁成功之后是会抹除所有数据的，请做好备份准备。</p><p>（开发版用户可以忽略以下这一part）</p><p>如果你是稳定版用户，那么建议你去 <a href="http://www.coolapk.com/apk/com.xiaomi.vipaccount">【小米社区】</a> 提前申请开发版，等解锁成功之后，去小米社区下载开发版刷入</p><p>★如果不想刷入开发版可直接跳到下面刷入Recovery部分</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps2.png" alt="img"> </p><p>如果它没提示你怎么刷入开发版，点进设置——我的设备——MIUI版本，然后对准那个图标点几下，直到出来一行字（具体是什么我也忘了）然后点右上角——手动选择安装包，然后去文件夹选好你下载的开发版刷入就可以了。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps3.png" alt="img"> </p><p>●获取Root权限</p><p>刷入开发版之后，我们就可以开始获取Root权限了</p><p>点击手机管家——应用管理——权限——ROOT权限管理按照提示操作就可以了，ROOT不会抹除任何数据请放心刷入</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps4.png" alt="img"> </p><p>★获取了ROOT权限之后，就要准备你的刷机必备两件套了:Rec和你将要刷入的包，这些东西可以去你的机型的一些交流群的群文件里找到，或者官网</p><p>●刷入Recovery</p><p>Recovery以下简称rec，rec一般常见的有两种，一种是twrp，另一种是橙狐，下面我们就拿twrp举例。</p><p>而一般刷入Rec呢，有两种模式，一种是线刷，一种是卡刷</p><p>◆下面我就先来讲线刷的，稳定版用户注意了，因为你们还没获取root权限所以想通过卡刷刷入的话很难（对小白来说）或者不可能</p><p>这里我们建议下一个cofface tool</p><p>我会在评论区放下载链接，各位投币自取</p><p>按照提示，进入fastboot模式（关机后同时按电源键和音量—）</p><p>（下面是界面）</p><p>根据提示把rec刷入，就行了，当然如果会ADB的大佬们也可以用ADB刷这里我就不讲了毕竟ADB我还没摸熟</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps5.png" alt="img"> </p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps6.png" alt="img"> </p><p>◆卡刷</p><p>这里开发版并且获取root权限的用户看好啦</p><p>获取root之后，准备好相应的rec，并且知道文件存放路径（这个这么基础我就不说了）</p><p>去下载一个 <a href="https://play.google.com/store/apps/details?id=top.zsh2401.imagehelper">查看链接</a></p><p>不知为何你安下架了，所以评论区我也会放下载链接各位投币自取</p><p>然后点进去，退出</p><p>★不要清后台!不要清后台!不要清后台!</p><p>回到root权限管理，给它root权限，然后回去，点击刷入rec，刷入成功后，你可以立马进去开始刷机或者稍后关机再进去</p><p>进Rec方法:关机后同时按电源键和音量＋</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps7.png" alt="img"> </p><p>●进入Rec</p><p>如果说进入Rec之后是正片的话，那前面做的那些，也只是预告而已</p><p>twrp的主页面，如果你的是英语版的话可以去设置里调成中文，如果没有中文选项只能再找个中文版了</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps8.png" alt="img"> </p><p>黑鲨2的页面</p><p>刷机第一部是双清</p><p>直接滑动就行了清除成功后就可以开始刷包</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps9.png" alt="img"> </p><p>如果你刷的是一些比较特殊的包，比如类原生Android Q或者降级包，比如从Q降到P，刷前是需要三清四清啥的，刷后还要格式化data，当然这只是刷这些特殊的包所要用到的步骤，具体要做什么得看你刷什么包</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps10.png" alt="img"> </p><p>格式化data页面</p><p>挂载分区，有时候你没挂载一些分区的话可能清除数据不成功或者找不到你要刷的包所以先看好挂载的分区对了没，具体自己摸索或者问人</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps11.png" alt="img"> </p><p>挂载</p><p>备份的话看资料有没有提前备份好，反正我是不用这玩意</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps12.png" alt="img"> </p><p>备份</p><p>●刷入包</p><p>前面的步骤都做完之后，点击安装，进去选好自己的包就开始刷了，注意了!如果包损坏的话，就得换一个包，所以多备几个包是至关重要的，建议备一个官方包救砖</p><p>这里不仅可以刷第三方ROM，还能刷面具进行root（没有root权限的稳定版用户稳定版用户），刷内核啥的，下面就拿刷EVO举例</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps13.png" alt="img"> </p><p>刷入类原生Android Q的话，刷入成功后不要立马开机，得先格式化data一遍再开</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps14.png" alt="img"> </p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps15.png" alt="img"> </p><p>刷入成功</p><p>开机是会有点久的所以大家不用担心，只要能顺利进入第二屏（开机显示的第二个画面）那就成功了。</p><p>成功开机后，恭喜你，卡刷成功</p><p>■线刷</p><p>因为我刷机大多都是卡刷的，线刷的话我是拿来救砖和降级的，所以线刷我就说这两part吧</p><p>●救砖和降级</p><p>举个例子，如果你是MIUI11用户，想降回MIUI10，那么请先备份好所有数据，因为这会抹除所有数据</p><p>按照上面的步骤解除了BL之后，电脑上下载MIflash和即将刷入的降级包</p><p>用数据线链接电脑</p><p>手机进入fastboot模式，然后进入MIflash，开刷</p><p>官方稳定版完整包下载地址:<a href="https://www.miui.com/getrom.php?m=yes&mobile=2">查看链接</a></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/wps16.png" alt="img"> </p><p>MIflash线刷教程:<a href="http://www.miui.com/shuaji-393.html">查看链接</a></p><p>刷入成功后，你就降级成功了</p><p>★根据我的经验，MIflash刷入如果超过1000s就拔线，重刷，一般五六次就成功了运气好两三次甚至一次</p><p>这个方法适用于救砖和降级，百试百灵</p><p>当然救砖也可以用cofface刷入rec卡刷</p><p>●总结:刷机就好比做数学题，思维活跃很快就能懂</p><p>如果各位大佬觉得我有什么写的不好的话请多指教，勿喷，我这篇是写给小白看的</p><p>再加上我养老了很久，所以如果有些误区的话不妨指出来，我已经尽我的努力将一篇简单易懂易上手的刷机文章写出来了，感谢各位看到这里。</p><p>“愿你刷机半生，归来仍是MIUI”</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LayuiAdmin 文档</title>
      <link href="/peaky/2021/01/20/a2f6ccf6.html"/>
      <url>/peaky/2021/01/20/a2f6ccf6.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/niuben/p/11038846.html">layuiAdmin std v1.x 【iframe版】开发者文档</a></p><h1 id="题外"><a href="#题外" class="headerlink" title="题外"></a><strong>题外</strong></h1><ul><li>该文档适用于 layuiAdmin 专业版（单页面），阅读之前请务必确认是否与你使用的版本对应。</li><li>熟练掌握 layuiAdmin 的前提是熟练掌握 layui，因此除了本篇文档， layui 的文档 也是必不可少的存在。</li><li><a href="https://www.kancloud.cn/dawn-only/layui">看云上的文档</a></li></ul><hr><blockquote><p>layuiAdmin.std（iframe 版） 是完全基于 layui 架构而成的通用型后台管理模板系统，采用传统的 iframe 多页面开发模式，可更快速直接地开发网页后台应用程序，无需过多地学习成本，简单高效，撸起袖子直接干。</p></blockquote><span id="more"></span><h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a><strong>快速上手</strong></h1><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a><strong>部署</strong></h3><ol><li>解压文件后，将 layuiAdmin 完整放置在任意目录</li><li>通过本地 web 服务器去访问 .&#x2F;start&#x2F;index.html 即可运行 Demo</li></ol><blockquote><p>由于 layuiAdmin 可采用前后端分离开发模式，因此你无需将其放置在你的服务端 MVC 框架中，你只需要给 layuiAdmin 主入口页面（我们也称之为：宿主页面）进行访问解析，它即可全权完成自身路由的跳转和视图的呈现，而数据层则完全通过服务端提供的异步接口来完成。</p></blockquote><h3 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a><strong>目录说明</strong></h3><ul><li><p>src&#x2F;</p><p>layuiAdmin 源代码，通常用于开发环境（如本地），推荐你在本地开发时，将 .&#x2F;start&#x2F;index.html 中的 layui.css 和 layui.js 的引入路径由 dist 改为 src 目录。</p><ul><li>src&#x2F;controller&#x2F;：存放 JS 业务模块，即对视图进行事件等交互性处理</li><li>src&#x2F;lib&#x2F;：layuiAdmin 的核心模块，一般不推荐修改</li><li>src&#x2F;style&#x2F;：存放样式，其中 admin.css是核心样式</li><li>src&#x2F;views&#x2F;：存放视图文件。其中 layout.html 是整个框架结构的承载，一般不推荐做大量改动。</li><li>src&#x2F;config.js：layuiAdmin 的全局配置文件，可随意修改。</li><li>src&#x2F;index.js：layuiAdmin 的入口模块，一般不推荐修改</li></ul></li><li><p>dist&#x2F;<br>通过 gulp 将 layuiAdmin src 目录的源代码进行构建后生成的目录（即：将 JS 和 CSS 文件进行了压缩等处理），通常用于线上环境。关于 gulp 的使用，下文也有介绍。</p></li><li><p>start&#x2F;<br>存放 layuiAdmin 的入口页面、模拟接口数据、layui</p></li></ul><h3 id="宿主页面"><a href="#宿主页面" class="headerlink" title="宿主页面"></a><strong>宿主页面</strong></h3><p>你所看到的 start&#x2F;index.html 是我们提供好的宿主页面，它是整个单页面的承载，所有的界面都是在这一个页面中完成跳转和渲染的。事实上，宿主页面可以放在任何地方，但是要注意修改里面的<code>&lt;link&gt; &lt;script&gt;</code>的 src 和 layui.config 中 base 的路径。</p><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a><strong>全局配置</strong></h3><p>当你已经顺利在本地预览了 layuiAdmin 后，你一定迫不及待关注更深层的结构。打开 src 目录，你将看到 config.js，里面存储着所有的默认配置。你可以按照实际需求选择性修改，下面是 layuiAdmin 默认提供的配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">layui.<span class="title function_">define</span>([<span class="string">&#x27;laytpl&#x27;</span>, <span class="string">&#x27;layer&#x27;</span>, <span class="string">&#x27;element&#x27;</span>, <span class="string">&#x27;util&#x27;</span>], <span class="keyword">function</span>(<span class="params"><span class="built_in">exports</span></span>)&#123;</span><br><span class="line">  <span class="built_in">exports</span>(<span class="string">&#x27;setter&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">container</span>: <span class="string">&#x27;LAY_app&#x27;</span> <span class="comment">//容器ID</span></span><br><span class="line">    ,<span class="attr">base</span>: layui.<span class="property">cache</span>.<span class="property">base</span> <span class="comment">//记录layuiAdmin文件夹所在路径</span></span><br><span class="line">    ,<span class="attr">views</span>: layui.<span class="property">cache</span>.<span class="property">base</span> + <span class="string">&#x27;views/&#x27;</span> <span class="comment">//视图所在目录</span></span><br><span class="line">    ,<span class="attr">entry</span>: <span class="string">&#x27;index&#x27;</span> <span class="comment">//默认视图文件名</span></span><br><span class="line">    ,<span class="attr">engine</span>: <span class="string">&#x27;.html&#x27;</span> <span class="comment">//视图文件后缀名</span></span><br><span class="line">    ,<span class="attr">pageTabs</span>: <span class="literal">false</span> <span class="comment">//是否开启页面选项卡功能。单页版不推荐开启</span></span><br><span class="line">    </span><br><span class="line">    ,<span class="attr">name</span>: <span class="string">&#x27;layuiAdmin Pro&#x27;</span></span><br><span class="line">    ,<span class="attr">tableName</span>: <span class="string">&#x27;layuiAdmin&#x27;</span> <span class="comment">//本地存储表名</span></span><br><span class="line">    ,<span class="attr">MOD_NAME</span>: <span class="string">&#x27;admin&#x27;</span> <span class="comment">//模块事件名</span></span><br><span class="line">    </span><br><span class="line">    ,<span class="attr">debug</span>: <span class="literal">true</span> <span class="comment">//是否开启调试模式。如开启，接口异常时会抛出异常 URL 等信息</span></span><br><span class="line">    </span><br><span class="line">    ,<span class="attr">interceptor</span>: <span class="literal">false</span> <span class="comment">//是否开启未登入拦截</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//自定义请求字段</span></span><br><span class="line">    ,<span class="attr">request</span>: &#123;</span><br><span class="line">      <span class="attr">tokenName</span>: <span class="string">&#x27;access_token&#x27;</span> <span class="comment">//自动携带 token 的字段名。可设置 false 不携带。</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//自定义响应字段</span></span><br><span class="line">    ,<span class="attr">response</span>: &#123;</span><br><span class="line">      <span class="attr">statusName</span>: <span class="string">&#x27;code&#x27;</span> <span class="comment">//数据状态的字段名称</span></span><br><span class="line">      ,<span class="attr">statusCode</span>: &#123;</span><br><span class="line">        <span class="attr">ok</span>: <span class="number">0</span> <span class="comment">//数据状态一切正常的状态码</span></span><br><span class="line">        ,<span class="attr">logout</span>: <span class="number">1001</span> <span class="comment">//登录状态失效的状态码</span></span><br><span class="line">      &#125;</span><br><span class="line">      ,<span class="attr">msgName</span>: <span class="string">&#x27;msg&#x27;</span> <span class="comment">//状态信息的字段名称</span></span><br><span class="line">      ,<span class="attr">dataName</span>: <span class="string">&#x27;data&#x27;</span> <span class="comment">//数据详情的字段名称</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//独立页面路由，可随意添加（无需写参数）</span></span><br><span class="line">    ,<span class="attr">indPage</span>: [</span><br><span class="line">      <span class="string">&#x27;/user/login&#x27;</span> <span class="comment">//登入页</span></span><br><span class="line">      ,<span class="string">&#x27;/user/reg&#x27;</span> <span class="comment">//注册页</span></span><br><span class="line">      ,<span class="string">&#x27;/user/forget&#x27;</span> <span class="comment">//找回密码</span></span><br><span class="line">      ,<span class="string">&#x27;/template/tips/test&#x27;</span> <span class="comment">//独立页的一个测试 demo</span></span><br><span class="line">    ]</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//扩展的第三方模块</span></span><br><span class="line">    ,<span class="attr">extend</span>: [</span><br><span class="line">      <span class="string">&#x27;echarts&#x27;</span>, <span class="comment">//echarts 核心包</span></span><br><span class="line">      <span class="string">&#x27;echartsTheme&#x27;</span> <span class="comment">//echarts 主题</span></span><br><span class="line">    ]</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//主题配置</span></span><br><span class="line">    ,<span class="attr">theme</span>: &#123;</span><br><span class="line">      <span class="comment">//配色方案，如果用户未设置主题，第一个将作为默认</span></span><br><span class="line">      <span class="attr">color</span>: [&#123;</span><br><span class="line">        <span class="attr">main</span>: <span class="string">&#x27;#20222A&#x27;</span> <span class="comment">//主题色</span></span><br><span class="line">        ,<span class="attr">selected</span>: <span class="string">&#x27;#009688&#x27;</span> <span class="comment">//选中色</span></span><br><span class="line">        ,<span class="attr">logo</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">//logo区域背景色</span></span><br><span class="line">        ,<span class="attr">header</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">//头部区域背景色</span></span><br><span class="line">        ,<span class="attr">alias</span>: <span class="string">&#x27;default&#x27;</span> <span class="comment">//默认别名</span></span><br><span class="line">      &#125;] <span class="comment">//为了减少篇幅，更多主题此处不做列举，可直接参考 config.js</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//初始的颜色索引，对应上面的配色方案数组索引</span></span><br><span class="line">      <span class="comment">//如果本地已经有主题色记录，则以本地记录为优先，除非清除 localStorage（步骤：F12呼出调试工具→Aplication→Local Storage→选中页面地址→layuiAdmin→再点上面的X）</span></span><br><span class="line">      <span class="comment">// 1.0 正式版开始新增</span></span><br><span class="line">      ,<span class="attr">initColorIndex</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="侧边菜单"><a href="#侧边菜单" class="headerlink" title="侧边菜单"></a><strong>侧边菜单</strong></h3><ul><li>在 start&#x2F;json&#x2F;menu.js 文件中，我们放置了默认的侧边菜单数据，你可以去随意改动它。</li><li>如果你需要动态加载菜单，你需要将 views&#x2F;layout.html 中的对应地址改成你的真实接口地址<br>侧边菜单最多可支持到三级。无论你采用静态的菜单还是动态的，菜单的数据格式都必须是一段合法的 JSON，且必须符合以下规范：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;code&quot;</span>: <span class="number">0</span> <span class="comment">//状态码，key 名可以通过 config.js 去重新配置</span></span><br><span class="line">  ,<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;&quot;</span> <span class="comment">//提示信息</span></span><br><span class="line">  ,<span class="string">&quot;data&quot;</span>: [&#123; <span class="comment">//菜单数据，key名可以通过 config.js 去重新配置</span></span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;component&quot;</span> <span class="comment">//一级菜单名称（与视图的文件夹名称和路由路径对应）</span></span><br><span class="line">    ,<span class="string">&quot;title&quot;</span>: <span class="string">&quot;组件&quot;</span> <span class="comment">//一级菜单标题</span></span><br><span class="line">    ,<span class="string">&quot;icon&quot;</span>: <span class="string">&quot;layui-icon-component&quot;</span> <span class="comment">//一级菜单图标样式</span></span><br><span class="line">    ,<span class="string">&quot;jump&quot;</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">//自定义一级菜单路由地址，默认按照 name 解析。一旦设置，将优先按照 jump 设定的路由跳转</span></span><br><span class="line">    ,<span class="string">&quot;spread&quot;</span>: <span class="literal">true</span> <span class="comment">//是否默认展子菜单（1.0.0-beta9 新增）</span></span><br><span class="line">    ,<span class="string">&quot;list&quot;</span>: [&#123; <span class="comment">//二级菜单</span></span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;grid&quot;</span> <span class="comment">//二级菜单名称（与视图的文件夹名称和路由路径对应）</span></span><br><span class="line">      ,<span class="string">&quot;title&quot;</span>: <span class="string">&quot;栅格&quot;</span> <span class="comment">//二级菜单标题</span></span><br><span class="line">      ,<span class="string">&quot;jump&quot;</span>: <span class="string">&#x27;&#x27;</span>  <span class="comment">//自定义二级菜单路由地址</span></span><br><span class="line">      ,<span class="string">&quot;spread&quot;</span>: <span class="literal">true</span> <span class="comment">//是否默认展子菜单（1.0.0-beta9 新增）</span></span><br><span class="line">      ,<span class="string">&quot;list&quot;</span>: [&#123; <span class="comment">//三级菜单</span></span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;list&quot;</span> <span class="comment">//三级菜单名（与视图中最终的文件名和路由对应），如：component/grid/list</span></span><br><span class="line">        ,<span class="string">&quot;title&quot;</span>: <span class="string">&quot;等比例列表排列&quot;</span> <span class="comment">//三级菜单标题</span></span><br><span class="line">      &#125;,&#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;mobile&quot;</span></span><br><span class="line">        ,<span class="string">&quot;title&quot;</span>: <span class="string">&quot;按移动端排列&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>TIPS：实际运用时，切勿出现上述中的注释，否则将不是合法的 JSON ，会出现解析错误。<br>需要注意的是以下几点：</p></blockquote><ol><li><p>当任意级菜单有子菜单，点击该菜单都只是收缩和展开操作，而并不会跳转，只有没有子菜单的菜单才被允许跳转。</p></li><li><p>菜单的路由地址默认是按照菜单层级的 name 来设定的。</p><p>我们假设一级菜单的 name 是：a，二级菜单的是：b，三级菜单的 name 是 c，那么：</p><ul><li>三级菜单最终的路由地址就是：<code>/a/b/c</code></li><li>如果二级菜单没有三级菜单，那么二级菜单就是最终路由，地址就是：<code>/a/b/</code></li><li>如果一级菜单没有二级菜单，那么一级菜单就是最终路由，地址就是：<code>/a/</code></li></ul></li><li><p>但如果你设置了 参数 jump，那么就会优先读取 jump 设定的路由地址，如：<code>&quot;jump&quot;: &quot;/user/set&quot;</code></p></li></ol><hr><h1 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h1><p>layuiAdmin 的路由是采用 <code>location.hash</code> 的机制，即路由地址是放在 <code>./#/</code> 后面，并通过 layui 自带的方法：<code>layui.router()</code> 来进行解析。每一个路由都对应一个真实存在的视图文件，且路由地址和视图文件的路径是一致的（相对 <code>views</code>目录）。因此，你不再需要通过配置服务端的路由去访问一个页面，也无需在 layuiAdmin 内部代码中去定义路由，而是直接通过 layuiAdmin 的前端路由去访问，即可匹配相应目录的视图，从而呈现出页面结果。</p><h3 id="路由规则"><a href="#路由规则" class="headerlink" title="路由规则"></a><strong>路由规则</strong></h3><blockquote><p>.&#x2F;#&#x2F;path1&#x2F;path2&#x2F;path3&#x2F;key1&#x3D;value1&#x2F;key2&#x3D;value2…</p></blockquote><p>一个实际的示例：</p><blockquote><p>.&#x2F;#&#x2F;user&#x2F;set<br>.&#x2F;#&#x2F;user&#x2F;set&#x2F;uid&#x3D;123&#x2F;type&#x3D;1#xxx（下面将以这个为例继续讲解）</p></blockquote><p>当你需要对路由结构进行解析时，你只需要通过 layui 内置的方法 layui.router() 即可完成。如上面的路由解析出来的结果是：</p><blockquote><p>{<br>path: [‘user’,’set’]<br>,search: {uid: 123, type: 1}<br>,href: ‘user&#x2F;set&#x2F;uid&#x3D;123&#x2F;type&#x3D;1’<br>,hash: ‘xxx’<br>}</p></blockquote><p>可以看到，不同的结构会自动归纳到相应的参数中，其中：</p><blockquote><ul><li>path：存储的是路由的目录结构</li><li>search：存储的是路由的参数部分</li><li>href：存储的是 layuiAdmin 的完整路由地址</li><li>hash：存储的是 layuiAdmin 自身的锚记，跟系统自带的 location.hash 有点类似</li></ul></blockquote><p>通过<code>layui.router()</code> 得到路由对象后，你就可以对页面进行个性化操作、异步参数传值等等。如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 JS 中获取路由参数</span></span><br><span class="line"><span class="keyword">var</span> router = layui.<span class="title function_">router</span>();</span><br><span class="line">admin.<span class="title function_">req</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">  ,<span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">uid</span>: router.<span class="property">search</span>.<span class="property">uid</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  在动态模板中获取路由参数 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/html&quot;</span> <span class="attr">template</span> <span class="attr">lay-url</span>=<span class="string">&quot;./xxx/?uid=&#123;&#123; layui.router().search.uid &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  …</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;!-- 或 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/html&quot;</span> <span class="attr">template</span> <span class="attr">lay-url</span>=<span class="string">&quot;./xxx/&quot;</span> <span class="attr">lay-data</span>=<span class="string">&quot;&#123;uid:&#x27;&#123;&#123; layui.router().search.uid &#125;&#125;&#x27;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  …</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="路由跳转"><a href="#路由跳转" class="headerlink" title="路由跳转"></a><strong>路由跳转</strong></h3><p>通过上文的路由规则，你已经大致清楚了 layuiAdmin 路由的基本原理和解析方法。那么如何完成路由的跳转呢？</p><ol><li>在视图文件的 HTML 代码中，通过对任意元素设定<code>lay-href=&quot;/user/set/uid=123/type=1&quot;</code>，好处是：任意元素都可以触发跳转。缺点是：只能在浏览器当前选项卡完成跳转（注意：不是 layuiAdmin 的选项卡）</li><li>直接对 a 标签设定 href，如： <code>&lt;a href=&quot;#/user/set&quot;&gt;text&lt;/a&gt;</code> 。好处是：你可以通过设定<code>target=&quot;_blank&quot;</code>来打开一个浏览器新选项卡。缺点是：只能设置 a 标签，且前面必须加 &#x2F;#&#x2F;</li><li>在 JS 代码中，还可通过 <code>location.hash = &#39;/user/set&#39;</code>; 来跳转。前面无需加 #，它会自动追加。</li></ol><h3 id="路由结尾"><a href="#路由结尾" class="headerlink" title="路由结尾"></a><strong>路由结尾</strong></h3><p>在路由结尾部分出现的 &#x2F; 与不出现，是两个完全不同的路由。比如下面这个：</p><ol><li>user&#x2F;set<br>读取的视图文件是：.views&#x2F;user&#x2F;set.html</li><li>user&#x2F;set&#x2F;<br>读取的视图文件是：.&#x2F;views&#x2F;user&#x2F;set&#x2F;index.html （TIPS：这里的 index.html 即是目录下的默认主视图，下文会有讲解）</li></ol><p>因此一定要注意结尾处的 &#x2F;，避免视图读取错误。</p><h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><p>这或许是你应用 layuiAdmin 时的主要焦点，在开发过程中，你的大部分精力都可能会聚焦在这里。它取代了服务端 MVC 架构中的 view 层，使得应用开发变得更具扩展性。因此如果你采用 layuiAdmin 的 SPA（单页应用）模式，请务必要抛弃服务端渲染视图的思想，让页面的控制权限重新回归到前端吧！</p><blockquote><p><strong>views</strong>目录存放的正是视图文件，你可以在该目录添加任意的新目录和新文件，通过对应的路由即可访问。</p></blockquote><p>注意：如果是单页面模式，视图文件通常是一段 HTML 碎片，而不能是一个完整的 html 代码结构。</p><h3 id="视图与路由的关系"><a href="#视图与路由的关系" class="headerlink" title="视图与路由的关系"></a><strong>视图与路由的关系</strong></h3><p>每一个视图文件，都对应一个路由。其中<code>index.html</code>是默认文件（你也可以通过 <code>config.js</code> 去重新定义）。视图文件的所在目录决定了路由的访问地址，如：</p><table><thead><tr><th>视图路径</th><th>对应的路由地址</th></tr></thead><tbody><tr><td>.&#x2F;views&#x2F;user&#x2F;index.html</td><td>&#x2F;user&#x2F;</td></tr><tr><td>.&#x2F;views&#x2F;user.html</td><td>&#x2F;user</td></tr><tr><td>.&#x2F;views&#x2F;user&#x2F;set&#x2F;index.html</td><td>&#x2F;user&#x2F;set&#x2F;</td></tr><tr><td>.&#x2F;views&#x2F;user&#x2F;set.html</td><td>&#x2F;user&#x2F;set</td></tr><tr><td>.&#x2F;views&#x2F;user&#x2F;set&#x2F;base.html</td><td>&#x2F;user&#x2F;set&#x2F;base</td></tr></tbody></table><p>通过上述的表格列举的对应关系，可以总结出：</p><ul><li>当视图文件是 index.html，那么路由地址就是它的上级目录（相对 views），以 <code>/</code> 结尾</li><li>当视图文件不是 index.html，那么路由地址就是它的上级目录+视图文件名，不以 <code>/</code> 结尾</li></ul><blockquote><p>值得注意的是：路由路径并非最多只能三级，它可以无限极。但对应的视图也必须存放在相应的层级目录下</p></blockquote><h3 id="视图中加载-JS-模块"><a href="#视图中加载-JS-模块" class="headerlink" title="视图中加载 JS 模块"></a><strong>视图中加载 JS 模块</strong></h3><p>在视图文件中，除了写 HTML，也可以写 JavaScript 代码。如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=“<span class="variable constant_">LAY</span>-demo-hello”&gt;<span class="title class_">Hello</span> layuiAdmin&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">layui.<span class="title function_">use</span>(<span class="string">&#x27;admin&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">var</span> $ = layui.<span class="property">jquery</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  admin.<span class="title function_">popup</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">content</span>: $(<span class="string">&#x27;#LAY-demo-hello&#x27;</span>).<span class="title function_">html</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>如果该视图对应的 JS 代码量太大，我们更推荐你在 <code>controller</code>目录下新增一个业务模块，并在视图中直接 <code>layui.use</code> 去加载该模块。下面以控制台主页 <code>index.html</code>为例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;html区域&lt;div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//加载 controller 目录下的对应模块</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">/*</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">  小贴士：</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">    这里 console 模块对应 的 console.js 并不会重复加载，</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">    然而该页面的视图可能会重新插入到容器，那如何保证脚本能重新控制视图呢？有两种方式：</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">      1): 借助 layui.factory 方法获取 console 模块的工厂（回调函数）给 layui.use</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">      2): 直接在 layui.use 方法的回调中书写业务代码，即:</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          layui.use(&#x27;console&#x27;, function()&#123; </span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">            //同 console.js 中的 layui.define 回调中的代码 </span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          &#125;);</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          </span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">  这里我们采用的是方式1。其它很多视图中采用的其实都是方式2，因为更简单些，也减少了一个请求数。</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">  </span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">*/</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">layui.<span class="title function_">use</span>(<span class="string">&#x27;console&#x27;</span>, layui.<span class="title function_">factory</span>(<span class="string">&#x27;console&#x27;</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>当视图被渲染后，layui.factory 返回的函数也会被执行，从而保证在不重复加载 JS 模块文件的前提下，保证脚本能重复执行。</p><hr><h1 id="动态模板"><a href="#动态模板" class="headerlink" title="动态模板"></a><strong>动态模板</strong></h1><p>layuiAdmin 的视图是一个“动静结合”的载体，除了常规的静态模板，你当然还可以在视图中存放动态模板，因此它可谓是焦点中的焦点。</p><h3 id="定义模板"><a href="#定义模板" class="headerlink" title="定义模板"></a><strong>定义模板</strong></h3><p>在视图文件中，通过下述规则定义模板：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template&gt;</span><br><span class="line">  &lt;!-- 动态模板碎片 --&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>下面是一个简单的例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template&gt;</span><br><span class="line">  当前 layuiAdmin 的版本是：&#123;&#123; layui.<span class="property">admin</span>.<span class="property">v</span> &#125;&#125;</span><br><span class="line">  路由地址：&#123;&#123; layui.<span class="title function_">router</span>().<span class="property">href</span> &#125;&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在不对动态模板设定数据接口地址的情况下，它能读取到全局对象。但更多时候，一个动态模板应该是对应一个接口地址，如下所示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template lay-url=<span class="string">&quot;接口地址&quot;</span>&gt;</span><br><span class="line">    我叫：&#123;&#123; d.<span class="property">data</span>.<span class="property">username</span> &#125;&#125;</span><br><span class="line">    &#123;&#123;# <span class="keyword">if</span>(d.<span class="property">data</span>.<span class="property">sex</span> === <span class="string">&#x27;男&#x27;</span>)&#123; &#125;&#125;</span><br><span class="line">        公的</span><br><span class="line">    &#123;&#123;# &#125; <span class="keyword">else</span> &#123; &#125;&#125;</span><br><span class="line">        母的</span><br><span class="line">    &#123;&#123;# &#125; &#125;&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>模板中的 <code>d</code> 对应的是你接口返回的 json 转化后的一维对象，如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;code&quot;</span>: <span class="number">0</span></span><br><span class="line">  ,<span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;贤心&quot;</span></span><br><span class="line">    ,<span class="string">&quot;sex&quot;</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么，上述动态模板最终输出的结果就是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我叫：贤心</span><br><span class="line">公的</span><br></pre></td></tr></table></figure><h3 id="模板基础属性"><a href="#模板基础属性" class="headerlink" title="模板基础属性"></a><strong>模板基础属性</strong></h3><p>动态模板支持以下基础属性</p><ul><li>lay-url<br>用于绑定模板的数据接口地址，支持动态模板解析，如：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template lay-url=<span class="string">&quot;https://api.xxx.com?id=&#123;&#123; layui.router().search.id &#125;&#125;&quot;</span>&gt;</span><br><span class="line">  &lt;!-- 动态模板碎片 --&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>lay-type<br>用于设定模板的接口请求类型（默认：get），如：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template lay-url=<span class="string">&quot;接口地址&quot;</span> lay-type=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">  &lt;!-- 动态模板碎片 --&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>lay-data<br>用于定义接口请求的参数，其值是一个 JavaScript object 对象，同样支持动态模板解析，如：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template lay-url=<span class="string">&quot;接口地址&quot;</span> lay-data=<span class="string">&quot;&#123;id: &#x27;&#123;&#123; layui.router().search.id &#125;&#125;&#x27;, type: 1&#125;&quot;</span>&gt;</span><br><span class="line">  &lt;!-- 动态模板碎片 --&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>lay-headers<br>用户定义接口请求的 Request Headers 参数，用法与 lay-data 的完全类似，支持动态模板解析。</li><li>lay-done<br>接口请求完毕并完成视图渲染的回调脚本，里面支持写任意的 JavaScript 语句。事实上它是一个封闭的函数作用域，通过给 Function 实例返回的函数传递一个参数 d，用于得到接口返回的数据：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template lay-url=<span class="string">&quot;接口地址&quot;</span> lay-done=<span class="string">&quot;console.log(d);&quot;</span>&gt;</span><br><span class="line">  &lt;!-- 动态模板碎片 --&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>很多时候，你在动态模板中可能会放入一些类似于 layui 的 form 元素，而有些控件需要执行 form.render() 才会显示，这时，你可以对 lay-done 赋值一个全局函数，如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template lay-url=<span class="string">&quot;接口地址&quot;</span> lay-done=<span class="string">&quot;layui.data.done(d);&quot;</span>&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-form&quot;</span> <span class="attr">lay-filter</span>=<span class="string">&quot;LAY-filter-demo-form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">title</span>=<span class="string">&quot;复选框&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;!--  注意：别看眼花了，下面可不是动态模板，而是 <span class="variable constant_">JS</span> 脚本区域 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">layui.<span class="property">data</span>.<span class="property">done</span> = <span class="keyword">function</span>(<span class="params">d</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  layui.<span class="title function_">use</span>([<span class="string">&#x27;form&#x27;</span>], <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> form = layui.<span class="property">form</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     form.<span class="title function_">render</span>(<span class="literal">null</span>, <span class="string">&#x27;LAY-filter-demo-form&#x27;</span>); <span class="comment">//渲染该模板下的动态表单</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>TIPS：</p><blockquote><p>如果模板渲染完毕需要处理过多的交互，我们强烈推荐你采用上述的方式定义一个全局函数赋值给 lay-done，会极大地减少维护成本。<br>无需担心该全局函数的冲突问题，该函数是一次性的。其它页面即便声明了一个同样的函数，也只是用于新的视图，丝毫不会对之前的视图造成任何影响。<br>layui.data.done 中的 done 可以随意命名，但需与 lay-done 的赋值对应上。</p></blockquote><p>模板语法</p><blockquote><p>动态模板基于 layui 的 laytpl 模块，详细语法可见：<br><a href="http://www.layui.com/doc/modules/laytpl.html#syntax">http://www.layui.com/doc/modules/laytpl.html#syntax</a></p></blockquote><hr><h1 id="登录与接口鉴权"><a href="#登录与接口鉴权" class="headerlink" title="登录与接口鉴权"></a><strong>登录与接口鉴权</strong></h1><p>由于 layuiAdmin 接管了视图层，所以不必避免可能会与服务端分开部署，这时你有必要了解一下 layuiAdmin 默认提供的：从 登录 到 接口鉴权，再到 注销 的整个流程。</p><h3 id="登录拦截器"><a href="#登录拦截器" class="headerlink" title="登录拦截器"></a><strong>登录拦截器</strong></h3><p>进入登入页面登入成功后，会在 localStorage 的本地表中写入一个字段。如： access_token （名称可以在 config.js 自定义）。拦截器判断没有 access_token 时，则会跳转到登入页。尽管可以通过伪造一个假的 access_token 绕过视图层的拦截，但在请求接口时，会自动带上 access_token，服务端应再次做一层校验。</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a><strong>流程</strong></h3><ol><li>打开 <code>config.js</code> ，将 <code>interceptor</code>参数设置为 <code>true</code>（该参数为 1.0.0-beta6 开始新增）。那么，当其未检查到 <code>access_token</code>值时，会强制跳转到登录页面，以获取 access_token。</li><li>打开登录对应的视图文件 <code>views/user/login.html</code>，在代码最下面，你将看到一段已经写好的代码，你需要的是将接口地址改为服务端的真实接口，并返回 <code>access_token</code>值。</li><li>layuiAdmin 会将服务端返回的 <code>access_token</code>值进行本地存储，这时你会发现 layuiAdmin 不再强制跳转到登录页面。并在后面每次请求服务端接口时，都会自动在参数和 <code>Request Headers</code> 中带上 <code>access_token</code>，以便服务端进行鉴权。</li><li>若鉴权成功，顺利返回数据；若鉴权失败，服务端的 <code>code</code>应返回 <code>1001</code>（可在 config.js 自定义） ， layuiAdmin 将会自动清空本地无效 token 并跳转到登入页。</li><li>退出登录：重新打开 <code>controller/common.js</code>，搜索 <code>logout</code>，配上注销接口即可。</li><li></li></ol><blockquote><p>如果是在其它场景请求的接口，如：<code>table.render()</code>，那么你需要获取本地存储的 token 赋值给接口参数，如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置全局 table 实例的 token（这样一来，所有 table 实例均会有效）</span></span><br><span class="line">table.<span class="title function_">set</span>(&#123;</span><br><span class="line">  <span class="attr">headers</span>: &#123; <span class="comment">//通过 request 头传递</span></span><br><span class="line">    <span class="attr">access_token</span>: layui.<span class="title function_">data</span>(<span class="string">&#x27;layuiAdmin&#x27;</span>).<span class="property">access_token</span></span><br><span class="line">  &#125;</span><br><span class="line">  ,<span class="attr">where</span>: &#123; <span class="comment">//通过参数传递</span></span><br><span class="line">    <span class="attr">access_token</span>: layui.<span class="title function_">data</span>(<span class="string">&#x27;layuiAdmin&#x27;</span>).<span class="property">access_token</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment">//设置单个 table 实例的 token</span></span><br><span class="line">table.<span class="title function_">render</span>(&#123;</span><br><span class="line">  <span class="attr">elem</span>: <span class="string">&#x27;#xxxx&#x27;</span></span><br><span class="line">  ,<span class="attr">url</span>: <span class="string">&#x27;url&#x27;</span></span><br><span class="line">  ,<span class="attr">where</span>: &#123;</span><br><span class="line">    <span class="attr">access_token</span>: layui.<span class="title function_">data</span>(<span class="string">&#x27;layuiAdmin&#x27;</span>).<span class="property">access_token</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//,headers: &#123;&#125;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>事实上，layuiAdmin 的所有 Ajax 请求都是采用 <code>admin.req(options)</code>，它会自动传递 <code>access_token</code>，因此推荐你在 JS 执行 Ajax 请求时直接使用它。其中参数 *options *和 <code>$.ajax(options)</code> 的参数完全一样。</p><h3 id="接口鉴权"><a href="#接口鉴权" class="headerlink" title="接口鉴权"></a><strong>接口鉴权</strong></h3><p>我们推荐服务端遵循 <strong>JWT</strong>（JSON Web Token） 标准进行鉴权。对 JWT 不甚了解的同学，可以去搜索一些相关资料，会极大地增加应用的可扩展性。当然，你也可以直接采用传统的 cookie &#x2F; session 机制。</p><hr><h1 id="基础方法"><a href="#基础方法" class="headerlink" title="基础方法"></a><strong>基础方法</strong></h1><ul><li><strong>config 模块</strong></li></ul><blockquote><p>你可以在任何地方通过 layui.setter 得到 config.js 中的配置信息</p></blockquote><ul><li><strong>admin 模块</strong></li></ul><blockquote><p>var admin &#x3D; layui.admin;</p></blockquote><ul><li><strong>admin.req(options)</strong><br>Ajax 请求，用法同 $.ajax(options)，只是该方法会进行错误处理和 token 的自动传递</li><li>admin.screen()<br>获取屏幕类型，根据当前屏幕大小，返回 0 - 3 的值<br>0: 低于768px的屏幕<br>1：768px到992px之间的屏幕<br>2：992px到1200px之间的屏幕<br>3：高于1200px的屏幕</li><li><strong>admin.exit()</strong><br>清除本地 token，并跳转到登入页</li><li><strong>admin.sideFlexible(status)</strong><br>侧边伸缩。status 为 null：收缩；status为 “spread”：展开</li><li><strong>admin.on(eventName, callback)</strong><br>事件监听，下文会有讲解</li><li><strong>admin.popup(options)</strong><br>弹出一个 layuiAdmin 主题风格的 layer 层，参数 options 跟 layer.open(options) 完全相同</li><li><strong>admin.popupRight(options)</strong><br>在屏幕右侧呼出一个面板层。options 同上。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">admin.<span class="title function_">popupRight</span>(&#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="string">&#x27;LAY-popup-right-new1&#x27;</span> <span class="comment">//定义唯一ID，防止重复弹出</span></span><br><span class="line">  ,<span class="attr">success</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//将 views 目录下的某视图文件内容渲染给该面板</span></span><br><span class="line">    layui.<span class="title function_">view</span>(<span class="variable language_">this</span>.<span class="property">id</span>).<span class="title function_">render</span>(<span class="string">&#x27;视图文件所在路径&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>admin.resize(callback)</strong><br>窗口 resize 事件处理，我们推荐你使用该方法取代 jQuery 的 resize 事件，以避免多页面标签下可能存在的冲突。</li><li><strong>admin.fullScreen()</strong><br>全屏</li><li><strong>admin.exitScreen()</strong><br>退出全屏</li><li><strong>admin.events</strong><ul><li><strong>admin.events.refresh()</strong><br>刷新当前右侧区域</li><li><strong>admin.events.closeThisTabs()</strong><br>关闭当前标签页</li><li><strong>admin.events.closeOtherTabs()</strong><br>关闭其它标签页</li><li><strong>admin.events.closeAllTabs()</strong><br>关闭全部标签页</li></ul></li><li><strong>view 模块</strong></li></ul><blockquote><p>var view &#x3D; layui.view;</p></blockquote><ul><li><strong>view(id)</strong><br>获取指定容器，并返回一些视图渲染的方法，如：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//渲染视图，viewPath 即为视图路径</span></span><br><span class="line"><span class="title function_">view</span>(<span class="string">&#x27;id&#x27;</span>).<span class="title function_">render</span>(viewPath).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//视图文件请求完毕，视图内容渲染前的回调</span></span><br><span class="line">&#125;).<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="comment">//视图文件请求完毕和内容渲染完毕的回调</span></span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line"><span class="comment">//直接向容器插入 html，tpl 为 模板字符；data 是传入的数据。该方法会自动完成动态模板解析</span></span><br><span class="line"><span class="title function_">view</span>(<span class="string">&#x27;id&#x27;</span>).<span class="title function_">send</span>(tpl, data); </span><br></pre></td></tr></table></figure><p>另外，<code>render</code>方法支持动态传参，以用于视图内容接受。如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">admin.<span class="title function_">popup</span>(&#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="string">&#x27;LAY-popup-test1&#x27;</span></span><br><span class="line">  ,<span class="attr">success</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">view</span>(<span class="variable language_">this</span>.<span class="property">id</span>).<span class="title function_">render</span>(<span class="string">&#x27;视图文件所在路径&#x27;</span>, &#123;</span><br><span class="line">       <span class="attr">id</span>: <span class="number">123</span> <span class="comment">//这里的 id 值你可以在一些事件中动态获取（如 table 模块的编辑）</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--那么，在视图文件中，你可以在动态模板中通过 &#123;&#123; [d.params.xxx](http://d.params.xxx/) &#125;&#125; 得到传入的参数，如：--&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template lay-url=<span class="string">&quot;http://api.com?id=&#123;&#123; d.params.id &#125;&#125;&quot;</span>&gt;</span><br><span class="line">  配置了接口的动态模板，且接口动态获取了 render 传入的参数：&#123;&#123; d.<span class="property">params</span>.<span class="property">id</span> &#125;&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/html&quot;</span> <span class="attr">template</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">  也可以直接获取：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; <span class="name">d.params.id</span> &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>而如果是在 JS 语句中去获取模板传递过来的变量，可以借助动态模板的 lay-done 属性去实现，如:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/html&quot;</span> template lay-done=<span class="string">&quot;layui.data.sendParams(d.params)&quot;</span>&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后在 JS 语句中通过执行动态模板 lay-done 中对应的方法得到对应的参数值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">//定义一个 lay-done 对应的全局方法，以供动态模板执行</span></span><br><span class="line">layui.<span class="property">data</span>.<span class="property">sendParams</span> = <span class="keyword">function</span>(<span class="params">params</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(params.<span class="property">id</span>) <span class="comment">//得到传递过来的 id 参数（或其他参数）值</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//通过得到的参数值，做一些你想做的事</span></span><br><span class="line">  <span class="comment">//…</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//若需用到 layui 组件，layui.use 需写在该全局方法里面，如：</span></span><br><span class="line">  layui.<span class="title function_">use</span>([<span class="string">&#x27;table&#x27;</span>], <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> table = layui.<span class="property">table</span>;</span><br><span class="line">    table.<span class="title function_">render</span>(&#123;</span><br><span class="line">      <span class="attr">elem</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">      ,<span class="attr">url</span>: <span class="string">&#x27;url?id=&#x27;</span>+ params.<span class="property">id</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意：上述实现需保证 layuiAdmin 为 1.2.0+&#96;</p></blockquote><p>总之，驾驭好<code>view().render().done(callback)</code> 对您的项目开发至关重要。</p><hr><h1 id="ID唯一性"><a href="#ID唯一性" class="headerlink" title="ID唯一性"></a><strong>ID唯一性</strong></h1><p>如果你开启了标签页功能，请务必注意 ID 的冲突，尤其是在你自己绑定事件的情况。ID 的命令可以遵循以下规则来规避冲突：</p><blockquote><p>LAY-路由-任意名</p></blockquote><p>以消息中心页面为例，假设它的路由为：<code>/app/message/</code>，那么 ID 应该命名为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button class=&quot;layui-btn&quot; id=&quot;LAY-app-message-del&quot;&gt;删除&lt;/button&gt;</span><br></pre></td></tr></table></figure><hr><h1 id="实用组件"><a href="#实用组件" class="headerlink" title="实用组件"></a><strong>实用组件</strong></h1><h3 id="Hover-提示层"><a href="#Hover-提示层" class="headerlink" title="Hover 提示层"></a><strong>Hover 提示层</strong></h3><p>通过对元素设置 lay-tips&#x3D;”提示内容” 来开启一个 hover 提示，如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;i <span class="keyword">class</span>=<span class="string">&quot;layui-icon layui-icon-tips&quot;</span> lay-tips=<span class="string">&quot;要支持的噢&quot;</span> lay-offset=<span class="string">&quot;5&quot;</span>&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><p>其中<code>lay-offset</code>用于定于水平偏移距离（单位px），以调整箭头让其对准元素</p><hr><h1 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a><strong>事件监听</strong></h1><ul><li><strong>hash</strong><br>监听路由地址改变</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下述中的 xxx 可随意定义，不可与已经定义的 hash 事件同名，否则会覆盖上一事件</span></span><br><span class="line">admin.<span class="title function_">on</span>(<span class="string">&#x27;hash(xxx)&#x27;</span>, <span class="keyword">function</span>(<span class="params">router</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(router); <span class="comment">//得到路由信息</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>side</strong><br>监听侧边伸缩</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下述中的 xxx 可随意定义，不可与已经定义的 side 事件同名，否则会覆盖上一事件</span></span><br><span class="line">admin.<span class="title function_">on</span>(<span class="string">&#x27;side(xxx)&#x27;</span>, <span class="keyword">function</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">status</span>); <span class="comment">//得到伸缩状态：spread 为展开状态，其它值为收缩状态</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h1 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a><strong>兼容性</strong></h1><p>layuiAdmin 使用到了 layui 的栅格系统，而栅格则是基于浏览器的媒体查询。ie8、9不支持。<br>所以要在宿主页面（如 start&#x2F;index.html ）加上下面这段保证兼容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 让<span class="title class_">IE8</span>/<span class="number">9</span>支持媒体查询，从而兼容栅格 --&gt;</span><br><span class="line">&lt;!--[<span class="keyword">if</span> lt <span class="variable constant_">IE</span> <span class="number">9</span>]&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/html5shiv/r29/html5.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/respond.js/1.4.2/respond.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;![endif]--&gt;  </span><br></pre></td></tr></table></figure><hr><h1 id="缓存问题"><a href="#缓存问题" class="headerlink" title="缓存问题"></a><strong>缓存问题</strong></h1><p>由于单页面版本的视图文件和静态资源模块都是动态加载的，所以可能存在浏览器的本地缓存问题，事实上我们也考虑到这个，因此，为了避免改动后的文件未及时生效，你只需在入口页面（默认为<code>start/index.html</code>）中，找到 <code>layui.config</code> ，修改其 <code>version</code>的值即可。</p><p>我们推荐你分场景来更新缓存：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 场景一：如果项目是在本地开发。你可以设置 version 为动态毫秒数，如：</span><br><span class="line"><span class="attr">version</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() <span class="comment">//这样你每次刷新页面，都会更新一次缓存</span></span><br><span class="line">* 场景二：如果项目是在线上运行。建议你手工更新 version，如：</span><br><span class="line"><span class="attr">version</span>: <span class="string">&#x27;1.0.0&#x27;</span> <span class="comment">//每次发布项目时，跟着改动下该属性值即可更新静态资源的缓存</span></span><br></pre></td></tr></table></figure><hr><h1 id="升级事项"><a href="#升级事项" class="headerlink" title="升级事项"></a><strong>升级事项</strong></h1><p>从官网更新资源包后，除了 src 和 dist 目录需要注意一下，其它目录和文件均可覆盖，下面以 src 为例（dist 由于是 src 构建后生成的目录，所以本质是和 src 一样的）<br><strong>src 目录下可以直接覆盖的有：</strong></p><blockquote><ul><li>src&#x2F;lib&#x2F;</li><li>src&#x2F;style&#x2F;</li><li>src&#x2F;index.js</li></ul></blockquote><p><strong>需要灵活调配的有：</strong></p><blockquote><ul><li>src&#x2F;controller&#x2F;</li><li>src&#x2F;views&#x2F;</li><li>src&#x2F;config.js</li></ul></blockquote><p>如果没有改动默认配置，事实上 config.js 也可以覆盖升级<br>开发过程中，建议同时运行两个 layuiAdmin 。一个是已经实际运用的，一个是 layuiAdmin 本身的 Demo。以便从 Demo 中获取参考和提取示例。</p><hr><h1 id="源码构建"><a href="#源码构建" class="headerlink" title="源码构建"></a><strong>源码构建</strong></h1><blockquote><p>当你在 src 目录完成开发后，你可通过 gulp 对 src 源码进行自动化构建，以生成用于线上环境的 dist 目录。并在入口页面中的 layui.config 的 base 参数指向 dist。</p></blockquote><p>在资源包中根目录下看到的 gulpfile.js 是 layuiAdmin 写好的任务脚本，package.json 是任务配置文件，你只需按照以下步骤：</p><ol><li>step1：确保你的电脑已经安装好了 Node.js，如果未安装，可去官网下载安装</li><li>step2: 命令行安装 gulp：npm install gulp -g</li><li>step3：切换到 layuiAdmin 项目根目录（即 gulpfile.js 所在目录），命令行安装任务所依赖的包：npm install</li></ol><p><strong>安装完成后，后续只需直接执行命令：gulp 即可完成 src 到 dist 目录的构建</strong></p><p><a href="https://fengfeng.lanzoux.com/iYTvgkmgf5i">下载LayuiAdmin</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何检索文献</title>
      <link href="/peaky/2021/01/20/23128346.html"/>
      <url>/peaky/2021/01/20/23128346.html</url>
      
        <content type="html"><![CDATA[<h4 id="如何检索文献"><a href="#如何检索文献" class="headerlink" title="如何检索文献"></a><strong>如何检索文献</strong></h4><p>1.<strong>SCI-hub</strong></p><p><a href="https://www.sci-hub.ren/">点此进入</a></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120150538642.png" alt="image-20210120150538642"></p><span id="more"></span><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120150836403.png" alt="image-20210120150836403"></p><p>2、<strong>Web of Science</strong></p><p><a href="https://wvpn.upc.edu.cn/http/77726476706e69737468656265737421f1e7518f69276d52710e82a297422f30a0c6fa320a29ae/UA_GeneralSearch_input.do?product=UA&search_mode=GeneralSearch&SID=6CMGhnJBf81CB7CzxgE&preferencesSaved=">点此进入</a>需要校内IP或者挂VPN</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120154756525.png" alt="image-20210120154756525"></p><p>3、<strong>PubMed</strong></p><p><a href="https://wvpn.upc.edu.cn/https/77726476706e69737468656265737421e0e243912234265e7d0a80e296592e7bb7d62ae2c192eb/27597849/">点此进入</a></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120155023837.png" alt="image-20210120155023837"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120155133949.png" alt="image-20210120155133949"></p><p>4、谷歌学术</p><p><a href="https://g.luciaz.me/">谷歌搜索国内镜像</a>密码是心灵之约，浙大的镜像</p><p><a href="https://ac.scmor.com/">谷歌学术镜像导航</a>南京理工大学哪个教学楼能通宵？一工</p><p><a href="https://ac.scmor.com/"><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120160211898.png" alt="image-20210120160211898"></a></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120155856248.png" alt="image-20210120155856248"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120155926365.png" alt="image-20210120155926365"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210120160120661.png" alt="image-20210120160120661"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用GIT上传本地代码到github</title>
      <link href="/peaky/2020/12/12/8cc9987.html"/>
      <url>/peaky/2020/12/12/8cc9987.html</url>
      
        <content type="html"><![CDATA[<h2 id="上传本地代码到Github利用Git"><a href="#上传本地代码到Github利用Git" class="headerlink" title="上传本地代码到Github利用Git"></a>上传本地代码到Github利用Git</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201213211648115.png" alt="image-20201213211648115"></p><span id="more"></span><p>建好仓库后保存一下这个 ssh</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201213212143747.png" alt="image-20201213212143747"></p><h3 id="你的代码文件"><a href="#你的代码文件" class="headerlink" title="你的代码文件"></a>你的代码文件</h3><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201213212531366.png" alt="image-20201213212531366"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init//初始化</span><br><span class="line">git add .//添加所有文件进仓库</span><br><span class="line">git commit -m &quot;你要取的名字&quot;//取一个名字</span><br><span class="line">git remote add origin git@github.com:***/***.git  //第一步中复制的ssh值</span><br><span class="line">git pull --rebase origin master  //同步一下内容</span><br><span class="line">git push -u origin master  //上传内容</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//如果提示：</span><br><span class="line"></span><br><span class="line">fatal: remote origin already exists.</span><br><span class="line"></span><br><span class="line">//先删除这个链接用这条命令:</span><br><span class="line"></span><br><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure><p>上传成功</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201213213158306.png" alt="image-20201213213158306"></p><p>去github下刷新一下看看吧！</p>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown基本语法</title>
      <link href="/peaky/2020/12/02/4a098468.html"/>
      <url>/peaky/2020/12/02/4a098468.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>在想要设置为标题的文字前面加 # 来表示<br>一个 # 是一级标题，二个 # 是二级标题，以此类推。支持六级标题。</p><p>示例</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 这是一级标题</span></span><br><span class="line"><span class="section">## 这是二级标题</span></span><br><span class="line"><span class="section">### 这是三级标题</span></span><br><span class="line"><span class="section">#### 这是四级标题</span></span><br><span class="line"><span class="section">##### 这是五级标题</span></span><br><span class="line"><span class="section">###### 这是六级标题</span></span><br></pre></td></tr></table></figure><span id="more"></span><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201202163240019.png" alt="image-20201202163240019"></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><ul><li><h5 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h5></li></ul><p>要加粗的文字左右分别用两个*号包起来</p><ul><li><h5 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h5></li></ul><p>要倾斜的文字左右分别用一个*号包起来</p><ul><li><h5 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h5></li></ul><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><ul><li><h5 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h5></li></ul><p>要加删除线的文字左右分别用两个~~号包起来</p><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这是加粗的文字**</span></span><br><span class="line"><span class="emphasis">*这是倾斜的文字*</span>`</span><br><span class="line"><span class="strong">**<span class="emphasis">*这是斜体加粗的文字<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">~~这是加删除线的文字~~</span></span></span></span></span><br></pre></td></tr></table></figure><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201202163220625.png" alt="image-20201202163220625"></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…</p><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201202163201363.png" alt="image-20201202163201363"></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>三个或者三个以上的 - 或者 * 都可以。</p><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">---</span></span><br><span class="line">----</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="strong">****</span>*</span></span></span><br></pre></td></tr></table></figure><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201202163415975.png%22%E8%BF%99%E6%98%AF%E8%A7%A3%E9%87%8A%22" alt="image-20201202163415975"></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片alt</span>](<span class="link">图片地址 &#x27;&#x27;图片title&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201202163711489.png" alt="image-20201202163711489"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">超链接名</span>](<span class="link">超链接地址 &quot;超链接title&quot;</span>)</span><br><span class="line">title可加可不加</span><br><span class="line">[<span class="string">简书</span>](<span class="link">http://jianshu.com</span>)</span><br><span class="line">[<span class="string">百度</span>](<span class="link">http://baidu.com</span>)</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>用 - + * 任何一种都可以</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 列表内容</span><br><span class="line"><span class="bullet">+</span> 列表内容</span><br><span class="line"><span class="bullet">*</span> 列表内容</span><br><span class="line"></span><br><span class="line">注意：- + <span class="emphasis">* 跟内容之间都要有一个空格</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>列表内容</li><li>列表内容</li><li>列表内容</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>语法：<br>数字加点</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 列表内容</span><br><span class="line"><span class="bullet">2.</span> 列表内容</span><br><span class="line"><span class="bullet">3.</span> 列表内容</span><br><span class="line"></span><br><span class="line">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line"><span class="bullet">-</span> 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 | 包起来。此处省略</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名|技能|排行</span><br><span class="line">--|:--:|--:</span><br><span class="line">刘备|哭|大哥</span><br><span class="line">关羽|打|二哥</span><br><span class="line">张飞|骂|三弟</span><br></pre></td></tr></table></figure><p>效果如下：</p><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>语法：<br>单行代码：代码之间分别用一个反引号包起来     ~钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`代码内容`</span></span><br></pre></td></tr></table></figure><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```flow</span></span><br><span class="line"><span class="code">st=&gt;start: 开始//开始符号</span></span><br><span class="line"><span class="code">op=&gt;operation: My Operation//操作</span></span><br><span class="line"><span class="code">cond=&gt;condition: Yes or No?//判断</span></span><br><span class="line"><span class="code">e=&gt;end//结束</span></span><br><span class="line"><span class="code">st-&gt;op-&gt;cond</span></span><br><span class="line"><span class="code">cond(yes)-&gt;e</span></span><br><span class="line"><span class="code">cond(no)-&gt;op</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;e</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MarkDown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>入门深度学习</title>
      <link href="/peaky/2020/10/29/4eec164c.html"/>
      <url>/peaky/2020/10/29/4eec164c.html</url>
      
        <content type="html"><![CDATA[<h2 id="感知器"><a href="#感知器" class="headerlink" title="感知器"></a>感知器</h2><p>感知机是二分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别（分别取+1和-1），属于判别模型。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/clip_image001.jpg" alt="img"></p><p>​                                                                                                图1 模型</p><span id="more"></span><p>如图1所示,假设输入空间（特征向量）是<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/clip_image002.jpg" alt="img"></p><p>，输出空间为f(x)∈{-1，+1},输入x∈X表示实例的特征向量，对应于输入空间的点，输出表示实例的类别，则由输入空间到输出空间的表达形式为：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/clip_image003.jpg" alt="img"></p><p>其中w，b称为模型的参数，<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/clip_image002.jpg" alt="img"></p><p>称为权值，b称为偏置，w*x表示为w，x的内积，其中</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/clip_image004.jpg" alt="img"></p><p>如果我们将sign(x)称之为激活函数,sign(x)将大于0的分为1，小于0的分为-1。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/clip_image005.jpg" alt="img"></p><pre><code>                                                                                 图2 直线分隔超平面</code></pre><p>如图2所示，其中w为法向量，b为截距，此直线用于分离超平面。</p><p>问题在于确定w和b，也就是在学习参数w与b，确定了w与b，图上的直线（高维空间下为超平面）也就确定了，那么以后来一个数据点，我用训练好的模型进行预测判断，如果大于0就分类到+1，如果小于0就分类到-1。</p><p>解决这个问题首先要找到损失函数，然后转化为最优化问题，用梯度下降等方法进行更新，最终得到我们模型的参数w，b。</p><h2 id="线性单元和梯度下降"><a href="#线性单元和梯度下降" class="headerlink" title="线性单元和梯度下降"></a>线性单元和梯度下降</h2><p>感知器有一个问题，当面对的数据集不是线性可分的时候，『感知器规则』可能无法收敛，这意味着我们永远也无法完成一个感知器的训练。</p><p>为了解决这个问题，我们使用一个可导的线性函数来替代感知器的阶跃函数，这种感知器就叫做线性单元。线性单元在面对线性不可分的数据集时，会收敛到一个最佳的近似上。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/clip_image001.png" alt="计算机生成了可选文字: Error ContinuoUS outPUt Nett LinearRegression"></p><p>设置线性单元的激活函数为 f(x) &#x3D; x,这样替换了激活函数之后，线性单元将返回一个实数值而不是0,1分类。因此线性单元用来解决回归问题而不是分类问题。</p><p>我们可以用这样的一个特征向量来表示他 x&#x3D; (5, IT, 百度, T6)。</p><p>既然输入变成了一个具备四个特征的向量，相对应的，仅仅一个参数就不够用了，我们应该使用4个参数w1.w2.w3.w4，每个特征对应一个。这样，我们的模型就变成</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/clip_image002.png" alt="img"></p><p>我们还可以把上式写成向量的形式</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029164315133.png" alt="image-20201029164315133"></p><p> 长成这种样子模型就叫做<strong>线性模型</strong></p><h3 id="监督学习和无监督学习"><a href="#监督学习和无监督学习" class="headerlink" title="监督学习和无监督学习"></a>监督学习和无监督学习</h3><p><strong>监督学习</strong>，它是说为了训练一个模型，我们要提供这样一堆训练样本：每个训练样本既包括输入特征，也包括对应的输出(输出也叫做<strong>标记，label</strong>)，用这样的样本去训练模型，让模型既看到我们提出的每个问题(输入特征)，也看到对应问题的答案(标记)。当模型看到足够多的样本之后，它就能总结出其中的一些规律。然后，就可以预测那些它没看过的输入所对应的答案了。</p><p><strong>无监督学习</strong>，这种方法的训练样本中只有x而没有y。模型可以总结出特征的一些规律，但是无法知道其对应的答案。</p><p>现在，让我们只考虑<strong>监督学习</strong></p><p>我们当然希望模型计算出来的和真实值越接近越好。</p><p>我们可以用差的平方的1&#x2F;2来表示它们的接近程度<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029165018288.png" alt="image-20201029165018288"></p><p>我们把这个叫做<strong>单个样本</strong>的<strong>误差</strong>。至于为什么前面要乘1&#x2F;2，是为了后面计算方便。</p><p>训练数据中会有很多样本，比如N个，我们可以用训练数据中<strong>所有样本</strong>的误差的<strong>和</strong>，来表示模型的误差，也就是</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029165110285.png" alt="image-20201029165110285"></p><p>我们还可以把上面的式子写成和式的形式。使用和式，不光书写起来简单，逼格也跟着暴涨，一举两得。所以一定要写成下面这样</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029165158119.png" alt="image-20201029165158119"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029165339763.png" alt="image-20201029165339763"></p><p>其中<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029165206876.png" alt="image-20201029165206876"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029165415019.png" alt="image-20201029165415019"></p><h3 id="梯度下降优化算法"><a href="#梯度下降优化算法" class="headerlink" title="梯度下降优化算法"></a><a href="https://www.zybuluo.com/hanbingtao/note/448086">梯度下降优化算法</a></h3><h2 id="卷积神经网络"><a href="#卷积神经网络" class="headerlink" title="卷积神经网络"></a>卷积神经网络</h2><p>近几年卷积神经网络中，激活函数往往不选择sigmoid或tanh函数，而是选择relu函数。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029202143966.png" alt="image-20201029202143966"></p><p>优势：</p><ol><li><p><strong>速度快</strong> 和sigmoid函数需要计算指数和倒数相比，relu函数其实就是一个max(0,x)，计算代价小很多。</p></li><li><p><strong>减轻梯度消失问题</strong> 在使用反向传播算法进行梯度计算时，每经过一层sigmoid神经元，梯度就要乘上一个sigmoid导数，导致梯度越来越小，而relu函数的导数是1，不会导致梯度变小。</p></li></ol><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029203235758.png" alt="image-20201029203235758"></p><p>常用架构模式为：INPUT -&gt; [[CONV]*N -&gt; POOL?]*M -&gt; [FC]*K    </p><p>也就是N个卷积层叠加，然后(可选)叠加一个Pooling层，重复这个结构M次，最后叠加K个全连接层。</p><h3 id="卷积层输出值的计算"><a href="#卷积层输出值的计算" class="headerlink" title="卷积层输出值的计算"></a>卷积层输出值的计算</h3><p>我们用一个简单的例子来讲述如何计算<strong>卷积</strong>，然后，我们抽象出<strong>卷积层</strong>的一些重要概念和计算方法。</p><p>假设有一个5 * 5的图像，使用一个3 * 3的filter进行卷积，想得到一个3 * 3的Feature Map，如下所示：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029204011473.png" alt="image-20201029204011473"></p><p><a href="https://www.zybuluo.com/hanbingtao/note/485480">卷积详细计算过程</a></p><h3 id="Pooling层输出值的计算"><a href="#Pooling层输出值的计算" class="headerlink" title="Pooling层输出值的计算"></a>Pooling层输出值的计算</h3><p>Pooling层主要的作用是<strong>下采样</strong>，通过去掉Feature Map中不重要的样本，进一步减少参数数量。Pooling的方法很多，最常用的是<strong>Max Pooling</strong>。<strong>Max Pooling</strong>实际上就是在n<em>n的样本中取最大值，作为采样后的样本值。下图是2</em>2 max pooling：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029205342560.png" alt="image-20201029205342560"></p><p>除了<strong>Max Pooing</strong>之外，常用的还有<strong>Mean Pooling</strong>——取各样本的平均值。</p><h2 id="循环神经网络"><a href="#循环神经网络" class="headerlink" title="循环神经网络"></a><a href="https://zybuluo.com/hanbingtao/note/541458">循环神经网络</a></h2><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029210859115.png" alt="image-20201029210859115"></p><p>如果把上面有W的那个带箭头的圈去掉，它就变成了最普通的<strong>全连接神经网络</strong>。x是一个向量，它表示<strong>输入层</strong>的值（这里面没有画出来表示神经元节点的圆圈）；s是一个向量，它表示<strong>隐藏层</strong>的值（这里隐藏层面画了一个节点，你也可以想象这一层其实是多个节点，节点数与向量s的维度相同）；U是输入层到隐藏层的<strong>权重矩阵</strong>，o也是一个向量，它表示<strong>输出层</strong>的值；V是隐藏层到输出层的<strong>权重矩阵</strong>。那么，现在我们来看看W是什么。<strong>循环神经网络</strong>的<strong>隐藏层</strong>的值s不仅仅取决于当前这次的输入x，还取决于上一次<strong>隐藏层</strong>的值s。<strong>权重矩阵</strong> W就是<strong>隐藏层</strong>上一次的值作为这一次的输入的权重。</p><p>如果我们把上面的图展开，<strong>循环神经网络</strong>也可以画成下面这个样子：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029211229733.png" alt="image-20201029211229733"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029211729617.png" alt="image-20201029211729617"></p><p><strong>式1</strong>是<strong>输出层</strong>的计算公式，输出层是一个<strong>全连接层</strong>，也就是它的每个节点都和隐藏层的每个节点相连。V是输出层的<strong>权重矩阵</strong>，g是<strong>激活函数</strong>。式2是隐藏层的计算公式，它是<strong>循环层</strong>。U是输入x的权重矩阵，W是上一次的值作为这一次的输入的<strong>权重矩阵</strong>，f是<strong>激活函数</strong>。</p><p>从上面的公式我们可以看出，<strong>循环层</strong>和<strong>全连接层</strong>的区别就是<strong>循环层</strong>多了一个<strong>权重矩阵</strong> W。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201029212231308.png" alt="image-20201029212231308"></p><p>理解 <a href="https://blog.csdn.net/zhangdamengcsdn/article/details/80200059">向量求导</a></p><p>术语 降维</p><h2 id="长短时记忆网络-LSTM"><a href="#长短时记忆网络-LSTM" class="headerlink" title="长短时记忆网络(LSTM)"></a><a href="https://zybuluo.com/hanbingtao/note/581764">长短时记忆网络</a>(LSTM)</h2><p>原始RNN的隐藏层只有一个状态，即h，它对于短期的输入非常敏感。那么，假如我们再增加一个状态，即c，让它来保存长期的状态，那么问题不就解决了么？如下图所示：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201030165854887.png" alt="image-20201030165854887"></p><p>新增加的状态c，称为**单元状态(cell state)**。我们把上图按照时间维度展开：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201030165911604.png" alt="image-20201030165911604"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201030165940888.png" alt="image-20201030165940888"></p><p>LSTM的关键，就是怎样控制长期状态c。在这里，LSTM的思路是使用三个控制开关。第一个开关，负责控制继续保存长期状态c；第二个开关，负责控制把即时状态输入到长期状态c；第三个开关，负责控制是否把长期状态c作为当前的LSTM的输出。三个开关的作用如下图所示：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201030170117704.png" alt="image-20201030170117704"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201030170554414.png" alt="image-20201030170554414"></p><p><a href="https://blog.csdn.net/u012328159/article/details/87907739">GRU</a></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201030213555978.png" alt="image-20201030213555978"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201030213612331.png" alt="image-20201030213612331"></p><p><a href="https://blog.csdn.net/u012328159/article/details/87567358">LSTM</a></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201030211205034.png" alt="image-20201030211205034"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python常见语法</title>
      <link href="/peaky/2020/10/16/7336dcda.html"/>
      <url>/peaky/2020/10/16/7336dcda.html</url>
      
        <content type="html"><![CDATA[<h3 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h3><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>crtl + &#x2F;       #单行注释</p><p>’‘’ 这是多行注释‘’‘        #  ’‘’ ‘’‘ 表示多行注释</p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>用来存储数据，不需要定义</p><p>a &#x3D; 10</p><p>a &#x3D; 100 </p><span id="more"></span><p>a &#x3D; ‘你好，世界！’</p><p>规则：以字母(区分大小写)或者下划线开头，可以包含数字      # 变量名 &#x3D; 数据        a,b &#x3D; 10,5</p><p>规范：小驼峰命名： userName     #第一个单词首字母小写，之后单子首字母大写</p><h4 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h4><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201016104505966.png" alt="image-20201016104505966"></p><p>type(变量)        #用来查看变量的类型</p><h5 id="元组类型-tuple"><a href="#元组类型-tuple" class="headerlink" title="元组类型-tuple"></a>元组类型-tuple</h5><p>b&#x3D;()</p><p>当只有一个元素时，需要加逗号    #b &#x3D; (4,)</p><p>一经创建不可修改（元组内的列表的话，可以修改） </p><p>b[-2: -1:]     #输出-2 - -1的元素</p><p>0   1  2   3  4  5</p><p>-6 -5 -4 -3 -2 -1</p><p>内置函数：count()    #统计元素出现的次数</p><p>index(x)    #索引第一个x的下标</p><h5 id="列表类型-list"><a href="#列表类型-list" class="headerlink" title="列表类型-list"></a>列表类型-list</h5><p>c&#x3D;[]</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201017091303817.png" alt="image-20201017091303817"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(a)<span class="comment">#统计长度</span></span><br><span class="line"><span class="built_in">type</span>(a)<span class="comment">#类型</span></span><br><span class="line"><span class="built_in">print</span>(a*<span class="number">3</span>) <span class="comment">#列表内内容复制3倍输出</span></span><br><span class="line"><span class="keyword">del</span> a[<span class="number">2</span>:<span class="number">10</span>]<span class="comment">#删除列表中第2-9个数据</span></span><br><span class="line">a.append(b) a.extend(b)<span class="comment">#前者加了一个[],后者在list内扩展</span></span><br><span class="line">remove() pop()<span class="comment">#前者是指定值，后者指定索引</span></span><br></pre></td></tr></table></figure><h5 id="字典类型-dict"><a href="#字典类型-dict" class="headerlink" title="字典类型-dict"></a>字典类型-dict</h5><p>d&#x3D;{}</p><p>{key:value，key2:valuue2}     #键值对的集合    value可重复，key不可重复（元组，字符串）    可以增删改</p><p>keys()    values()    items（）#获取所有的键,值，键值对</p><h5 id="共用方法-in"><a href="#共用方法-in" class="headerlink" title="共用方法 + * in"></a>共用方法 + * in</h5><p>+合并</p><p>*复制</p><p>in 对象是否存在         a in list  #a是否存在在list’中 返回bool</p><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201016111325023.png" alt="image-20201016111325023"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201016111649754.png" alt="image-20201016111649754"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201016111858256.png" alt="image-20201016111858256"></p><p>not &gt; and &gt; or</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201016112235537.png" alt="image-20201016112235537"></p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>print(内容)                #自带换行效果    \n换行效果 </p><p>print(内容,end &#x3D; “ “)     #打印完打出空格</p><p>用%占位符做输出</p><p>print(‘我是%s,来自%s’%(name,city))</p><p>print(‘我是{}’.format(变量) )                #{}.format(变量)         #输出</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201016112822357.png" alt="image-20201016112822357"></p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>name &#x3D; input(提示语)  默认接受str类型数据</p><p>其他类型输入需要加强转</p><p>name &#x3D; int (input(提示语) )        #传入int</p><h4 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h4><p>pass #用pass语句跳出循环</p><h5 id="单分支"><a href="#单分支" class="headerlink" title="单分支"></a>单分支</h5><p>if 表达式：</p><p>​    语句1</p><p>​    语句2</p><h5 id="双分支"><a href="#双分支" class="headerlink" title="双分支"></a>双分支</h5><p>if 表达式：</p><p>​    语句1</p><p>​    语句2</p><p>else：</p><p>​    语句1</p><p>​    语句2</p><h5 id="多分支"><a href="#多分支" class="headerlink" title="多分支"></a>多分支</h5><p>if 表达式：</p><p>​    语句1</p><p>​    语句2</p><p>elif 表达式：</p><p>​    语句1</p><p>​    语句2</p><p>elif 表达式：</p><p>​    语句1</p><p>​    语句2</p><p>……</p><h4 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h4><p>while 表达式：</p><p>​    语句1</p><p>​    语句2</p><p>for … in 循环对象</p><p>​    语句1</p><p>​    语句2</p><p>pass结束本次缩进</p><p>break退出本层循环</p><p>continue跳过本次循环</p><p>import random</p><p>a &#x3D; random.randit(0,100)  #随机数库</p><p>range(1,100) &lt;range对象&gt;从1-100的对象集合</p><h4 id="高级数据类型操作"><a href="#高级数据类型操作" class="headerlink" title="高级数据类型操作"></a>高级数据类型操作</h4><p>序列，python提供3种字符串、元组、列表，可以进行切片根据索引（0 - n-1）</p><h5 id="字符串基本操作"><a href="#字符串基本操作" class="headerlink" title="字符串基本操作"></a>字符串基本操作</h5><p>切片[start: end: ​step] step 默认是1</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201016203405705.png" alt="image-20201016203405705"></p><h3 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h3><h4 id="字符串基本操作-1"><a href="#字符串基本操作-1" class="headerlink" title="字符串基本操作"></a>字符串基本操作</h4><p>str.find(‘字符(串)’)     #查找是否在字符串中 返回第一个下标从0开始，未找到返回-1</p><p>str.index(‘字符(串)’)    #查找是否在字符串中 返回第一个下标从0开始，未找到报错</p><p>切片操作</p><p>slice  [start: end:step​] </p><p>[start:end]     #取 [start,end) 的字符串</p><p>[start:]     #取 start到结尾的字符串</p><p>[:end]     #取 [0,end) 的字符串</p><p>[::-1]    #倒叙输出</p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func名</span>(<span class="params">参数列表</span>):<span class="comment">#可以定默认值 a=10（调用时不输入形参即调用默认值）， </span></span><br><span class="line"></span><br><span class="line">代码块<span class="comment">#可以用可变参数*args不确定参数个数，必须放在 **kwages之前</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">pass</span>   <span class="comment">#可以用 **kwages 表示参数是一个字典（传入时 **dict传入，或者name =&#x27;peter&#x27;,age = 16 传入）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func名(形参) <span class="comment">#调用</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>函数返回值 </p><p>return后的代码都不会执行</p><p>如果有多个数据需要返回，直接返回元组、字典或者列表都可！</p><p>如果在函数内部需要对全局变量进行修改的话需要声明global</p><p>type()    #查看类型</p><p>id()    #查找地址</p><p>匿名函数：lambda 参数列表：表达式</p><p>ex：    test &#x3D; lambda x,y: x+y</p><p>调用： test(3,4)</p><h4 id="三元式"><a href="#三元式" class="headerlink" title="三元式"></a>三元式</h4><p>x if x&gt;y else y</p><p>应用匿名函数ex：直接调用</p><p>test &#x3D; (lambda x,y: x+y)(3,4)</p><p>递归实例 模拟实现树形结构的 遍历</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os<span class="comment">#引入文件操作模块</span></span><br><span class="line"></span><br><span class="line">listRs = os.listdir(path)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h4><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201018191614678.png" alt="image-20201018191614678"></p><p>eval 动态执行一个字符串表达式返回值</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201018194516657.png" alt="image-20201018194516657"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201018194855306.png" alt="image-20201018194855306"></p><p>all()     #对序列判断 &#x3D;&#x3D; 逻辑操作and    只要包含 0、空、false就返回False</p><p>any()    #对序列判断 &#x3D;&#x3D; 逻辑操作or    只有仅包含 0、空、false就返回False</p><p>sorted(list,reverse &#x3D; true)    #排序，默认时false升序</p><p>zip()         #将2个序列按照索引合并成一个序列组，个数按照少的来</p><p>enumerate(list,start&#x3D;0)    #将序列和开始位置的索引合并成一个序列</p><h4 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h4><p>set1 &#x3D; {1，2，3，4}    #元素不重复，无序且不支持索引和切片</p><p>dict1 &#x3D; {1:2}    #字典</p><h3 id="day3"><a href="#day3" class="headerlink" title="day3"></a>day3</h3><h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><p>#object oriented programmer</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20201018211412291.png" alt="image-20201018211412291"></p><p>定义类    类名采用大驼峰命名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    属性方法</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    name = <span class="string">&#x27;name&#x27;</span></span><br><span class="line">    age = <span class="number">18</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;fuck&#x27;</span>)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">     <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.sex = <span class="string">&#x27;xiaoming&#x27;</span></span><br><span class="line">        self.age = age</span><br><span class="line">        self.name = name</span><br><span class="line">        <span class="keyword">pass</span><span class="comment">#初始化方法，定义属性，自动调用 ==构造函数</span></span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="day4"><a href="#day4" class="headerlink" title="day4"></a>day4</h3><h4 id="关于numpy"><a href="#关于numpy" class="headerlink" title="关于numpy"></a>关于numpy</h4><p>安装numpy：    conda install numpy</p><p>使用 </p><p>import numpy as np</p><p>np.random.rand(a,b)        #生成a行b列的随机向量</p><p>np.random.randint(a,b)    #生成a-b之间的一个随机数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#向量生成</span></span><br><span class="line">A = np.array([[<span class="number">12</span>,<span class="number">23</span>,<span class="number">34</span>,<span class="number">45</span>],[<span class="number">21</span>,<span class="number">32</span>,<span class="number">24</span>,<span class="number">56</span>],[<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>]])</span><br><span class="line"><span class="comment">#求和按照行（列） axis=1（0）</span></span><br><span class="line">A.<span class="built_in">sum</span>(axis=<span class="number">0</span>)</span><br><span class="line">A = np.random.randn(<span class="number">5</span>)<span class="comment">#随机生成5个高斯变量 if have 2 vairble，can become 5*1 向量</span></span><br><span class="line">A.reshape(a,b)<span class="comment">#将A装换成a行b列向量</span></span><br><span class="line">A.T <span class="comment">#表示转置</span></span><br><span class="line">np.dot(A,A.T)<span class="comment">#表示矩阵乘法</span></span><br><span class="line"><span class="keyword">assert</span>(A.shape == (a,b))<span class="comment">#判断是不是a*b的向量</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap笔记</title>
      <link href="/peaky/2020/10/02/51a34670.html"/>
      <url>/peaky/2020/10/02/51a34670.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-html"><a href="#一-html" class="headerlink" title="一.html"></a>一.html</h1><h2 id="1-抽取公共部分"><a href="#1-抽取公共部分" class="headerlink" title="1.抽取公共部分"></a>1.抽取公共部分</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">抽取片段th:fragment=&quot;sidebar&quot;</span><br><span class="line">引用片段&lt;div th:replace=&quot;head::sidebar&quot;&gt;&lt;/div&gt;</span><br><span class="line">连接带信息用（）引用</span><br><span class="line">&lt;div th:replace=&quot;commons/bars::sidebar(activeUri = &#x27;main.html&#x27;)&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="2-引入webjar依赖"><a href="#2-引入webjar依赖" class="headerlink" title="2.引入webjar依赖"></a>2.引入webjar依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.webjars&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;jquery&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;3.3.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="3-样式表引用"><a href="#3-样式表引用" class="headerlink" title="3.样式表引用"></a>3.样式表引用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">有提示：</span><br><span class="line">&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">核心引用</span><br><span class="line">&lt;!-- Bootstrap core CSS --&gt;</span><br><span class="line">&lt;link href=&quot;asserts/css/bootstrap.min.css&quot;  th:href=&quot;@&#123;/webjars/bootstrap/4.4.1/css/bootstrap.css&#125;&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">单个引用</span><br><span class="line">&lt;link href=&quot;asserts/css/dashboard.css&quot; th:href=&quot;@&#123;/asserts/css/dashboard.css&#125;&quot; rel=&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="4-根据选择来显示或者隐藏"><a href="#4-根据选择来显示或者隐藏" class="headerlink" title="4.根据选择来显示或者隐藏"></a>4.根据选择来显示或者隐藏</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//隐藏div</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#userinput&quot;</span>).<span class="title function_">hide</span>(); </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//给div添加change事件</span></span></span><br><span class="line"><span class="language-javascript">  $(<span class="string">&quot;#select&quot;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>($(<span class="variable language_">this</span>).<span class="title function_">val</span>() == <span class="number">4</span> ) &#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#userinput&quot;</span>).<span class="title function_">show</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span></span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#userinput&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-在页面用循环显示信息"><a href="#5-在页面用循环显示信息" class="headerlink" title="5.在页面用循环显示信息"></a>5.在页面用循环显示信息</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;top,num:$&#123;session.goods&#125;&quot;</span> &gt;</span>  //最外层，num是计数器 num.index == 当前第几个 </span><br><span class="line">    top.id 属性</span><br><span class="line">    [[$&#123;top.grprice &#125;]] 行内写法</span><br><span class="line">    th:text = $&#123;top.gname &#125;  <span class="tag">&lt;&gt;</span>内写法</span><br><span class="line">    </span><br><span class="line">    $&#123;num.index+1&#125; 当前第几个 </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="6-url显示携带信息"><a href="#6-url显示携带信息" class="headerlink" title="6.url显示携带信息"></a>6.url显示携带信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot; th:href=&quot;@&#123;/details(orderId=$&#123;o.id&#125;)&#125;&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="7-Post请求携带数据跳转页面"><a href="#7-Post请求携带数据跳转页面" class="headerlink" title="7.Post请求携带数据跳转页面"></a>7.Post请求携带数据跳转页面</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">function httpPost(id) &#123;</span><br><span class="line">    <span class="comment">&lt;!-- temp为form表单--&gt;</span></span><br><span class="line">    var temp = document.createElement(&quot;form&quot;);</span><br><span class="line">    <span class="comment">&lt;!-- 跳转连接--&gt;</span></span><br><span class="line">    temp.action = &quot;/messagedetial&quot;;</span><br><span class="line">    <span class="comment">&lt;!-- 方式为post--&gt;</span></span><br><span class="line">    temp.method = &quot;post&quot;;</span><br><span class="line">    temp.style.display = &quot;none&quot;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- opt为携带数据--&gt;</span></span><br><span class="line">    var opt = document.createElement(&quot;textarea&quot;);</span><br><span class="line">    opt.name = &quot;messageid&quot;;</span><br><span class="line">    opt.value = id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--提交 --&gt;</span></span><br><span class="line">    temp.appendChild(opt);</span><br><span class="line">    document.body.appendChild(temp);</span><br><span class="line">    temp.submit();</span><br><span class="line">    return temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">调用</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">th:onclick</span>=<span class="string">&quot;&#x27;httpPost(&#x27;+$&#123;allmessage.getId()&#125;+&#x27;)&#x27;&quot;</span>&gt;</span></span><br><span class="line">    调用方式为拼串！</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">数字不用加&#x27;&#x27;  字符串须加&#x27;&#x27;用转义字符\&#x27;   </span><br><span class="line">abc(&#x27;abc&#x27;); abc(123);</span><br><span class="line">th:href=&quot;&#x27;javascript:regPost(\&#x27;&#x27;+$&#123;top.getEmial()&#125;+&#x27;\&#x27;);&#x27;&quot;</span><br><span class="line">th:onclick=&quot;&#x27;httpPost(&#x27;+$&#123;allmessage.getId()&#125;+&#x27;)&#x27;&quot;</span><br><span class="line"></span><br><span class="line">打开新页面</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">openNotice</span>(<span class="params">id</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> url = <span class="string">&quot;/selectANotice/&quot;</span>+ id;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="title function_">open</span>(url, <span class="string">&#x27;站内公告&#x27;</span>, <span class="string">&#x27;height=400, width=400, top=100, left=100, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">clearValue</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">myForm</span>.<span class="property">mykey</span>.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">调用javascript</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:openNotice(&#x27;/selectANotice?id=$&#123;nt.id &#125;&#x27;);&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:openNotice(&#x27;+$&#123;note.id &#125;+&#x27;);&#x27;&quot;</span>&gt;</span>[[$&#123;note.ntile&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-修改标签用表达式"><a href="#8-修改标签用表达式" class="headerlink" title="8.修改标签用表达式"></a>8.修改标签用表达式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--如果value是1 的话值为第一个否则为第二个--&gt;</span></span><br><span class="line">th:class=&quot;$&#123;value==1?&#x27;a&#x27;:&#x27;b&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><h2 id="9-是否显示此标签"><a href="#9-是否显示此标签" class="headerlink" title="9.是否显示此标签"></a>9.是否显示此标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--如果message是空的话就不显示此标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not (message == null)&#125;&quot;</span>   &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-根据某些值得改变来选择显示隐藏DIV"><a href="#10-根据某些值得改变来选择显示隐藏DIV" class="headerlink" title="10.根据某些值得改变来选择显示隐藏DIV"></a>10.根据某些值得改变来选择显示隐藏DIV</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//隐藏div</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//给div添加change事件</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#select&quot;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span>($(<span class="variable language_">this</span>).<span class="title function_">val</span>() == <span class="number">4</span> ) &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">show</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span></span></span><br><span class="line"><span class="language-javascript">      &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-用data-whatever来传递信息"><a href="#11-用data-whatever来传递信息" class="headerlink" title="11.用data-whatever来传递信息"></a>11.用data-whatever来传递信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;a data-target=&quot;.bs-example-modal-sm&quot;  th:data-whatever=&quot;@mdo&quot;&gt; 连接 &lt;/a&gt;</span><br><span class="line"> </span><br><span class="line">获取到data-whatever的值来传递到新的页面中去</span><br><span class="line"></span><br><span class="line">$(&#x27;.bs-example-modal-sm&#x27;).on(&#x27;show.bs.modal&#x27;, function (event) &#123;</span><br><span class="line">  var button = $(event.relatedTarget)</span><br><span class="line">  var recipient = button.data(&#x27;whatever&#x27;)</span><br><span class="line">  var modal = $(this)</span><br><span class="line">  modal.find(&#x27;.modal-title&#x27;).text(&#x27;发送新消息给 &#x27; + recipient)</span><br><span class="line">  modal.find(&#x27;.modal-body input&#x27;).val(recipient)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="12-通过js修改span标签的值"><a href="#12-通过js修改span标签的值" class="headerlink" title="12.通过js修改span标签的值"></a>12.通过js修改span标签的值</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&lt;!-- 搜索框js --&gt;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeType</span>(<span class="params">type</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;type&quot;</span>).<span class="property">value</span> = type;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;display&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (type == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;标题&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;内容&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;发件人&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-HTML页面空格-换行-居中"><a href="#13-HTML页面空格-换行-居中" class="headerlink" title="13.HTML页面空格+换行+居中"></a>13.HTML页面空格+换行+居中</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>  空格 </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>换行</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span>分割线</span><br><span class="line">style=&quot;text-align:center&quot;  文字居中</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger&quot;</span> <span class="attr">role</span>=<span class="string">&quot;alert&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span></span><br><span class="line">                                    此处暂时没有信息！</span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="14-html分页页码"><a href="#14-html分页页码" class="headerlink" title="14.html分页页码"></a>14.html分页页码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span> <span class="attr">style</span>=<span class="string">&quot;float: right; margin-right: 30px;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.totalPage &gt; 1&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,1)&#x27;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;message.currentPage&gt;1?&#x27;&#x27;:&#x27;disabled&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.currentPage==1&#125;&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage-1&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.currentPage&gt;1&#125;&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(message.currentPage-2)&gt;=1&#125;&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage-2&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage-2&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(message.currentPage-1)&gt;=1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage-1&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage-1&#125;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage&#125;&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(message.currentPage+1)&lt;=message.totalPage&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage+1&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage+1&#125;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(message.currentPage+2)&lt;=message.totalPage&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage+2&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage+2&#125;&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;message.currentPage&lt;message.totalPage?&#x27;&#x27;:&#x27;disabled&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.currentPage==message.totalPage&#125;&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage+1&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.currentPage&lt;message.totalPage&#125;&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.totalPage&#125;+&#x27;)&#x27;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="15-js中alert几种弹出方式"><a href="#15-js中alert几种弹出方式" class="headerlink" title="15.js中alert几种弹出方式"></a>15.js中alert几种弹出方式</h2><script type="text/javascript">    //直接弹出，无取消按钮           alert("alert");    //有取消按钮       confirm("Confirm");    //弹出输入框       prompt("prompt");    //未知       document.write("document.write");    //写入控制台 F12 查看       console.log("console.log"); </script><h2 id="16-用ajax异步提交form表单"><a href="#16-用ajax异步提交form表单" class="headerlink" title="16.用ajax异步提交form表单"></a>16.用ajax异步提交form表单</h2><p>先自己下载jquery.form.js,链接<a href="https://pan.baidu.com/s/1-IfvBikx4DXQLTJYkoTzDA">https://pan.baidu.com/s/1-IfvBikx4DXQLTJYkoTzDA</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line">或者 <span class="meta">@ResponseBody</span> +<span class="meta">@Controller</span> 否则接受不到返回数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- 导入jquery.form.js用于异步提交form表单 --&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> th:src=<span class="string">&quot;@&#123;/js/jquery.form.js&#125;&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(value = &quot;/order/add&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span><span class="comment">//返回json数据判断是否成功！！</span></span><br><span class="line"><span class="keyword">public</span> String</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//这是提交按钮</span></span><br><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span> class=<span class="string">&quot;btn btn-primary&quot;</span> οnclick=<span class="string">&quot;addOrder()&quot;</span>&gt;</span><br><span class="line">    确认添加</span><br><span class="line">&lt;/button&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这是提交js</span></span><br><span class="line">    function <span class="title function_">addOrder</span><span class="params">()</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;#orderAddForm&#x27;</span>).ajaxSubmit( &#123;</span><br><span class="line">            url : <span class="string">&quot;/url&quot;</span>,</span><br><span class="line">            <span class="comment">//这里data是@Controller返回的数据</span></span><br><span class="line">            success: function(data) &#123;</span><br><span class="line">                <span class="keyword">if</span>(data==<span class="string">&quot;1&quot;</span>)&#123;</span><br><span class="line">                    alert(<span class="string">&quot;添加成功&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    alert(<span class="string">&quot;添加失败&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">&#x27;#myModal&#x27;</span>).modal(<span class="string">&quot;hide&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//跳转位置</span></span><br><span class="line">success: function (data) &#123;</span><br><span class="line">                    window.location.href = <span class="string">&quot;/toRegister&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ajax无表单提交</span><br><span class="line">    </span><br><span class="line">    &lt;!--获取页面元素 input[name=****]--&gt;</span><br><span class="line">   <span class="type">var</span> <span class="variable">title</span> <span class="operator">=</span> $(<span class="string">&#x27;input[name=mailTitle]&#x27;</span>).val(),</span><br><span class="line">    txt =  $(<span class="string">&#x27;textarea[name=mailTxt]&#x27;</span>).val();</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, function() &#123;</span><br><span class="line">    $(<span class="string">&#x27;form&#x27;</span>).on(<span class="string">&#x27;submit&#x27;</span>, function() &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">title</span> <span class="operator">=</span> $(<span class="string">&#x27;inpur[name=title]&#x27;</span>).val(),</span><br><span class="line">            content = $(<span class="string">&#x27;textarea&#x27;</span>).val();</span><br><span class="line">        $(<span class="built_in">this</span>).ajaxSubmit(&#123;</span><br><span class="line">            type: <span class="string">&#x27;post&#x27;</span>, <span class="comment">// 提交方式 get/post</span></span><br><span class="line">            url: <span class="string">&#x27;your url&#x27;</span>, <span class="comment">// 需要提交的 url</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">                <span class="string">&#x27;content&#x27;</span>: content</span><br><span class="line">            &#125;,</span><br><span class="line">            success: function(data) &#123; <span class="comment">// data 保存提交后返回的数据，一般为 json 数据</span></span><br><span class="line">                <span class="comment">// 此处可对 data 作相关处理</span></span><br><span class="line">                alert(<span class="string">&#x27;提交成功！&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="built_in">this</span>).resetForm(); <span class="comment">// 提交后重置表单</span></span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 阻止表单自动提交事件，必须返回false，否则表单会自己再做一次提交操作，并且页面跳转</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="17-admin页面提交等待效果"><a href="#17-admin页面提交等待效果" class="headerlink" title="17.admin页面提交等待效果"></a>17.admin页面提交等待效果</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 通知消息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap-notify.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/lightyear.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/main.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 消息提示示例 按钮的id为example-success-notify</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;#example-success-notify&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;show&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 假设ajax提交操作</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;hide&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            lightyear.<span class="title function_">notify</span>(<span class="string">&#x27;修改成功，页面即将自动跳转~&#x27;</span>, <span class="string">&#x27;success&#x27;</span>, <span class="number">3000</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1e3</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;#example-error-notify&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;show&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 假设ajax提交操作</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;hide&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            lightyear.<span class="title function_">notify</span>(<span class="string">&#x27;服务器错误，请稍后再试~&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>, <span class="number">100</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1e3</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面加载等待效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lightyear.loading(&#x27;show&#x27;);  // 显示</span><br><span class="line">lightyear.loading(&#x27;hide&#x27;);  // 隐藏</span><br><span class="line"></span><br><span class="line">//延时执行在1000毫秒后执行这个function</span><br><span class="line">setTimeout(function() &#123;</span><br><span class="line">                        lightyear.loading(&#x27;hide&#x27;);</span><br><span class="line">                        lightyear.notify(&#x27;修改成功，页面即将自动跳转~&#x27;, &#x27;success&#x27;, 3000);</span><br><span class="line">                    &#125;, 1000);</span><br></pre></td></tr></table></figure><p>消息提示</p><p>消息提示采用的是bootstrap-notify插件，这里包装了一下(包装方法来自DolphinPHP)，您也可以直接使用bootstrap-notify。</p><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">$msg</td><td align="left">提示信息</td></tr><tr><td align="left">$type</td><td align="left">提示类型：’info’, ‘success’, ‘warning’, ‘danger’</td></tr><tr><td align="left">$delay</td><td align="left">定义消息提示消失的时间，毫秒数</td></tr><tr><td align="left">$icon</td><td align="left">图标，例如：’mdi-emoticon-happy’，具体参考<a href="lyear_ui_icons.html">图标</a></td></tr><tr><td align="left">$from</td><td align="left">‘top’ 或 ‘bottom’</td></tr><tr><td align="left">$align</td><td align="left">‘left’, ‘right’, ‘center’</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lightyear.notify(&#x27;修改成功，页面即将自动跳转~&#x27;, &#x27;success&#x27;, 5000, &#x27;mdi mdi-emoticon-happy&#x27;, &#x27;top&#x27;, &#x27;center&#x27;);</span><br></pre></td></tr></table></figure><h3 id="实例-发信息"><a href="#实例-发信息" class="headerlink" title="实例-发信息"></a>实例-发信息</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>引入js</span><br><span class="line"></span><br><span class="line">&lt;!-- 通知消息--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap-notify.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/lightyear.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/main.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!-- 导入jquery.<span class="property">form</span>.<span class="property">js</span>用于异步提交form表单 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery.form.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>用@<span class="title class_">Controller</span>+@<span class="title class_">ResponseBody</span>  或者 @<span class="title class_">RestController</span></span><br><span class="line"></span><br><span class="line">@<span class="title class_">PostMapping</span>(<span class="string">&quot;/url&quot;</span>)</span><br><span class="line">@<span class="title class_">ResponseBody</span><span class="comment">//返回json数据判断是否成功！！</span></span><br><span class="line">public <span class="title class_">String</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;</span><br><span class="line">    reyurn <span class="string">&quot;a&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>页面加载等待效果</span><br><span class="line"></span><br><span class="line">lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;show&#x27;</span>);  <span class="comment">// 显示</span></span><br><span class="line">lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;hide&#x27;</span>);  <span class="comment">// 隐藏</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//延时执行在1000毫秒后执行这个function</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                        lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;hide&#x27;</span>);</span><br><span class="line">                        lightyear.<span class="title function_">notify</span>(<span class="string">&#x27;修改成功，页面即将自动跳转~&#x27;</span>, <span class="string">&#x27;success&#x27;</span>, <span class="number">3000</span>);</span><br><span class="line">                    &#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>提交js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> options = &#123; </span><br><span class="line">    <span class="attr">target</span>: ‘#output1<span class="string">&#x27;,     //把服务器返回的内容放入id为output1的元素中 </span></span><br><span class="line"><span class="string">    beforeSubmit: showRequest,   //提交前的回调函数 </span></span><br><span class="line"><span class="string">    success: showResponse,     //提交后的回调函数 </span></span><br><span class="line"><span class="string">    error: errorResponse,//遇到后台报错函数</span></span><br><span class="line"><span class="string">    url: url,      //默认是form的action，如果声明，则会覆盖 </span></span><br><span class="line"><span class="string">    type: type,   //默认是form的method，如果声明，则会覆盖 </span></span><br><span class="line"><span class="string">    dataType: json ,  //接受服务端返回的类型 </span></span><br><span class="line"><span class="string">    clearForm: true,  //成功提交后，清除所有表单元素的值 </span></span><br><span class="line"><span class="string">    resetForm: true,  //成功提交后，重置所有表单元素的值 </span></span><br><span class="line"><span class="string">    timeout: 3000    //限制请求的时间，当请求大于3秒后，跳出请求 </span></span><br><span class="line"><span class="string">&#125;；</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">示例：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;!--发送信息--&gt;</span></span><br><span class="line"><span class="string">function adminSendMail()&#123;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    //显示等待效果   --一直转圈！！！！</span></span><br><span class="line"><span class="string">    lightyear.loading(&#x27;</span>show<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    //提交form表单 #id</span></span><br><span class="line"><span class="string">    $(&#x27;</span>#sendMail<span class="string">&#x27;).ajaxSubmit(&#123;</span></span><br><span class="line"><span class="string">        url : &quot;/admin/mail/send&quot;,</span></span><br><span class="line"><span class="string">        //data为返回数据</span></span><br><span class="line"><span class="string">        success: function(data) &#123;</span></span><br><span class="line"><span class="string">            //结果成功</span></span><br><span class="line"><span class="string">            if(data == 1)&#123;</span></span><br><span class="line"><span class="string">                setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">                    lightyear.loading(&#x27;</span>hide<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">                    lightyear.notify(&#x27;</span>发送信息成功，请前往已发送信息查看~<span class="string">&#x27;, &#x27;</span>success<span class="string">&#x27;, 3000);</span></span><br><span class="line"><span class="string">                &#125;, 1000);</span></span><br><span class="line"><span class="string">            &#125;//结果失败</span></span><br><span class="line"><span class="string">            else&#123;</span></span><br><span class="line"><span class="string">                setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">                    lightyear.loading(&#x27;</span>hide<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">                    lightyear.notify(&#x27;</span>发送信息失败，请稍后再试~<span class="string">&#x27;, &#x27;</span>danger<span class="string">&#x27;, 3000);</span></span><br><span class="line"><span class="string">                &#125;, 1000);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        error : function() &#123;</span></span><br><span class="line"><span class="string">            setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">                lightyear.loading(&#x27;</span>hide<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">                lightyear.notify(&#x27;</span>出现了错误，请稍后再试~<span class="string">&#x27;, &#x27;</span>danger<span class="string">&#x27;, 3000);</span></span><br><span class="line"><span class="string">            &#125;, 1000);</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        //超时5秒跳出</span></span><br><span class="line"><span class="string">        timeout: 5000</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    //断后操作隐藏窗口之类</span></span><br><span class="line"><span class="string">    //隐藏输入表单弹窗</span></span><br><span class="line"><span class="string">    $(&#x27;</span>#exampleModal<span class="string">&#x27;).modal(&quot;hide&quot;);</span></span><br><span class="line"><span class="string">    return false;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="18-对话框"><a href="#18-对话框" class="headerlink" title="18.对话框"></a>18.对话框</h2><!--对话框--><script type="text/javascript" th:src="@{/js/jconfirm/jquery-confirm.min.js}"></script><script type="text/javascript" th:src="@{/js/main.min.js}"></script><script type="text/javascript">$('.example-p-1').on('click', function () {    $.alert({        title: '嗨',        content: '这是对用户的简单提示框。 <br> 一些 <strong>HTML</strong> <em>内容</em>',        buttons: {            confirm: {                text: '确认',                btnClass: 'btn-primary',                action: function(){                    $.alert('你点击了确认!');                }            },            cancel: {                text: '取消',                action: function () {                    $.alert('你点击了取消!');                }            }        }    });});$('.example-p-2').on('click', function () {    $.confirm({        title: '对话框',        content: '一些内容...',        buttons: {            confirm: {                text: '确认',                action: function(){                    $.alert('确认的!');                }            },            cancel: {                text: '关闭',                action: function(){                    $.alert('取消的!');                }            },            somethingElse: {                text: '其他',                btnClass: 'btn-blue',                keys: ['enter', 'shift'],                action: function(){                    $.alert('其他的选择？');                }            }        }    });});$('.example-p-3').on('click', function () {    $.confirm({        title: '提示',        content: '' +        '<form action="" class="formName">' +        '<div class="form-group">' +        '<label>请输入您的姓名</label>' +        '<input type="text" placeholder="姓名" class="name form-control" required />' +        '</div>' +        '</form>',        buttons: {            formSubmit: {                text: '提交',                btnClass: 'btn-blue',                action: function () {                    var name = this.$content.find('.name').val();                    if(!name){                        $.alert('请您输入您的姓名');                        return false;                    }                    $.alert('您的姓名是： ' + name);                }            },            cancel: {                text: '取消'            },        },        onContentReady: function () {            var jc = this;            this.$content.find('form').on('submit', function (e) {                e.preventDefault();                jc.$$formSubmit.trigger('click');            });        }    });});$('.example-p-4').on('click', function () {    $.confirm({        title: '错误提示',        content: '笑江湖浪迹十年游，空负少年头。对铜驼巷陌，吟情渺渺，心事悠悠！酒冷诗残梦断，南国正清秋。',        type: 'red',        typeAnimated: true,        buttons: {            tryAgain: {                text: '重试',                btnClass: 'btn-red',                action: function(){                }            },            close: {                text: '关闭'            }        }    });});$('.example-p-5').on('click', function () {    $.confirm({        title: '成功',        content: '难消受灯昏罗帐，怅昙花一现恨难休！飘零惯，金戈铁马，拼葬荒丘！',        type: 'green',        buttons: {            omg: {                text: '谢谢',                btnClass: 'btn-green',            },            close: {                text: '关闭',            }        }    });});$('.example-p-6').on('click', function () {    $.confirm({        title: '警告',        content: '把剑凄然望，无处招归舟。明日天涯路远，问谁留楚佩，弄影中洲？数英雄儿女，俯仰古今愁。',        type: 'orange',        typeAnimated: false,        buttons: {            omg: {                text: '重试',                btnClass: 'btn-orange',            },            close: {                text: '关闭',            }        }    });});</script><h2 id="19-返回上一层"><a href="#19-返回上一层" class="headerlink" title="19.返回上一层"></a>19.返回上一层</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;javascript:history.back(-1);return false;&quot;</span>&gt;</span>返 回<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="20-模态框"><a href="#20-模态框" class="headerlink" title="20.模态框"></a>20.模态框</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  修改id 和 aria-lableledby 即可修改模态框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mailEdit&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;mailEdit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span> <span class="attr">role</span>=<span class="string">&quot;document&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span>&gt;</span>编辑消息<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span>  <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">id</span>=<span class="string">&quot;admin/mail/edit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sendMail&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>  <span class="attr">class</span>=<span class="string">&quot;control-label&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h5</span>&gt;</span>标题：<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mailTitle&quot;</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>  <span class="attr">class</span>=<span class="string">&quot;control-label&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h5</span>&gt;</span>消息内容：<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mailTxt&quot;</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;adminSendMail()&quot;</span>&gt;</span>发送消息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--触发模态框 添加data-toggle 和 data-target（对应aria-lableledby的值） --&gt;</span></span><br><span class="line"> data-toggle=&quot;modal&quot; data-target=&quot;#mailEdit&quot;</span><br></pre></td></tr></table></figure><h2 id="21-html强制刷新当前页面（延时3秒后）"><a href="#21-html强制刷新当前页面（延时3秒后）" class="headerlink" title="21.html强制刷新当前页面（延时3秒后）"></a>21.html强制刷新当前页面（延时3秒后）</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(function() &#123;</span><br><span class="line">    window.location.reload();</span><br><span class="line">&#125;, 3000);</span><br></pre></td></tr></table></figure><h2 id="22-js修改input的placeholder"><a href="#22-js修改input的placeholder" class="headerlink" title="22.js修改input的placeholder"></a>22.js修改input的placeholder</h2><p>方法1：通过js来设置文本框input的placeholder值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;input&quot;).setAttribute(&quot;placeholder&quot;,&quot;新文本内容&quot;);</span><br></pre></td></tr></table></figure><p>方法2：通过jquery设置文本框input的placeholder值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;#input&#x27;).attr(&#x27;placeholder&#x27;,&#x27;新文本内容&#x27;)；</span><br></pre></td></tr></table></figure><h2 id="23-判断input值为空"><a href="#23-判断input值为空" class="headerlink" title="23.判断input值为空"></a>23.判断input值为空</h2><p><a href="https://blog.csdn.net/weixin_42645716/article/details/87984442">https://blog.csdn.net/weixin_42645716/article/details/87984442</a></p><p>一、Input获取value</p><input type="text" value="请输入姓名" name="name" id="name"><script>var name;     name = document.getElementById("name").value    name = form1.name.value    name = $("#name").val()    name =  $("input[id='name']").val()    name = $("#name").attr("value")    name = $("input[id='name']").attr("value")</script><p>二、判断value是否为空</p><p>&#x2F;&#x2F; 方法一:<br>if(name &#x3D;&#x3D; null || name &#x3D;&#x3D; undefined || name &#x3D;&#x3D; ‘’){<br>    console.log(“value 为空”)<br>}<br>&#x2F;&#x2F; 方法二:<br>if(name.length &gt; 0 ){<br>    console.log(“value 不为空”)<br>}<br>三、null、undefined、‘’的区别</p><p>null:空对象\不是对象,转为数值为0<br>undefined:全局对象window的一个特殊属性.undefined表示”缺少值”，就是此处应该有一个值，但是还没有定义。转为数值为NaN.典型用法是：</p><p>（1）变量被声明了，但没有赋值时，就等于undefined。<br>（2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。<br>（3）对象没有赋值的属性，该属性的值为undefined。<br>（4）函数没有返回值时，默认返回undefined。</p><h1 id="二-springboot"><a href="#二-springboot" class="headerlink" title="二.springboot"></a>二.springboot</h1><h2 id="1-获取时间戳"><a href="#1-获取时间戳" class="headerlink" title="1.获取时间戳"></a>1.获取时间戳</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Timestamp</span> <span class="variable">timestamp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timestamp</span>(System.currentTimeMillis());</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy/MM/dd hh:mm:ss&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">timestamp</span> <span class="operator">=</span> sdf.format(log.getTime());<span class="comment">//格式化器</span></span><br><span class="line"></span><br><span class="line">thymeleaf 时间戳格式化器</span><br><span class="line">  th:text=<span class="string">&quot;$&#123;#dates.format(Time, &#x27;yyyy-MM-dd hh:mm:ss&#x27;)&#125;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2-从html页面的form表单提取数据与封装"><a href="#2-从html页面的form表单提取数据与封装" class="headerlink" title="2.从html页面的form表单提取数据与封装"></a>2.从html页面的form表单提取数据与封装</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestParam(&quot;select&quot;)</span> Integer val   <span class="comment">//根据name获取值</span></span><br><span class="line">    Model model         <span class="comment">//封装model</span></span><br><span class="line">    model.addAttribute(<span class="string">&quot;focusgoods&quot;</span>,selectallfocusbyid);   <span class="comment">//名值对形式</span></span><br><span class="line">    HttpSession session</span><br><span class="line">    session.setAttribute(<span class="string">&quot;goodshot&quot;</span>,goods);</span><br></pre></td></tr></table></figure><h2 id="3-添加log日志"><a href="#3-添加log日志" class="headerlink" title="3.添加log日志"></a>3.添加log日志</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Timestamp</span> <span class="variable">timestamp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timestamp</span>(System.currentTimeMillis());</span><br><span class="line"><span class="type">log</span> <span class="variable">us_login_log</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">log</span>(<span class="number">0</span>,<span class="string">&quot;用户登录&quot;</span>,timestamp,email);</span><br><span class="line">logService.insertlog(us_login_log);</span><br><span class="line"><span class="comment">//操作类型 0增1删2改3查4登录 、 操作 、时间 、 操作者</span></span><br></pre></td></tr></table></figure><h2 id="4-SpringBoot热部署"><a href="#4-SpringBoot热部署" class="headerlink" title="4.SpringBoot热部署"></a>4.SpringBoot热部署</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--dependency 中devtools热部署--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">            &lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">            &lt;scope&gt;<span class="literal">true</span>&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--build 中devtools设置<span class="literal">true</span>--&gt;</span><br><span class="line"></span><br><span class="line">&lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;fork&gt;<span class="literal">true</span>&lt;/fork&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">    </span><br><span class="line">&lt;!--application.yml中配置一下devtools--&gt;    </span><br><span class="line">spring:</span><br><span class="line">  devtools:</span><br><span class="line">    restart:</span><br><span class="line">      enabled: <span class="literal">true</span>  #设置开启热部署</span><br><span class="line">      additional-paths: src/main/java #重启目录</span><br><span class="line">      exclude: WEB-INF<span class="comment">/**</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment"> 修改idea设置。</span></span><br><span class="line"><span class="comment">（1）File-Settings-Compiler-Build Project automatically</span></span><br><span class="line"><span class="comment">（2）ctrl + shift + alt + / ,选择Registry,勾上 Compiler autoMake allow when app running</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">crtl+s 热启动</span></span><br></pre></td></tr></table></figure><h2 id="5-String-转Int"><a href="#5-String-转Int" class="headerlink" title="5.String 转Int"></a>5.String 转Int</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer.parseInt(id)</span><br></pre></td></tr></table></figure><h2 id="6-模糊查询"><a href="#6-模糊查询" class="headerlink" title="6.模糊查询"></a>6.模糊查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;Select * From message where title like CONCAT(&#x27;%&#x27;,#&#123;title&#125;,&#x27;%&#x27;)&quot;)</span></span><br></pre></td></tr></table></figure><h2 id="7-判断一个list集合是否为空"><a href="#7-判断一个list集合是否为空" class="headerlink" title="7.判断一个list集合是否为空"></a>7.判断一个list集合是否为空</h2><p><strong>isEmpty() 和(list.size() &#x3D;&#x3D; 0)都是判断List内容是否为空。</strong></p><p><strong>null判断是判断有没有对list集合分配内存空间，而不是list里面内容是否为空</strong></p><h2 id="8-转发与重定向"><a href="#8-转发与重定向" class="headerlink" title="8.转发与重定向"></a>8.转发与重定向</h2><h3 id="1-转发"><a href="#1-转发" class="headerlink" title="1.转发"></a>1.转发</h3><h4 id="1-使用-“forword”-关键字"><a href="#1-使用-“forword”-关键字" class="headerlink" title="1.使用 “forword” 关键字"></a>1.使用 “forword” 关键字</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;forword:/url&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="2-使用servlet-提供的API"><a href="#2-使用servlet-提供的API" class="headerlink" title="2.使用servlet 提供的API"></a>2.使用servlet 提供的API</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(<span class="string">&quot;/url&quot;</span>).forward(request,response);</span><br></pre></td></tr></table></figure><h3 id="2-重定向"><a href="#2-重定向" class="headerlink" title="2.重定向"></a>2.重定向</h3><h4 id="1-使用servlet-提供的API"><a href="#1-使用servlet-提供的API" class="headerlink" title="1.使用servlet 提供的API"></a>1.使用servlet 提供的API</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HttpServletResponse response;</span><br><span class="line">response.sendRedirect(<span class="string">&quot;/url&quot;</span>);<span class="comment">//转发到制定的url及对应Controler</span></span><br></pre></td></tr></table></figure><h4 id="2-使用-“redirect”-关键字"><a href="#2-使用-“redirect”-关键字" class="headerlink" title="2.使用 “redirect” 关键字"></a>2.使用 “redirect” 关键字</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;redirect:/url&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="9-分页配置"><a href="#9-分页配置" class="headerlink" title="9.分页配置"></a>9.分页配置</h2><h3 id="1-分页工具"><a href="#1-分页工具" class="headerlink" title="1.分页工具"></a>1.分页工具</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageUtils</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> currentPage; <span class="comment">//当前页码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> pageSize;    <span class="comment">//每页显示的记录数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> totalPage;   <span class="comment">//总页数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> totalCount;  <span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; list;   <span class="comment">//封装查询结果的集合</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurrentPage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> currentPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurrentPage</span><span class="params">(<span class="type">int</span> currentPage)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.currentPage = currentPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPageSize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPageSize</span><span class="params">(<span class="type">int</span> pageSize)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTotalPage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> totalPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotalPage</span><span class="params">(<span class="type">int</span> totalPage)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.totalPage = totalPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTotalCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> totalCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotalCount</span><span class="params">(<span class="type">int</span> totalCount)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.totalCount = totalCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">getList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setList</span><span class="params">(List&lt;T&gt; list)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-html分页配置"><a href="#2-html分页配置" class="headerlink" title="2.html分页配置"></a>2.html分页配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestParam(value = &quot;currentPage&quot;, defaultValue = &quot;1&quot;)</span> <span class="type">int</span> currentPage</span><br><span class="line">    <span class="comment">//传入页面，如不制定默认为3</span></span><br><span class="line">    <span class="comment">//还可以接受一些其他参数</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//页面显示情况</span></span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">            &lt;td colspan=<span class="string">&quot;5&quot;</span> align=<span class="string">&quot;right&quot;</span>&gt;</span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;共$&#123;allGoods.totalCount&#125;条记录&amp;nbsp;&amp;nbsp;共$&#123;allGoods.totalPage&#125;页&amp;nbsp;&amp;nbsp;</span><br><span class="line">                第$&#123;allGoods.currentPage&#125;页&amp;nbsp;&amp;nbsp;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;allGoods.currentPage != 1&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;/adminGoods/selectGoods?currentPage=1&quot;</span>&gt;首页&lt;/a&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;/adminGoods/selectGoods?currentPage=$&#123;allGoods.currentPage-1&#125;&quot;</span>&gt;上一页&lt;/a&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;allGoods.currentPage != allGoods.totalPage&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;/adminGoods/selectGoods?currentPage=$&#123;allGoods.currentPage+1&#125; &quot;</span>&gt;下一页&lt;/a&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;/adminGoods/selectGoods?currentPage=$&#123;allGoods.totalPage&#125;&quot;</span>&gt;尾页&lt;/a&gt;</span><br><span class="line">                &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="3-分页实现"><a href="#3-分页实现" class="headerlink" title="3.分页实现"></a>3.分页实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">PageUtils&lt;Goods&gt; page = adminGoodsService.selectGoods(currentPage);   <span class="comment">//currentPage:当前页数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//service层方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> PageUtils&lt;Goods&gt; <span class="title function_">selectGoods</span><span class="params">(<span class="type">int</span> currentPage)</span> &#123;</span><br><span class="line">        PageUtils&lt;Goods&gt; goods = <span class="keyword">new</span> <span class="title class_">PageUtils</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//定义每页显示的记录数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">15</span>;</span><br><span class="line">        <span class="comment">//查询总记录数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalCount</span> <span class="operator">=</span> goodsMapper.findCount();  <span class="comment">//查询当前总记录数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">tc</span> <span class="operator">=</span> totalCount;</span><br><span class="line">        <span class="comment">//查询总页数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalPage</span> <span class="operator">=</span> (<span class="type">int</span>) Math.ceil(tc / pageSize);</span><br><span class="line">        <span class="comment">//查询每页显示的结果集</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line">        List&lt;Goods&gt; lists = goodsMapper.findLists(start, pageSize);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始封装</span></span><br><span class="line">        goods.setCurrentPage(currentPage);</span><br><span class="line">        goods.setPageSize(pageSize);</span><br><span class="line">        goods.setTotalCount(totalCount);</span><br><span class="line">        goods.setTotalPage(totalPage);</span><br><span class="line">        goods.setList(lists);</span><br><span class="line">        <span class="keyword">return</span> goods;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/peaky/2020/10/02/51a34670.html"/>
      <url>/peaky/2020/10/02/51a34670.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-html"><a href="#一-html" class="headerlink" title="一.html"></a>一.html</h1><h2 id="1-抽取公共部分"><a href="#1-抽取公共部分" class="headerlink" title="1.抽取公共部分"></a>1.抽取公共部分</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">抽取片段th:fragment=&quot;sidebar&quot;</span><br><span class="line">引用片段&lt;div th:replace=&quot;head::sidebar&quot;&gt;&lt;/div&gt;</span><br><span class="line">连接带信息用（）引用</span><br><span class="line">&lt;div th:replace=&quot;commons/bars::sidebar(activeUri = &#x27;main.html&#x27;)&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="2-引入webjar依赖"><a href="#2-引入webjar依赖" class="headerlink" title="2.引入webjar依赖"></a>2.引入webjar依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.webjars&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;jquery&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;3.3.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="3-样式表引用"><a href="#3-样式表引用" class="headerlink" title="3.样式表引用"></a>3.样式表引用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">有提示：</span><br><span class="line">&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">核心引用</span><br><span class="line">&lt;!-- Bootstrap core CSS --&gt;</span><br><span class="line">&lt;link href=&quot;asserts/css/bootstrap.min.css&quot;  th:href=&quot;@&#123;/webjars/bootstrap/4.4.1/css/bootstrap.css&#125;&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">单个引用</span><br><span class="line">&lt;link href=&quot;asserts/css/dashboard.css&quot; th:href=&quot;@&#123;/asserts/css/dashboard.css&#125;&quot; rel=&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="4-根据选择来显示或者隐藏"><a href="#4-根据选择来显示或者隐藏" class="headerlink" title="4.根据选择来显示或者隐藏"></a>4.根据选择来显示或者隐藏</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//隐藏div</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#userinput&quot;</span>).<span class="title function_">hide</span>(); </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//给div添加change事件</span></span></span><br><span class="line"><span class="language-javascript">  $(<span class="string">&quot;#select&quot;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>($(<span class="variable language_">this</span>).<span class="title function_">val</span>() == <span class="number">4</span> ) &#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#userinput&quot;</span>).<span class="title function_">show</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span></span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#userinput&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-在页面用循环显示信息"><a href="#5-在页面用循环显示信息" class="headerlink" title="5.在页面用循环显示信息"></a>5.在页面用循环显示信息</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;top,num:$&#123;session.goods&#125;&quot;</span> &gt;</span>  //最外层，num是计数器 num.index == 当前第几个 </span><br><span class="line">    top.id 属性</span><br><span class="line">    [[$&#123;top.grprice &#125;]] 行内写法</span><br><span class="line">    th:text = $&#123;top.gname &#125;  <span class="tag">&lt;&gt;</span>内写法</span><br><span class="line">    </span><br><span class="line">    $&#123;num.index+1&#125; 当前第几个 </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="6-url显示携带信息"><a href="#6-url显示携带信息" class="headerlink" title="6.url显示携带信息"></a>6.url显示携带信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot; th:href=&quot;@&#123;/details(orderId=$&#123;o.id&#125;)&#125;&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="7-Post请求携带数据跳转页面"><a href="#7-Post请求携带数据跳转页面" class="headerlink" title="7.Post请求携带数据跳转页面"></a>7.Post请求携带数据跳转页面</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">function httpPost(id) &#123;</span><br><span class="line">    <span class="comment">&lt;!-- temp为form表单--&gt;</span></span><br><span class="line">    var temp = document.createElement(&quot;form&quot;);</span><br><span class="line">    <span class="comment">&lt;!-- 跳转连接--&gt;</span></span><br><span class="line">    temp.action = &quot;/messagedetial&quot;;</span><br><span class="line">    <span class="comment">&lt;!-- 方式为post--&gt;</span></span><br><span class="line">    temp.method = &quot;post&quot;;</span><br><span class="line">    temp.style.display = &quot;none&quot;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- opt为携带数据--&gt;</span></span><br><span class="line">    var opt = document.createElement(&quot;textarea&quot;);</span><br><span class="line">    opt.name = &quot;messageid&quot;;</span><br><span class="line">    opt.value = id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--提交 --&gt;</span></span><br><span class="line">    temp.appendChild(opt);</span><br><span class="line">    document.body.appendChild(temp);</span><br><span class="line">    temp.submit();</span><br><span class="line">    return temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">调用</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">th:onclick</span>=<span class="string">&quot;&#x27;httpPost(&#x27;+$&#123;allmessage.getId()&#125;+&#x27;)&#x27;&quot;</span>&gt;</span></span><br><span class="line">    调用方式为拼串！</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">数字不用加&#x27;&#x27;  字符串须加&#x27;&#x27;用转义字符\&#x27;   </span><br><span class="line">abc(&#x27;abc&#x27;); abc(123);</span><br><span class="line">th:href=&quot;&#x27;javascript:regPost(\&#x27;&#x27;+$&#123;top.getEmial()&#125;+&#x27;\&#x27;);&#x27;&quot;</span><br><span class="line">th:onclick=&quot;&#x27;httpPost(&#x27;+$&#123;allmessage.getId()&#125;+&#x27;)&#x27;&quot;</span><br><span class="line"></span><br><span class="line">打开新页面</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">openNotice</span>(<span class="params">id</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> url = <span class="string">&quot;/selectANotice/&quot;</span>+ id;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="title function_">open</span>(url, <span class="string">&#x27;站内公告&#x27;</span>, <span class="string">&#x27;height=400, width=400, top=100, left=100, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">clearValue</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">myForm</span>.<span class="property">mykey</span>.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">调用javascript</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:openNotice(&#x27;/selectANotice?id=$&#123;nt.id &#125;&#x27;);&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:openNotice(&#x27;+$&#123;note.id &#125;+&#x27;);&#x27;&quot;</span>&gt;</span>[[$&#123;note.ntile&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-修改标签用表达式"><a href="#8-修改标签用表达式" class="headerlink" title="8.修改标签用表达式"></a>8.修改标签用表达式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--如果value是1 的话值为第一个否则为第二个--&gt;</span></span><br><span class="line">th:class=&quot;$&#123;value==1?&#x27;a&#x27;:&#x27;b&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><h2 id="9-是否显示此标签"><a href="#9-是否显示此标签" class="headerlink" title="9.是否显示此标签"></a>9.是否显示此标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--如果message是空的话就不显示此标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not (message == null)&#125;&quot;</span>   &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-根据某些值得改变来选择显示隐藏DIV"><a href="#10-根据某些值得改变来选择显示隐藏DIV" class="headerlink" title="10.根据某些值得改变来选择显示隐藏DIV"></a>10.根据某些值得改变来选择显示隐藏DIV</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//隐藏div</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//给div添加change事件</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;#select&quot;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span>($(<span class="variable language_">this</span>).<span class="title function_">val</span>() == <span class="number">4</span> ) &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">show</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span></span></span><br><span class="line"><span class="language-javascript">      &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#otherReason&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-用data-whatever来传递信息"><a href="#11-用data-whatever来传递信息" class="headerlink" title="11.用data-whatever来传递信息"></a>11.用data-whatever来传递信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;a data-target=&quot;.bs-example-modal-sm&quot;  th:data-whatever=&quot;@mdo&quot;&gt; 连接 &lt;/a&gt;</span><br><span class="line"> </span><br><span class="line">获取到data-whatever的值来传递到新的页面中去</span><br><span class="line"></span><br><span class="line">$(&#x27;.bs-example-modal-sm&#x27;).on(&#x27;show.bs.modal&#x27;, function (event) &#123;</span><br><span class="line">  var button = $(event.relatedTarget)</span><br><span class="line">  var recipient = button.data(&#x27;whatever&#x27;)</span><br><span class="line">  var modal = $(this)</span><br><span class="line">  modal.find(&#x27;.modal-title&#x27;).text(&#x27;发送新消息给 &#x27; + recipient)</span><br><span class="line">  modal.find(&#x27;.modal-body input&#x27;).val(recipient)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="12-通过js修改span标签的值"><a href="#12-通过js修改span标签的值" class="headerlink" title="12.通过js修改span标签的值"></a>12.通过js修改span标签的值</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&lt;!-- 搜索框js --&gt;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeType</span>(<span class="params">type</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;type&quot;</span>).<span class="property">value</span> = type;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;display&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (type == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;标题&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;内容&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">innerHTML</span> = <span class="string">&quot;发件人&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-HTML页面空格-换行-居中"><a href="#13-HTML页面空格-换行-居中" class="headerlink" title="13.HTML页面空格+换行+居中"></a>13.HTML页面空格+换行+居中</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>  空格 </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>换行</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span>分割线</span><br><span class="line">style=&quot;text-align:center&quot;  文字居中</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger&quot;</span> <span class="attr">role</span>=<span class="string">&quot;alert&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span></span><br><span class="line">                                    此处暂时没有信息！</span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="14-html分页页码"><a href="#14-html分页页码" class="headerlink" title="14.html分页页码"></a>14.html分页页码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span> <span class="attr">style</span>=<span class="string">&quot;float: right; margin-right: 30px;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.totalPage &gt; 1&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,1)&#x27;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;message.currentPage&gt;1?&#x27;&#x27;:&#x27;disabled&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.currentPage==1&#125;&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage-1&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.currentPage&gt;1&#125;&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(message.currentPage-2)&gt;=1&#125;&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage-2&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage-2&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(message.currentPage-1)&gt;=1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage-1&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage-1&#125;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage&#125;&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(message.currentPage+1)&lt;=message.totalPage&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage+1&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage+1&#125;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(message.currentPage+2)&lt;=message.totalPage&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage+2&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message.currentPage+2&#125;&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;message.currentPage&lt;message.totalPage?&#x27;&#x27;:&#x27;disabled&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.currentPage==message.totalPage&#125;&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.currentPage+1&#125;+&#x27;)&#x27;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message.currentPage&lt;message.totalPage&#125;&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;javascript:httpPost(&#x27;+$&#123;type&#125;+&#x27;,&#x27;+$&#123;message.totalPage&#125;+&#x27;)&#x27;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="15-js中alert几种弹出方式"><a href="#15-js中alert几种弹出方式" class="headerlink" title="15.js中alert几种弹出方式"></a>15.js中alert几种弹出方式</h2><script type="text/javascript">    //直接弹出，无取消按钮           alert("alert");    //有取消按钮       confirm("Confirm");    //弹出输入框       prompt("prompt");    //未知       document.write("document.write");    //写入控制台 F12 查看       console.log("console.log"); </script><h2 id="16-用ajax异步提交form表单"><a href="#16-用ajax异步提交form表单" class="headerlink" title="16.用ajax异步提交form表单"></a>16.用ajax异步提交form表单</h2><p>先自己下载jquery.form.js,链接<a href="https://pan.baidu.com/s/1-IfvBikx4DXQLTJYkoTzDA">https://pan.baidu.com/s/1-IfvBikx4DXQLTJYkoTzDA</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line">或者 <span class="meta">@ResponseBody</span> +<span class="meta">@Controller</span> 否则接受不到返回数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- 导入jquery.form.js用于异步提交form表单 --&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> th:src=<span class="string">&quot;@&#123;/js/jquery.form.js&#125;&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(value = &quot;/order/add&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span><span class="comment">//返回json数据判断是否成功！！</span></span><br><span class="line"><span class="keyword">public</span> String</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//这是提交按钮</span></span><br><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span> class=<span class="string">&quot;btn btn-primary&quot;</span> οnclick=<span class="string">&quot;addOrder()&quot;</span>&gt;</span><br><span class="line">    确认添加</span><br><span class="line">&lt;/button&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这是提交js</span></span><br><span class="line">    function <span class="title function_">addOrder</span><span class="params">()</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;#orderAddForm&#x27;</span>).ajaxSubmit( &#123;</span><br><span class="line">            url : <span class="string">&quot;/url&quot;</span>,</span><br><span class="line">            <span class="comment">//这里data是@Controller返回的数据</span></span><br><span class="line">            success: function(data) &#123;</span><br><span class="line">                <span class="keyword">if</span>(data==<span class="string">&quot;1&quot;</span>)&#123;</span><br><span class="line">                    alert(<span class="string">&quot;添加成功&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    alert(<span class="string">&quot;添加失败&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">&#x27;#myModal&#x27;</span>).modal(<span class="string">&quot;hide&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//跳转位置</span></span><br><span class="line">success: function (data) &#123;</span><br><span class="line">                    window.location.href = <span class="string">&quot;/toRegister&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ajax无表单提交</span><br><span class="line">    </span><br><span class="line">    &lt;!--获取页面元素 input[name=****]--&gt;</span><br><span class="line">   <span class="type">var</span> <span class="variable">title</span> <span class="operator">=</span> $(<span class="string">&#x27;input[name=mailTitle]&#x27;</span>).val(),</span><br><span class="line">    txt =  $(<span class="string">&#x27;textarea[name=mailTxt]&#x27;</span>).val();</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, function() &#123;</span><br><span class="line">    $(<span class="string">&#x27;form&#x27;</span>).on(<span class="string">&#x27;submit&#x27;</span>, function() &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">title</span> <span class="operator">=</span> $(<span class="string">&#x27;inpur[name=title]&#x27;</span>).val(),</span><br><span class="line">            content = $(<span class="string">&#x27;textarea&#x27;</span>).val();</span><br><span class="line">        $(<span class="built_in">this</span>).ajaxSubmit(&#123;</span><br><span class="line">            type: <span class="string">&#x27;post&#x27;</span>, <span class="comment">// 提交方式 get/post</span></span><br><span class="line">            url: <span class="string">&#x27;your url&#x27;</span>, <span class="comment">// 需要提交的 url</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">                <span class="string">&#x27;content&#x27;</span>: content</span><br><span class="line">            &#125;,</span><br><span class="line">            success: function(data) &#123; <span class="comment">// data 保存提交后返回的数据，一般为 json 数据</span></span><br><span class="line">                <span class="comment">// 此处可对 data 作相关处理</span></span><br><span class="line">                alert(<span class="string">&#x27;提交成功！&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="built_in">this</span>).resetForm(); <span class="comment">// 提交后重置表单</span></span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 阻止表单自动提交事件，必须返回false，否则表单会自己再做一次提交操作，并且页面跳转</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="17-admin页面提交等待效果"><a href="#17-admin页面提交等待效果" class="headerlink" title="17.admin页面提交等待效果"></a>17.admin页面提交等待效果</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 通知消息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap-notify.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/lightyear.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/main.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 消息提示示例 按钮的id为example-success-notify</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;#example-success-notify&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;show&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 假设ajax提交操作</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;hide&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            lightyear.<span class="title function_">notify</span>(<span class="string">&#x27;修改成功，页面即将自动跳转~&#x27;</span>, <span class="string">&#x27;success&#x27;</span>, <span class="number">3000</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1e3</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;#example-error-notify&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;show&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 假设ajax提交操作</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;hide&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            lightyear.<span class="title function_">notify</span>(<span class="string">&#x27;服务器错误，请稍后再试~&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>, <span class="number">100</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1e3</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面加载等待效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lightyear.loading(&#x27;show&#x27;);  // 显示</span><br><span class="line">lightyear.loading(&#x27;hide&#x27;);  // 隐藏</span><br><span class="line"></span><br><span class="line">//延时执行在1000毫秒后执行这个function</span><br><span class="line">setTimeout(function() &#123;</span><br><span class="line">                        lightyear.loading(&#x27;hide&#x27;);</span><br><span class="line">                        lightyear.notify(&#x27;修改成功，页面即将自动跳转~&#x27;, &#x27;success&#x27;, 3000);</span><br><span class="line">                    &#125;, 1000);</span><br></pre></td></tr></table></figure><p>消息提示</p><p>消息提示采用的是bootstrap-notify插件，这里包装了一下(包装方法来自DolphinPHP)，您也可以直接使用bootstrap-notify。</p><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">$msg</td><td align="left">提示信息</td></tr><tr><td align="left">$type</td><td align="left">提示类型：’info’, ‘success’, ‘warning’, ‘danger’</td></tr><tr><td align="left">$delay</td><td align="left">定义消息提示消失的时间，毫秒数</td></tr><tr><td align="left">$icon</td><td align="left">图标，例如：’mdi-emoticon-happy’，具体参考<a href="lyear_ui_icons.html">图标</a></td></tr><tr><td align="left">$from</td><td align="left">‘top’ 或 ‘bottom’</td></tr><tr><td align="left">$align</td><td align="left">‘left’, ‘right’, ‘center’</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lightyear.notify(&#x27;修改成功，页面即将自动跳转~&#x27;, &#x27;success&#x27;, 5000, &#x27;mdi mdi-emoticon-happy&#x27;, &#x27;top&#x27;, &#x27;center&#x27;);</span><br></pre></td></tr></table></figure><h3 id="实例-发信息"><a href="#实例-发信息" class="headerlink" title="实例-发信息"></a>实例-发信息</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>引入js</span><br><span class="line"></span><br><span class="line">&lt;!-- 通知消息--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap-notify.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/lightyear.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/main.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!-- 导入jquery.<span class="property">form</span>.<span class="property">js</span>用于异步提交form表单 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery.form.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>用@<span class="title class_">Controller</span>+@<span class="title class_">ResponseBody</span>  或者 @<span class="title class_">RestController</span></span><br><span class="line"></span><br><span class="line">@<span class="title class_">PostMapping</span>(<span class="string">&quot;/url&quot;</span>)</span><br><span class="line">@<span class="title class_">ResponseBody</span><span class="comment">//返回json数据判断是否成功！！</span></span><br><span class="line">public <span class="title class_">String</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;</span><br><span class="line">    reyurn <span class="string">&quot;a&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>页面加载等待效果</span><br><span class="line"></span><br><span class="line">lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;show&#x27;</span>);  <span class="comment">// 显示</span></span><br><span class="line">lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;hide&#x27;</span>);  <span class="comment">// 隐藏</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//延时执行在1000毫秒后执行这个function</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                        lightyear.<span class="title function_">loading</span>(<span class="string">&#x27;hide&#x27;</span>);</span><br><span class="line">                        lightyear.<span class="title function_">notify</span>(<span class="string">&#x27;修改成功，页面即将自动跳转~&#x27;</span>, <span class="string">&#x27;success&#x27;</span>, <span class="number">3000</span>);</span><br><span class="line">                    &#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>提交js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> options = &#123; </span><br><span class="line">    <span class="attr">target</span>: ‘#output1<span class="string">&#x27;,     //把服务器返回的内容放入id为output1的元素中 </span></span><br><span class="line"><span class="string">    beforeSubmit: showRequest,   //提交前的回调函数 </span></span><br><span class="line"><span class="string">    success: showResponse,     //提交后的回调函数 </span></span><br><span class="line"><span class="string">    error: errorResponse,//遇到后台报错函数</span></span><br><span class="line"><span class="string">    url: url,      //默认是form的action，如果声明，则会覆盖 </span></span><br><span class="line"><span class="string">    type: type,   //默认是form的method，如果声明，则会覆盖 </span></span><br><span class="line"><span class="string">    dataType: json ,  //接受服务端返回的类型 </span></span><br><span class="line"><span class="string">    clearForm: true,  //成功提交后，清除所有表单元素的值 </span></span><br><span class="line"><span class="string">    resetForm: true,  //成功提交后，重置所有表单元素的值 </span></span><br><span class="line"><span class="string">    timeout: 3000    //限制请求的时间，当请求大于3秒后，跳出请求 </span></span><br><span class="line"><span class="string">&#125;；</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">示例：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;!--发送信息--&gt;</span></span><br><span class="line"><span class="string">function adminSendMail()&#123;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    //显示等待效果   --一直转圈！！！！</span></span><br><span class="line"><span class="string">    lightyear.loading(&#x27;</span>show<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    //提交form表单 #id</span></span><br><span class="line"><span class="string">    $(&#x27;</span>#sendMail<span class="string">&#x27;).ajaxSubmit(&#123;</span></span><br><span class="line"><span class="string">        url : &quot;/admin/mail/send&quot;,</span></span><br><span class="line"><span class="string">        //data为返回数据</span></span><br><span class="line"><span class="string">        success: function(data) &#123;</span></span><br><span class="line"><span class="string">            //结果成功</span></span><br><span class="line"><span class="string">            if(data == 1)&#123;</span></span><br><span class="line"><span class="string">                setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">                    lightyear.loading(&#x27;</span>hide<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">                    lightyear.notify(&#x27;</span>发送信息成功，请前往已发送信息查看~<span class="string">&#x27;, &#x27;</span>success<span class="string">&#x27;, 3000);</span></span><br><span class="line"><span class="string">                &#125;, 1000);</span></span><br><span class="line"><span class="string">            &#125;//结果失败</span></span><br><span class="line"><span class="string">            else&#123;</span></span><br><span class="line"><span class="string">                setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">                    lightyear.loading(&#x27;</span>hide<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">                    lightyear.notify(&#x27;</span>发送信息失败，请稍后再试~<span class="string">&#x27;, &#x27;</span>danger<span class="string">&#x27;, 3000);</span></span><br><span class="line"><span class="string">                &#125;, 1000);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        error : function() &#123;</span></span><br><span class="line"><span class="string">            setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">                lightyear.loading(&#x27;</span>hide<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">                lightyear.notify(&#x27;</span>出现了错误，请稍后再试~<span class="string">&#x27;, &#x27;</span>danger<span class="string">&#x27;, 3000);</span></span><br><span class="line"><span class="string">            &#125;, 1000);</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        //超时5秒跳出</span></span><br><span class="line"><span class="string">        timeout: 5000</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    //断后操作隐藏窗口之类</span></span><br><span class="line"><span class="string">    //隐藏输入表单弹窗</span></span><br><span class="line"><span class="string">    $(&#x27;</span>#exampleModal<span class="string">&#x27;).modal(&quot;hide&quot;);</span></span><br><span class="line"><span class="string">    return false;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="18-对话框"><a href="#18-对话框" class="headerlink" title="18.对话框"></a>18.对话框</h2><!--对话框--><script type="text/javascript" th:src="@{/js/jconfirm/jquery-confirm.min.js}"></script><script type="text/javascript" th:src="@{/js/main.min.js}"></script><script type="text/javascript">$('.example-p-1').on('click', function () {    $.alert({        title: '嗨',        content: '这是对用户的简单提示框。 <br> 一些 <strong>HTML</strong> <em>内容</em>',        buttons: {            confirm: {                text: '确认',                btnClass: 'btn-primary',                action: function(){                    $.alert('你点击了确认!');                }            },            cancel: {                text: '取消',                action: function () {                    $.alert('你点击了取消!');                }            }        }    });});$('.example-p-2').on('click', function () {    $.confirm({        title: '对话框',        content: '一些内容...',        buttons: {            confirm: {                text: '确认',                action: function(){                    $.alert('确认的!');                }            },            cancel: {                text: '关闭',                action: function(){                    $.alert('取消的!');                }            },            somethingElse: {                text: '其他',                btnClass: 'btn-blue',                keys: ['enter', 'shift'],                action: function(){                    $.alert('其他的选择？');                }            }        }    });});$('.example-p-3').on('click', function () {    $.confirm({        title: '提示',        content: '' +        '<form action="" class="formName">' +        '<div class="form-group">' +        '<label>请输入您的姓名</label>' +        '<input type="text" placeholder="姓名" class="name form-control" required />' +        '</div>' +        '</form>',        buttons: {            formSubmit: {                text: '提交',                btnClass: 'btn-blue',                action: function () {                    var name = this.$content.find('.name').val();                    if(!name){                        $.alert('请您输入您的姓名');                        return false;                    }                    $.alert('您的姓名是： ' + name);                }            },            cancel: {                text: '取消'            },        },        onContentReady: function () {            var jc = this;            this.$content.find('form').on('submit', function (e) {                e.preventDefault();                jc.$$formSubmit.trigger('click');            });        }    });});$('.example-p-4').on('click', function () {    $.confirm({        title: '错误提示',        content: '笑江湖浪迹十年游，空负少年头。对铜驼巷陌，吟情渺渺，心事悠悠！酒冷诗残梦断，南国正清秋。',        type: 'red',        typeAnimated: true,        buttons: {            tryAgain: {                text: '重试',                btnClass: 'btn-red',                action: function(){                }            },            close: {                text: '关闭'            }        }    });});$('.example-p-5').on('click', function () {    $.confirm({        title: '成功',        content: '难消受灯昏罗帐，怅昙花一现恨难休！飘零惯，金戈铁马，拼葬荒丘！',        type: 'green',        buttons: {            omg: {                text: '谢谢',                btnClass: 'btn-green',            },            close: {                text: '关闭',            }        }    });});$('.example-p-6').on('click', function () {    $.confirm({        title: '警告',        content: '把剑凄然望，无处招归舟。明日天涯路远，问谁留楚佩，弄影中洲？数英雄儿女，俯仰古今愁。',        type: 'orange',        typeAnimated: false,        buttons: {            omg: {                text: '重试',                btnClass: 'btn-orange',            },            close: {                text: '关闭',            }        }    });});</script><h2 id="19-返回上一层"><a href="#19-返回上一层" class="headerlink" title="19.返回上一层"></a>19.返回上一层</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;javascript:history.back(-1);return false;&quot;</span>&gt;</span>返 回<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="20-模态框"><a href="#20-模态框" class="headerlink" title="20.模态框"></a>20.模态框</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  修改id 和 aria-lableledby 即可修改模态框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mailEdit&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;mailEdit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span> <span class="attr">role</span>=<span class="string">&quot;document&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span>&gt;</span>编辑消息<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span>  <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">id</span>=<span class="string">&quot;admin/mail/edit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sendMail&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>  <span class="attr">class</span>=<span class="string">&quot;control-label&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h5</span>&gt;</span>标题：<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mailTitle&quot;</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>  <span class="attr">class</span>=<span class="string">&quot;control-label&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h5</span>&gt;</span>消息内容：<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mailTxt&quot;</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;adminSendMail()&quot;</span>&gt;</span>发送消息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--触发模态框 添加data-toggle 和 data-target（对应aria-lableledby的值） --&gt;</span></span><br><span class="line"> data-toggle=&quot;modal&quot; data-target=&quot;#mailEdit&quot;</span><br></pre></td></tr></table></figure><h2 id="21-html强制刷新当前页面（延时3秒后）"><a href="#21-html强制刷新当前页面（延时3秒后）" class="headerlink" title="21.html强制刷新当前页面（延时3秒后）"></a>21.html强制刷新当前页面（延时3秒后）</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(function() &#123;</span><br><span class="line">    window.location.reload();</span><br><span class="line">&#125;, 3000);</span><br></pre></td></tr></table></figure><h2 id="22-js修改input的placeholder"><a href="#22-js修改input的placeholder" class="headerlink" title="22.js修改input的placeholder"></a>22.js修改input的placeholder</h2><p>方法1：通过js来设置文本框input的placeholder值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;input&quot;).setAttribute(&quot;placeholder&quot;,&quot;新文本内容&quot;);</span><br></pre></td></tr></table></figure><p>方法2：通过jquery设置文本框input的placeholder值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;#input&#x27;).attr(&#x27;placeholder&#x27;,&#x27;新文本内容&#x27;)；</span><br></pre></td></tr></table></figure><h2 id="23-判断input值为空"><a href="#23-判断input值为空" class="headerlink" title="23.判断input值为空"></a>23.判断input值为空</h2><p><a href="https://blog.csdn.net/weixin_42645716/article/details/87984442">https://blog.csdn.net/weixin_42645716/article/details/87984442</a></p><p>一、Input获取value</p><input type="text" value="请输入姓名" name="name" id="name"><script>var name;     name = document.getElementById("name").value    name = form1.name.value    name = $("#name").val()    name =  $("input[id='name']").val()    name = $("#name").attr("value")    name = $("input[id='name']").attr("value")</script><p>二、判断value是否为空</p><p>&#x2F;&#x2F; 方法一:<br>if(name &#x3D;&#x3D; null || name &#x3D;&#x3D; undefined || name &#x3D;&#x3D; ‘’){<br>    console.log(“value 为空”)<br>}<br>&#x2F;&#x2F; 方法二:<br>if(name.length &gt; 0 ){<br>    console.log(“value 不为空”)<br>}<br>三、null、undefined、‘’的区别</p><p>null:空对象\不是对象,转为数值为0<br>undefined:全局对象window的一个特殊属性.undefined表示”缺少值”，就是此处应该有一个值，但是还没有定义。转为数值为NaN.典型用法是：</p><p>（1）变量被声明了，但没有赋值时，就等于undefined。<br>（2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。<br>（3）对象没有赋值的属性，该属性的值为undefined。<br>（4）函数没有返回值时，默认返回undefined。</p><h1 id="二-springboot"><a href="#二-springboot" class="headerlink" title="二.springboot"></a>二.springboot</h1><h2 id="1-获取时间戳"><a href="#1-获取时间戳" class="headerlink" title="1.获取时间戳"></a>1.获取时间戳</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Timestamp</span> <span class="variable">timestamp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timestamp</span>(System.currentTimeMillis());</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy/MM/dd hh:mm:ss&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">timestamp</span> <span class="operator">=</span> sdf.format(log.getTime());<span class="comment">//格式化器</span></span><br><span class="line"></span><br><span class="line">thymeleaf 时间戳格式化器</span><br><span class="line">  th:text=<span class="string">&quot;$&#123;#dates.format(Time, &#x27;yyyy-MM-dd hh:mm:ss&#x27;)&#125;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2-从html页面的form表单提取数据与封装"><a href="#2-从html页面的form表单提取数据与封装" class="headerlink" title="2.从html页面的form表单提取数据与封装"></a>2.从html页面的form表单提取数据与封装</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestParam(&quot;select&quot;)</span> Integer val   <span class="comment">//根据name获取值</span></span><br><span class="line">    Model model         <span class="comment">//封装model</span></span><br><span class="line">    model.addAttribute(<span class="string">&quot;focusgoods&quot;</span>,selectallfocusbyid);   <span class="comment">//名值对形式</span></span><br><span class="line">    HttpSession session</span><br><span class="line">    session.setAttribute(<span class="string">&quot;goodshot&quot;</span>,goods);</span><br></pre></td></tr></table></figure><h2 id="3-添加log日志"><a href="#3-添加log日志" class="headerlink" title="3.添加log日志"></a>3.添加log日志</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Timestamp</span> <span class="variable">timestamp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timestamp</span>(System.currentTimeMillis());</span><br><span class="line"><span class="type">log</span> <span class="variable">us_login_log</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">log</span>(<span class="number">0</span>,<span class="string">&quot;用户登录&quot;</span>,timestamp,email);</span><br><span class="line">logService.insertlog(us_login_log);</span><br><span class="line"><span class="comment">//操作类型 0增1删2改3查4登录 、 操作 、时间 、 操作者</span></span><br></pre></td></tr></table></figure><h2 id="4-SpringBoot热部署"><a href="#4-SpringBoot热部署" class="headerlink" title="4.SpringBoot热部署"></a>4.SpringBoot热部署</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--dependency 中devtools热部署--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">            &lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">            &lt;scope&gt;<span class="literal">true</span>&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--build 中devtools设置<span class="literal">true</span>--&gt;</span><br><span class="line"></span><br><span class="line">&lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;fork&gt;<span class="literal">true</span>&lt;/fork&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">    </span><br><span class="line">&lt;!--application.yml中配置一下devtools--&gt;    </span><br><span class="line">spring:</span><br><span class="line">  devtools:</span><br><span class="line">    restart:</span><br><span class="line">      enabled: <span class="literal">true</span>  #设置开启热部署</span><br><span class="line">      additional-paths: src/main/java #重启目录</span><br><span class="line">      exclude: WEB-INF<span class="comment">/**</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment"> 修改idea设置。</span></span><br><span class="line"><span class="comment">（1）File-Settings-Compiler-Build Project automatically</span></span><br><span class="line"><span class="comment">（2）ctrl + shift + alt + / ,选择Registry,勾上 Compiler autoMake allow when app running</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">crtl+s 热启动</span></span><br></pre></td></tr></table></figure><h2 id="5-String-转Int"><a href="#5-String-转Int" class="headerlink" title="5.String 转Int"></a>5.String 转Int</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer.parseInt(id)</span><br></pre></td></tr></table></figure><h2 id="6-模糊查询"><a href="#6-模糊查询" class="headerlink" title="6.模糊查询"></a>6.模糊查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;Select * From message where title like CONCAT(&#x27;%&#x27;,#&#123;title&#125;,&#x27;%&#x27;)&quot;)</span></span><br></pre></td></tr></table></figure><h2 id="7-判断一个list集合是否为空"><a href="#7-判断一个list集合是否为空" class="headerlink" title="7.判断一个list集合是否为空"></a>7.判断一个list集合是否为空</h2><p><strong>isEmpty() 和(list.size() &#x3D;&#x3D; 0)都是判断List内容是否为空。</strong></p><p><strong>null判断是判断有没有对list集合分配内存空间，而不是list里面内容是否为空</strong></p><h2 id="8-转发与重定向"><a href="#8-转发与重定向" class="headerlink" title="8.转发与重定向"></a>8.转发与重定向</h2><h3 id="1-转发"><a href="#1-转发" class="headerlink" title="1.转发"></a>1.转发</h3><h4 id="1-使用-“forword”-关键字"><a href="#1-使用-“forword”-关键字" class="headerlink" title="1.使用 “forword” 关键字"></a>1.使用 “forword” 关键字</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;forword:/url&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="2-使用servlet-提供的API"><a href="#2-使用servlet-提供的API" class="headerlink" title="2.使用servlet 提供的API"></a>2.使用servlet 提供的API</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(<span class="string">&quot;/url&quot;</span>).forward(request,response);</span><br></pre></td></tr></table></figure><h3 id="2-重定向"><a href="#2-重定向" class="headerlink" title="2.重定向"></a>2.重定向</h3><h4 id="1-使用servlet-提供的API"><a href="#1-使用servlet-提供的API" class="headerlink" title="1.使用servlet 提供的API"></a>1.使用servlet 提供的API</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HttpServletResponse response;</span><br><span class="line">response.sendRedirect(<span class="string">&quot;/url&quot;</span>);<span class="comment">//转发到制定的url及对应Controler</span></span><br></pre></td></tr></table></figure><h4 id="2-使用-“redirect”-关键字"><a href="#2-使用-“redirect”-关键字" class="headerlink" title="2.使用 “redirect” 关键字"></a>2.使用 “redirect” 关键字</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;redirect:/url&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="9-分页配置"><a href="#9-分页配置" class="headerlink" title="9.分页配置"></a>9.分页配置</h2><h3 id="1-分页工具"><a href="#1-分页工具" class="headerlink" title="1.分页工具"></a>1.分页工具</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageUtils</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> currentPage; <span class="comment">//当前页码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> pageSize;    <span class="comment">//每页显示的记录数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> totalPage;   <span class="comment">//总页数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> totalCount;  <span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; list;   <span class="comment">//封装查询结果的集合</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurrentPage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> currentPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCurrentPage</span><span class="params">(<span class="type">int</span> currentPage)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.currentPage = currentPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPageSize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPageSize</span><span class="params">(<span class="type">int</span> pageSize)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTotalPage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> totalPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotalPage</span><span class="params">(<span class="type">int</span> totalPage)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.totalPage = totalPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTotalCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> totalCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotalCount</span><span class="params">(<span class="type">int</span> totalCount)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.totalCount = totalCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">getList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setList</span><span class="params">(List&lt;T&gt; list)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-html分页配置"><a href="#2-html分页配置" class="headerlink" title="2.html分页配置"></a>2.html分页配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestParam(value = &quot;currentPage&quot;, defaultValue = &quot;1&quot;)</span> <span class="type">int</span> currentPage</span><br><span class="line">    <span class="comment">//传入页面，如不制定默认为3</span></span><br><span class="line">    <span class="comment">//还可以接受一些其他参数</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//页面显示情况</span></span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">            &lt;td colspan=<span class="string">&quot;5&quot;</span> align=<span class="string">&quot;right&quot;</span>&gt;</span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                &amp;nbsp;&amp;nbsp;&amp;nbsp;共$&#123;allGoods.totalCount&#125;条记录&amp;nbsp;&amp;nbsp;共$&#123;allGoods.totalPage&#125;页&amp;nbsp;&amp;nbsp;</span><br><span class="line">                第$&#123;allGoods.currentPage&#125;页&amp;nbsp;&amp;nbsp;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;allGoods.currentPage != 1&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;/adminGoods/selectGoods?currentPage=1&quot;</span>&gt;首页&lt;/a&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;/adminGoods/selectGoods?currentPage=$&#123;allGoods.currentPage-1&#125;&quot;</span>&gt;上一页&lt;/a&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;allGoods.currentPage != allGoods.totalPage&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;/adminGoods/selectGoods?currentPage=$&#123;allGoods.currentPage+1&#125; &quot;</span>&gt;下一页&lt;/a&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;/adminGoods/selectGoods?currentPage=$&#123;allGoods.totalPage&#125;&quot;</span>&gt;尾页&lt;/a&gt;</span><br><span class="line">                &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="3-分页实现"><a href="#3-分页实现" class="headerlink" title="3.分页实现"></a>3.分页实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">PageUtils&lt;Goods&gt; page = adminGoodsService.selectGoods(currentPage);   <span class="comment">//currentPage:当前页数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//service层方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> PageUtils&lt;Goods&gt; <span class="title function_">selectGoods</span><span class="params">(<span class="type">int</span> currentPage)</span> &#123;</span><br><span class="line">        PageUtils&lt;Goods&gt; goods = <span class="keyword">new</span> <span class="title class_">PageUtils</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//定义每页显示的记录数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">15</span>;</span><br><span class="line">        <span class="comment">//查询总记录数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalCount</span> <span class="operator">=</span> goodsMapper.findCount();  <span class="comment">//查询当前总记录数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">tc</span> <span class="operator">=</span> totalCount;</span><br><span class="line">        <span class="comment">//查询总页数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalPage</span> <span class="operator">=</span> (<span class="type">int</span>) Math.ceil(tc / pageSize);</span><br><span class="line">        <span class="comment">//查询每页显示的结果集</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line">        List&lt;Goods&gt; lists = goodsMapper.findLists(start, pageSize);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始封装</span></span><br><span class="line">        goods.setCurrentPage(currentPage);</span><br><span class="line">        goods.setPageSize(pageSize);</span><br><span class="line">        goods.setTotalCount(totalCount);</span><br><span class="line">        goods.setTotalPage(totalPage);</span><br><span class="line">        goods.setList(lists);</span><br><span class="line">        <span class="keyword">return</span> goods;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己更换红米4x和红米3主板</title>
      <link href="/peaky/2020/09/25/61901496.html"/>
      <url>/peaky/2020/09/25/61901496.html</url>
      
        <content type="html"><![CDATA[<p>​    </p><p>​    红米4x的主板，换到红米3的手机中到底是否能开机?</p><p>​    两个手机现在都正常，大型大脑移植手术是否可行？</p><span id="more"></span><p>​    内部主板拆开看了，不得了，一模一样，应该可行</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/6f948128b0735e1e317928505e60cb17.png" alt="6f948128b0735e1e317928505e60cb17.png"></p><p>​    红米4X背部一览：</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/9a3b84a8a93a34e4b7e5a7b6fe6c326b.png" alt="9a3b84a8a93a34e4b7e5a7b6fe6c326b.png"></p><p>​    吐槽一下模具问题，基本一样的模具，但是距离感应器是有变化的，逆天而行，差点把主板按弯[受虐滑稽]。</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/45551c4a62c213a9d3b363ccdf03e5fb.png" alt="45551c4a62c213a9d3b363ccdf03e5fb.png"></p><p>​    然后友情提醒，无论是拆机研究还是自己更换电池，都要小心一点，因为现在的电池背胶，是一种易拉胶，但是，我用手一拽，直接就断了[流泪]，正确做法就是用笔或其他圆形工具进行缠绕，慢慢拉出来，不然只能使用蛮力法[受虐滑稽]图2，如果用铁质撬棒还容易自制C4一枚，所以更换电池需谨慎而行，然后换完主板后，点开机键有反应，但屏幕点不亮，因此想换主板的童鞋可以暂且放下这个想法，不只什么原因，两个都点不亮。</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/6376b408ce9891a22014f16abc41972f.png" alt="6376b408ce9891a22014f16abc41972f.png"></p><p>​    看看2个机的合影</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/f55a05e182e1c3100cd86b215b6b27b4.png" alt="f55a05e182e1c3100cd86b215b6b27b4.png"></p><p>​    其次要注意屏幕排线，在撬电池的时候，蹭到排线了，没错，是我大聪明，现在大脑回复后都可以开机，但其中一台永远离开了我，因排线断裂而导致无法触屏，这遗憾怎了得，虽然是4年前的手机，唉。</p><p>​    零件都在这里了</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/f55a05e182e1c3100cd86b215b6b27b4.png" alt="f55a05e182e1c3100cd86b215b6b27b4.png"></p><p>​    最后友情提示，手残党[滑稽]比如我，不要随便拆机，螺丝丢了好几个，真的心不细的人真心忙不过来，手忙脚乱的。还有，倒腾破烂手机真舒服，4年前的骁龙430竟然还能再战?刷了安卓10日常续航备用机一点毛病没有，国产手机真挺折腾的!</p><p><strong>本文作者：</strong> 驼峰先生</p><p><strong>本文链接：</strong> <a href="https://fengzi.store/2020/09/25/61901496.html">https://fengzi.store/2020/09/25/61901496.html</a></p><p><strong>版权声明：</strong> 本博客所有文章遵循 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC 4.0 BY-SA</a> 版权协议。转载请注明出处！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑IDM的安装及使用</title>
      <link href="/peaky/2020/09/23/7f36550b.html"/>
      <url>/peaky/2020/09/23/7f36550b.html</url>
      
        <content type="html"><![CDATA[<p>​    说起下载工具，大家是不是还在使用迅雷、电驴、旋风等等下载器呢？曾经的种子下载风靡一时，通宵下载也是常事，随着时代的进步嘛，一代产品接着一代，今天要介绍的，就是我在使用的电脑端下载神器：IDM！</p><span id="more"></span><p>​    说起IDM还要归根于手机下载，因为之前我下载手机刷机包，是通过腾讯微云，因老马政策，首月会员0元，而我又是有5个QQ的男人，因此白嫖了5个月，好不痛快，但人力有穷时，在我最后一个QQ的微云会员结束时，下载速度恢复到了100K&#x2F;s，通常1个小时下完的刷机包，延长到了一夜！</p><p><img src="https://i.niupic.com/images/2020/09/19/8Hcg.jpg"></p><p>​    对此我决定不再坐以待毙，寻找其他的下载方法！</p><p>​    </p><p><img src="https://i.niupic.com/images/2020/09/19/8Hch.jpg"></p><p>​    下载器，手机最先安装的时ADM，正版是有8线程下载，每个线程有100K&#x2F;s，8个那就有800K&#x2F;s，嗯暂时解决燃眉之急，一次偶然之下，在评论区留意到了大佬的破解版，最高128线程！！ 不过下载还是取决于带宽的，我的使用64线程，带宽就基本跑满了，这就是多线程下载，解决了限速的问题。</p><p><img src="https://i.niupic.com/images/2020/09/19/8HbG.jpg"></p><p>​    好了回归正题，电脑端IDM的下载时在使用度盘下载文件时的可恶限速，因此将其解析出原本的地址，然后通过IDM多线程下载以达到提速目的（以后细谈），因此电脑端IDM进入我的视野，同时成为我日常使用的好伙伴！</p><p><img src="https://i.niupic.com/images/2020/09/19/8HbC.jpg"></p><p>​    先奉上下载地址：<a href="https://www.lanzoux.com/ikITxgt5kbg">下载地址</a></p><p>​    然后说使用方法！ 本软件下载后解压到你要安装的目录，然后打开它。</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/fe246d46ad68d120b610a5b0cd92223f.png" alt="fe246d46ad68d120b610a5b0cd92223f.png"></p><p>​    双击绿化.bat ，这个批处理会激活IDM在本机使用，不要忘了这一步哦；</p><p>​    然后打开Chrome，这时会提示是否安装IDM扩展，因为我的已经安装过了，就不截图了，点击是立即安装，就会出现这个图标在右上角（我用的百分浏览器）。</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/8f2063286ac37f9e08a19ecb1b4a2159.png" alt="8f2063286ac37f9e08a19ecb1b4a2159.png"></p><p>​    好的，你的IDM已经安装完成，这个图标表示正在嗅探你访问的网站内的资源链接，可以愉快的开始下载了，下面简单介绍几种下载常见资源的方法，其他进阶使用等有时间再说吧！</p><p>​    </p><pre><code> 1.右键IDM下载（一般能这样的也不用IDM，直接图片另存为就行了哈哈，做个简单介绍）这个截图死活截不到，有能截到的求教方法！</code></pre><p>​    </p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/fff79c1d5b332ca933ccee78381b3cff.png" alt="fff79c1d5b332ca933ccee78381b3cff.png"></p><p>​    2.视频嗅探，比如下载B站上面的视频，尽管有其他万种方法，但这种我觉得还是属于哪种好用的！（我下载的插件太多，IDM是后面那一个下载该视频的那个窗口，这个是在嗅探到窗口内有链接资源时会自动出现的，觉得烦可以关掉，虽然我不知道再哪里可以再次打开，但，重装解决所有问题，不要问我为啥知道！我也是受害者）</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/6da9a79af31a891a765cba1f2bc63efc.png" alt="6da9a79af31a891a765cba1f2bc63efc.png"></p><p>​    点击下载该视频有一个弹窗：</p><p><a href="https://imgchr.com/i/wX7IaQ"><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/862a1c01e5c705313982714e30ab6dee.png" alt="862a1c01e5c705313982714e30ab6dee.png"></a></p><p>​    其中第一个最小我下载是音频文件，遂直接下载最大，果然是该视频！（其他俩没试，因为我懒，盲猜弹幕或者纯视频不带声音）</p><p>​    音频同理：</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/71abe23f22c4703b7b93423979749c81.png" alt="71abe23f22c4703b7b93423979749c81.png"></p><p>​    这是个在线听音乐网站：链接在此：<a href="http://lcoc.top/666/">音乐</a></p><p>​    不过应该不是无损音质，自己找资源吧！</p><p>​    </p><p>​    3.基础，找到链接直接建任务下载：</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/fe246d46ad68d120b610a5b0cd92223f.png" alt="fe246d46ad68d120b610a5b0cd92223f.png"></p><p>​    双击IDMan.exe运行 新建任务 - 输入链接就可以了，一起来享受高速下载吧！</p><p><img src="https://i.niupic.com/images/2020/09/19/8HbN.jpeg"></p><p>​    今天的分享就到此为止吧！再见。</p><p><img src="https://i.niupic.com/images/2020/09/19/8HbM.jpeg"></p><p><strong>本文作者：</strong> 驼峰先生</p><p><strong>本文链接：</strong> <a href="https://fengzi.store/2020/09/23/7f36550b.html">https://fengzi.store/2020/09/23/7f36550b.html</a></p><p><strong>版权声明：</strong> 本博客所有文章遵循 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC 4.0 BY-SA</a> 版权协议。转载请注明出处！</p>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 电脑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航</title>
      <link href="/peaky/2020/09/21/30300b5a.html"/>
      <url>/peaky/2020/09/21/30300b5a.html</url>
      
        <content type="html"><![CDATA[<h1 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h1><table><thead><tr><th><a href="http://www.sixia.xyz/">小众导航</a></th><th><a href="http://hao.xuewps.com/">办公导航</a></th><th><a href="http://gongju.dadiyouhui.cn/beijing/znh/fa1/dyfl.htm">阿毅导航</a></th><th><a href="https://tools.miku.ac/">米库工具</a></th><th><a href="https://5iux.cn/">5iux导航</a></th><th><a href="https://www.hifast.cn/">快导航</a></th></tr></thead><tbody><tr><td><a href="https://www.xfisher.com/">咸鱼导航</a></td><td><a href="https://www.chaidu.com/">柴都导航</a></td><td><a href="http://daohang.dadiyouhui.cn/daohang/sou.html">常用工具导航</a></td><td><a href="https://jubt.cf/cn/index.html">聚BT</a></td><td><a href="http://www.frontendjs.com/">前站导航</a></td><td><a href="https://www.28so.cn/">技术导航</a></td></tr><tr><td><a href="http://c.24kdh.com/">24K导航</a></td><td><a href="http://ilxdh.com/">龙轩导航</a></td><td><a href="https://adzhp.cn/">爱达杂货铺</a></td><td><a href="http://dh.51dyyg.cn/dans/3.html">帝云导航</a></td><td><a href="https://kim.plopco.com/">KIM</a></td><td><a href="https://www.bidianer.com/">笔点</a></td></tr><tr><td><a href="http://kyon945.ys168.com/">储物间</a></td><td><a href="https://www.zhihu.com/question/23289709">知乎收藏</a></td><td><a href="https://www.tool22.com/">兔儿工具</a></td><td><a href="https://orxing.top/nav/">不可思议导航</a></td><td><a href="https://nav.hzwdd.cn/">西瓜导航</a></td><td><a href="https://www.xiacoo.com/">虾库网</a></td></tr><tr><td><a href="https://nav.iowen.cn/">一位导航</a></td><td><a href="https://n6app.com/">牛6导航</a></td><td><a href="https://nav.hzwdd.cn/">西瓜导航</a></td><td><a href="https://zxmee.com/">经典工具</a></td><td><a href="http://www.aldh.cn/">阿里导航</a></td><td><a href="https://www.juzip.cn/">橘子皮</a></td></tr><tr><td><a href="http://qiaomuyun.cn/">乔木云导航</a></td><td><a href="https://eesdh.com/">一舍导航</a></td><td><a href="https://6iu.cn/">iu导航</a></td><td><a href="http://hao.tiegg.cn/">铁哥哥</a></td><td><a href="http://www.nvhacker.com/">女黑客导航</a></td><td><a href="https://www.smoxo.cn/">神马导航</a></td></tr><tr><td><a href="https://www.yiw1.com/">伊万导航</a></td><td><a href="https://ionego.net/">OneGo</a></td><td><a href="http://wanyouw.com/">万有导航</a></td><td><a href="https://webjike.com/">小呆呆</a></td><td><a href="https://noisevip.cn/">noise</a></td><td><a href="https://yamadie.net/">yama</a></td></tr><tr><td><a href=""></a></td><td><a href=""></a></td><td><a href=""></a></td><td><a href=""></a></td><td><a href=""></a></td><td><a href=""></a></td></tr><tr><td><a href=""></a></td><td><a href=""></a></td><td><a href=""></a></td><td><a href=""></a></td><td><a href=""></a></td><td><a href=""></a></td></tr></tbody></table><span id="more"></span><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h2><table><thead><tr><th><a href="https://c.runoob.com/more/shapefly-diagram/">在线画图</a></th><th><a href="https://www.runoob.com/">菜鸟教程首页</a></th><th><a href="https://www.layui.com/">layui</a></th><th><a href="https://tinypng.com/">压缩图片</a></th><th><a href="https://processon.com/">在线画图</a></th><th><a href="http://l9a.a45.dadiyouhui.cn/app/tool/tool.html">阿毅同学的工具箱</a></th></tr></thead><tbody><tr><td><a href="https://app.xunjiepdf.com/">迅捷PDF转换器</a></td><td><a href="https://www.mdnice.com/">在线markdown工具</a></td><td><a href="http://www.5h5h.net/">网盘搜索口</a></td><td><a href="http://pan.duiai.cc/">外链</a></td><td><a href="https://www.dute.org/">工具箱</a></td><td><a href="https://bigjpg.com/">无损放大</a></td></tr><tr><td><a href="http://xzc.cn/"><strong>快速创建收件夹</strong></a></td><td><a href="https://www.dute.org/markdown">在线markdown工具</a></td><td><a href="http://m.pansoula.com/">网盘搜索</a></td><td><a href="http://idea.medeming.com/jets/">idea激活码</a></td><td><a href="http://lookdiv.com/">pycharm激活码</a></td><td><a href="https://www.uupoop.com/">在线PS</a></td></tr><tr><td><a href="https://www.weixinsyt.com/">音频剪辑</a></td><td><a href="https://www.kapwing.com/">视频处理</a></td><td><a href="https://www.pdfpai.com/">PDF工具</a></td><td><a href="https://docsmall.com/">图片压缩</a></td><td><a href="https://love.appinn.com/">小众软件</a></td><td><a href="https://www.dute.org/code-snapshot">代码截图</a></td></tr></tbody></table><h2 id="玩机工具"><a href="#玩机工具" class="headerlink" title="玩机工具"></a>玩机工具</h2><table><thead><tr><th><a href="http://www.cnplugins.com/zhuanti/">chrome插件</a></th><th><a href="https://www.lanzous.com/b782252/">影音阅读</a></th><th></th></tr></thead><tbody><tr><td><a href="https://www.ventoy.net/cn/index.html">ventory主页</a></td><td><a href="https://www.lanzous.com/b782257/">下载工具</a></td><td></td></tr><tr><td><a href="https://miuiver.com/">miui历史包</a></td><td><a href="https://www.lanzous.com/b782258/">其它软件</a></td><td></td></tr><tr><td><a href="http://www.miui.com/download-312.html">miui历史包</a></td><td><a href="https://www.lanzous.com/b0ev536bg/">XP模块</a></td><td></td></tr><tr><td><a href="https://www.romck.cn/">ROM</a></td><td><a href="https://www.magisk.cool/">Magisk</a></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h2><table><thead><tr><th align="left"><a href="http://www.yc2050.com/">影视接口</a></th><th><a href="https://s.lol5s.com/">影视接口</a></th><th><a href="http://www.wpwtv.com/">影视接口</a></th><th><a href="https://www.80sdy1.com/">影视接口</a></th></tr></thead><tbody><tr><td align="left"><a href="http://1090ys1.com/">影视接口</a></td><td><a href="https://ddrk.me/">影视接口</a></td><td><a href="https://www.novipnoad.com/">影视接口</a></td><td><a href="https://www.nkdyw.com/">影视接口</a></td></tr><tr><td align="left"><a href="https://www.idybee.com/">影视接口</a></td><td><a href="https://www.dadatutu.cc/">影视接口</a></td><td><a href="https://www.juhuitv.com/">影视接口</a></td><td><a href="">影视接口</a></td></tr></tbody></table><h2 id="解析视频"><a href="#解析视频" class="headerlink" title="解析视频"></a>解析视频</h2><table><thead><tr><th><a href="http://lcoc.top/m2.2/">解析接口</a></th><th><a href="http://vip.jbsou.cn/?&rand=b082546951595a36bbb4ebda8601ec9a">解析接口</a></th><th><a href="http://www.qmaile.com/">解析接口</a></th><th><a href="http://www.6s6s.cc/">解析接口</a></th></tr></thead><tbody><tr><td><a href="http://gongju.dadiyouhui.cn/shipin/kan.html">解析接口</a></td><td><a href="http://tv.at38.cn/">解析接口</a></td><td><a href="http://www.vi0.cc/">解析接口</a></td><td><a href="http://tool.liumingye.cn/video/">解析接口</a></td></tr><tr><td><a href="http://lcoc.top/vip2.3/">解析接口</a></td><td><a href="http://down.jbsou.cn/">解析接口</a></td><td><a href="http://www.vi7.cc/">解析接口</a></td><td></td></tr></tbody></table><h2 id="娱乐"><a href="#娱乐" class="headerlink" title="娱乐"></a>娱乐</h2><table><thead><tr><th align="left"><a href="http://lcoc.top/666/">音乐</a></th><th><a href="http://www.at38.cn/">音乐下载</a></th><th><a href="http://lcoc.top/bizhi/">高清壁纸下载</a></th><th><a href="https://xydh.fun/andy7859">伊斯塔</a></th></tr></thead><tbody><tr><td align="left"><a href="https://www.bookmarkearth.com/">书签地球</a></td><td><a href="https://www.oll0.cn/archives">清早日记</a></td><td><a href="https://lanzous.com/b609827">手机软件</a></td><td><a href="https://myqqjd.com/">破解软件</a></td></tr><tr><td align="left"><a href="https://tool.lu/">在线工具</a></td><td><a href="https://www.atool99.com/">在线工具</a></td><td><a href="https://www.appinn.com/">小众软件</a></td><td></td></tr><tr><td align="left"><a href="http://n.lackk.com/">兰克导航</a></td><td><a href="https://creativemass.cn/#/">创意导航</a></td><td><a href="https://xydh.fun/">轩辕导航</a></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机好软推荐</title>
      <link href="/peaky/2020/09/21/a48a4354.html"/>
      <url>/peaky/2020/09/21/a48a4354.html</url>
      
        <content type="html"><![CDATA[<p>简单说几款个人使用的手机软件，娱乐也好，休闲也罢，总之个人觉得使用频率较高，故推荐之</p><p>​    </p><h3 id="Via浏览器"><a href="#Via浏览器" class="headerlink" title="Via浏览器"></a>Via浏览器</h3><p>​    作为一款浏览器，以其极小的占用（4.0.6版本2.21Mb）实现了浏览器该有的功能，界面简单没有广告，可以自定义导航页（以后在具体细谈）满足个人日常浏览。</p><p>​    <span id="more"></span></p><p>​    其次支持加载插件，是不是有油猴那味了，点到为止，可以自行添加脚本，不知道油猴的可以看我另一篇帖子<a href="https://fengzi.store/2020/09/20/ed6dfd6e.html">关于油猴</a>。</p><p>​    另外一大亮点就是资源嗅探功能，像Chrome配合IDM下载B站视频音频，下载某些网站的图片等等（择日细谈-IDM的应用），恰如此，配合手机端IDM，Via嗅探的资源也可以进行下载，在此不多赘述。</p><p>​    </p><p>​    体积小巧，功能强大，理想的手机浏览器不过如此，早年征战的红米手机3卡的不行，用这个浏览器还相当顺手。Next</p><h3 id="时光相册"><a href="#时光相册" class="headerlink" title="时光相册"></a>时光相册</h3><p>​    </p><p>​    最近手机重新刷机，恢复了一个上古备份（去年7月的备份，为何最近没有备份呢？因为已经1年没有折腾主力机了），其中就有该软件，打开后看到了最早是2016年的照片，手机里存的相片基本上上传到云端了，不管现在手机里面还有没有的照片，现在看4年前的自己，还有这4年间的一些点滴生活，觉得这特么就是回忆呀！</p><p>​    简单介绍，链接WiFi自动给备份照片，但好像空间有上限，我的打开有20G的空间，不过才用了不到6G，每天签到给50Mb，应该还算可以吧。总之，将照片上传到云可以节省本地空间吗哈哈！</p><h3 id="天翼云盘"><a href="#天翼云盘" class="headerlink" title="天翼云盘"></a>天翼云盘</h3><p>​    不喜欢度盘的限速，100k警告！</p><p>​    天翼云盘的容量相对来说少了很多，注册送60G空间，然后参见活动可以领一个1T的空间，就这些了，在不付费的情况下就是1T多点，是度盘的1&#x2F;5，但据说能够薅羊毛，第一批用户好像能薅羊毛到30T，但我入的晚，没机会了，每天签到领150Mb左右，目前空间已经1.22T了，主要是下载跟上传速度很快，基本不限速，使用体验很好！</p><h3 id="最右"><a href="#最右" class="headerlink" title="最右"></a>最右</h3><p>​    我的快乐源泉，在这里能够遇到很多有趣的抽子（右友之间的称呼），里面的人又有才，说话又好听，我超级喜欢里面的，他们懂得又多，上知天文，下知地理，无所不能，涨姿势的同时还能笑口常开！</p><p>​    但不幸的是，广告无情的吞噬了它，但，我下载的5.0.0版本还是没有广告的，有时候不更新也不是一个坏习惯！</p><p>​    下载旧版应用可以通过 -应用汇 -APP -找旧版，然后选择你要选的版本下载安装。</p><h3 id="厚墨"><a href="#厚墨" class="headerlink" title="厚墨"></a>厚墨</h3><p>​    我较喜欢小说，这个是一个本地化的阅读器，简洁无广告，更可以订阅公众号的文章，然后是添加书源，可以在线搜书，看书，是我理想的小说阅读器，下面奉上我收集的书源：<a href="http://note.youdao.com/s/QMD4t6nB">下载地址</a>,另推荐个人喜欢的书：《尘缘》、《雪中悍刀行》、《神墓》、《遮天》</p><p>​    </p><h3 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h3><p>​    第三方微博客户端，主要是没广告，挺好用的，还有一个知否是知乎的第三方客户端，code+是CSDN的第三方客户端等等</p><p>​    还有一些是ROOT后才能用的软件，等我想想做好小米手机刷机教程后在写吧，先这样。</p><p><strong>本文作者：</strong> 驼峰先生</p><p><strong>本文链接：</strong> <a href="https://fengzi.store/2020/09/21/a48a4354.html">https://fengzi.store/2020/09/21/a48a4354.html</a></p><p><strong>版权声明：</strong> 本博客所有文章遵循 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC 4.0 BY-SA</a> 版权协议。转载请注明出处！</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>404浏览器个人使用心得体会</title>
      <link href="/peaky/2020/09/20/ed6dfd6e.html"/>
      <url>/peaky/2020/09/20/ed6dfd6e.html</url>
      
        <content type="html"><![CDATA[<h3 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h3><p>​    </p><p>​    大家都在用什么浏览器呢？最开始我是信服360的电脑上安装上全家桶，然后用360安全浏览器保护着我的隐私，直到后来我的破电脑实在不堪重负，亦或者我良心发现，终于知道了国产软件的可怕之处以及根深蒂固的观念影响，现在一直裸奔，只安装–火绒安全软件（体积小，对日用无影响，还可以拦截广告），但直到后来遇到了我的真命天子 —某404小厂开发的浏览器，谷歌浏览器，又叫Chrome，中文叫扣肉，随着使用的深入，才发现，我们之前的拒绝404小厂的一幕，在今天似乎又在以另一种方式重演！总而言之，Chrome是我觉得的最好用的浏览器（我不要你觉得，我只要我觉得）。</p><p>​    Chrome指北开始！</p><span id="more"></span><h3 id="chrome的安装"><a href="#chrome的安装" class="headerlink" title="chrome的安装"></a>chrome的安装</h3><p>​    吐槽一下404小厂的安装，强迫症让我必须不能把软件安装在C盘，你竟然不能自定义安装位置，你是在教我做事？</p><p>​    <img src="https://i.niupic.com/images/2020/09/19/8Hcj.jpg"></p><p>​    解决办法-1：</p><p>​    1.1 先默认安装一下Chrome浏览器，然后在对着桌面图标右键打开文件位置，对着路径退到Google，复制Google这个文件夹。注意是Google文件夹.</p><p>​    1.2 将复制到的Google文件夹粘贴到你要安装的目录。</p><p>​    1.3 去控制面板的程序与功能卸载Chrome浏览器</p><p>​    1.4 然后再回到C盘下，将可能残余的文件斩草除根</p><p>​    1.5 接下来，到你复制的文件夹下，根据这个路径\Google\Chrome\Application找到chrome.exe文件，发送到桌面或者创建快捷方式，然后就可以光明正大的鸠占鹊巢了</p><p><img src="https://i.niupic.com/images/2020/09/19/8HbZ.jpeg"></p><p>​    是不是很麻烦，没关系我还准备了解决方案-2！</p><p>​    解决办法-2：</p><p>​    1.1 安装 -百分浏览器，该浏览器使用的chrome内核，国产的皮，某些设置更符合国人习惯，以及我喜欢的手势！</p><p>​    1.2 结束</p><p>​    在使用之后会发现，这跟国产浏览器有啥区别么？</p><p>​    因为404的封锁，导致我们看不到墙外的世界，但是，我们可以用某种方法，悄悄的使用墙外的技术！</p><p>​    接下来，突破404封锁！！！</p><p>​    </p><h3 id="冲破404的钥匙"><a href="#冲破404的钥匙" class="headerlink" title="冲破404的钥匙"></a>冲破404的钥匙</h3><p>​    </p><p>​    众所周知，只需要挂T就能窥见墙外的世界，见识到404小厂的真正面目！</p><p>​    进阶！Chrome的扩展程序。</p><p>​    打开安装的Chrome浏览器（或者百分浏览器），点击右上角三个点 - 更多工具 - 扩展程序 -右上角开发者模式</p><p>​    好了！只需要拿到钥匙，就可以打开404的大门！</p><p>​    钥匙的下载地址：<a href="https://www.lanzoux.com/iD0qXdgy4fc">获取钥匙</a></p><p>​    拿到钥匙解压后是 .crx文件，也就是扩展程序，将其拖到浏览器内扩展程序页面就会自动安装该扩展程序</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/85d728a7e6fd6f00fba14823be8ab0cb.png" alt="85d728a7e6fd6f00fba14823be8ab0cb.png"></p><p>​    到这里，才是开始。</p><h3 id="打开新的大门"><a href="#打开新的大门" class="headerlink" title="打开新的大门"></a>打开新的大门</h3><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/26b171ee1d401ce23d89733a0c4f46e2.png" alt="26b171ee1d401ce23d89733a0c4f46e2.png"></p><p>点击启动（重启）开启插件，然后访问下<a href="https://www.google.cn/">404主页</a>发现！</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/ecddf4c7378c89c13138fe980b16372f.png" alt="ecddf4c7378c89c13138fe980b16372f.png"></p><p>​    通过该插件，成功突破404，进入了新的大门！</p><p>​    <img src="https://slomoo.oss-cn-beijing.aliyuncs.com/bcc6c70058a18de72365decef2cca9ce.png" alt="bcc6c70058a18de72365decef2cca9ce.png">    </p><p>​    然后通过Chrome商店就可以继续下载一些有用的好玩的扩展程序了，比如</p><p>​    Adblock （广告拦截）、OneTab（标签页管理）等等</p><p>​    然我要说的是另外一个更加好玩的扩展程序。</p><p>​    先看这个对比，这是默认的百度搜索界面</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/a9e28d10f808a6cb11b92c577ad3cdb5.png" alt="a9e28d10f808a6cb11b92c577ad3cdb5.png"></p><p>​    这是插件优化后的百度，当然你可以自定义格式啥的，也可以拦截某些结果（我讨厌百家号，因此可以将其结果屏蔽掉哈哈哈）。</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/a2a5844ee26f15d39c87d4ec01851392.png" alt="a2a5844ee26f15d39c87d4ec01851392.png"></p><p>​    这个叫做 -百度重定向优化搜索 -绕过百度、搜狗、谷歌、好搜搜索结果中的自己的跳转链接，直接访问原始网页。</p><p>​    csdn界面重新排版，更重视主要内容！</p><p><img src="https://slomoo.oss-cn-beijing.aliyuncs.com/25ce60bfd5f6a01fcee456533e9ec650.png" alt="25ce60bfd5f6a01fcee456533e9ec650.png"></p><p>​    当然有些人觉得并无卵用，但不止于此！ 文库、视频、csdn等等插件尽皆于此。</p><p>​    如此强大的功能那就是–tampermonkey中文名油猴，又叫油猴脚本。</p><p>​    可以在Chrome商店直接搜索tampermonkey，或者直接<a href="https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo">点击这里</a>进行获取。</p><p>​    我个人手机的一些油猴插件在这里，下载后直接进油猴控制面板导入备份即可，虽然不多但都很常用的。</p><p><img src="https://i.niupic.com/images/2020/09/19/8HbC.jpg"></p><p>​    下载地址:<a href="https://www.lanzoux.com/icnmg1e">油猴备份</a></p><p>​    </p><h3 id="用户脚本源"><a href="#用户脚本源" class="headerlink" title="用户脚本源"></a>用户脚本源</h3><p>​    授人以鱼不如授人以渔，我获取脚本的地方都在这里了，2个洋人网站，访问速度有点慢。</p><p>​    1、下载地址： <a href="https://greasyfork.org/zh-CN">Greasy Fork</a></p><p>​    2、下载地址：<a href="https://openuserjs.org/">openuserjs</a></p><p><img src="https://i.niupic.com/images/2020/09/19/8Hbs.jpeg"></p><p>​    </p><h3 id="后续的优化"><a href="#后续的优化" class="headerlink" title="后续的优化"></a>后续的优化</h3><p>​    因为随着时间的推移，SQLITE数据库显着减慢。启动使用此类数据库的应用程序需要一些时间，整体速度会受到影响。这是一个非常普遍的问题，主要是由于数据库的碎片化。所以这个时候就需要类似windows的系统清理工具，chrome也有它的优化工具。</p><p>​    这是已经优化过后的效果，明显感觉打开网页的速度变快了，包括启动速度也会变快，其实像chrome浏览器使用过一段时间如果感觉速度变慢了，可以重新安装速度就会恢复了，但是一直这样也会比较麻烦，所以可以试试这个优化软件，如果你是很长时间没有优化过或者重装过，试用过这个软件之后，你会感觉到惊喜的，速度飞起来。</p><p><img src="https://s1.ax1x.com/2020/09/20/w7UbDI.gif"></p><p>​    下载地址：<a href="https://www.lanzoux.com/itxL9gstsne">speedyfox</a></p><p>​    好了差不多就到这里了，话也说完了，天也聊干了，是时候说晚安了，朋友们再见！</p><p><img src="https://i.niupic.com/images/2020/09/19/8HbL.jpeg"></p><p><strong>本文作者：</strong> 驼峰先生</p><p><strong>本文链接：</strong> <a href="https://fengzi.store/2020/09/20/ed6dfd6e.html">https://fengzi.store/2020/09/20/ed6dfd6e.html</a></p><p><strong>版权声明：</strong> 本博客所有文章遵循 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC 4.0 BY-SA</a> 版权协议。转载请注明出处！</p>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>李雅普诺夫论文</title>
      <link href="/peaky/2020/09/20/c67a7207.html"/>
      <url>/peaky/2020/09/20/c67a7207.html</url>
      
        <content type="html"><![CDATA[<p><strong>基于李亚普诺夫指导的深度强化学习在移动边缘计算网络中的稳定在线计算卸载</strong></p><p>背景、动机</p><p>本文考虑一个多用户MEC网络，该网络具有时变无线信道和在连续时间帧内随机的用户任务数据到达，满足<strong>长期数据队列稳定性</strong>和<strong>平均功率约束</strong>的情况下，<strong>最大化网络数据处理能力</strong>。</p><p>我们将该问题公式化为一个多阶段随机混合整数非线性规划(MINLP)问题，</p><p>LyDROO首先应用李雅普诺夫优化将多阶段随机MINLP解耦为确定性每帧MINLP子问题。</p><p>计算任务数据在连续的时间帧中随机到达WDs的数据队列。我们的目标是设计一个在线计算卸载算法，在这个意义上，每个时间帧的决策是在不知道随机的未来实现的假设下做出的信道条件和数据到达。目标是根据长期数据队列稳定性和平均功率约束，最大化网络数据处理能力。</p><p>1在线稳定计算卸载设计:考虑随机衰落信道和数据到达，我们将问题公式化为多阶段随机MINLP问题，以最大化所有WDs的长期平均加权和计算速率(即每秒处理的比特数)，服从队列稳定性和平均功率约束。特别地，我们将在每个时间帧中做出最优卸载和资源分配决策，而不需要假设知道随机信道条件和数据到达的未来实现。</p><p>2集成李雅普诺夫-DRL框架:为了解决这个问题，我们提出了一个新的李雅普诺夫框架，它结合了李雅普诺夫优化和DRL的优点。特别地，我们首先应用李雅普诺夫优化将多阶段随机MINLP解耦为每帧确定性MINLP问题。然后在每一帧中，我们集成了基于模型的优化和无模型DRL，以非常低的计算复杂度来解决每帧的MINLP问题。特别地，我们表明所提出的LyDROO框架不仅保证了长期队列稳定性和平均功率约束，而且以在线方式获得了最优的计算速率性能。</p><p>3集成优化和学习:LyDROO采用演员-评论家结构来解决每帧MINLP问题。actor模块是一个DNN模块，它根据包括信道增益和对所有WDs的积压进行排队。批评模块通过解析地解决最优资源分配问题来评估二进制卸载动作。与在评论模块中使用无模型DNN的传统演员-评论结构相比，所提出的方法利用模型信息来获得对动作的准确评估，从而享有DRL训练过程的更健壮和更快的收敛。</p><p>4平衡探索和开发:LyDROO部署了一种有噪声的保序量化方法来生成卸载动作，该方法在DRL算法设计中优雅地平衡了探索和开发的权衡(即面向性能或多样性)，以确保快速训练收敛。此外，该量化方法可以在训练过程中自适应地调整其参数，从而在不影响收敛性能的情况下显著降低计算复杂度。</p><p><strong>摘要</strong></p><p>计算卸载是动态边缘环境下提高移动边缘计算(MEC)网络计算性能的有效方法。本文考虑一个多用户MEC网络，该网络具有时变无线信道和在连续时间帧内随机的用户任务数据到达。具体来说，我们旨在设计一种在线计算卸载算法，在满足<strong>长期数据队列稳定性</strong>和<strong>平均功率约束</strong>的情况下，<strong>最大化网络数据处理能力</strong>。在线算法是实用的，因为每个时间帧的决策是在不假设知道随机信道条件和数据到达的未来实现的情况下做出的。我们将该问题公式化为一个多阶段随机混合整数非线性规划(MINLP)问题，该问题联合确定二进制卸载(每个用户在本地或在边缘服务器上计算任务)和顺序时间帧中的系统资源分配决策。为了解决不同时间框架决策中的耦合问题，我们提出了一个新的框架，名为LyDROO，它结合了李雅普诺夫优化和深度强化学习(DRL)的优点。具体来说，LyDROO首先应用李雅普诺夫优化将多阶段随机MINLP解耦为确定性每帧MINLP子问题。通过这样做，它保证通过解决每帧小得多的子问题来满足所有长期约束。然后，LyDROO集成了基于模型的优化和无模型DRL，以极低的计算复杂度解决了每帧MINLP问题。仿真结果表明，在不同的网络设置下，该算法在稳定系统所有队列的同时，获得了最优的计算性能。此外，它导致非常低的计算时间，特别适合在快衰落环境中实时实现。</p><p><strong>动机</strong></p><p>新兴的移动边缘计算(MEC)技术被广泛认为是增强无线设备(WDs)计算性能的关键解决方案[2]，尤其是对于尺寸受限、设备上电池和计算能力较低的IoT(物联网)设备。随着MEC服务器部署在<strong>无线接入</strong>网络的边缘，例如<strong>蜂窝基站</strong>，WDs可以将密集的计算任务卸载到附近的边缘服务器，以减少计算能量和时间成本。与卸载所有任务用于边缘执行的天真方案相比，机会计算卸载(<strong>动态分配要在本地或在ES系统上计算的任务)<strong>在</strong>时变网络条件</strong>下表现出显著的性能改进，例如无线信道增益[3]、收获的能量水平[4]、任务输入输出相关性[5]和边缘缓存可用性[6]等。</p><p>已经对机会计算卸载进行了广泛的研究，以优化多用户MEC网络的计算性能[5]–[9]。通常，它涉及求解混合整数非线性规划(MINLP)，该规划共同确定二进制卸载(即，卸载计算与否)和通信&#x2F;计算资源分配(例如，任务卸载时间和本地&#x2F;边缘中央处理器频率)决策。解决这些问题通常需要极高的计算复杂度，尤其是在大规模网络中。因此，许多工作集中于设计复杂度降低的次优算法，例如基于局部搜索的启发式[5]，[8]，面向分解的搜索[8]，以及二元变量的凸松弛[9]，[25]等。然而，除了性能损失之外，上述次优算法仍然需要大量的数值迭代来产生令人满意的解。实际上，一旦系统参数(如无线链路质量)发生变化，就需要频繁地重新解决MINLP问题。因此，在高度动态的MEC环境中实现传统的优化算法成本太高。</p><p>数据驱动的深度强化学习(DRL)的最新发展为解决在线计算卸载问题提供了一个有前途的替代方案。简而言之，DRL框架采用无模型方法，使用<strong>深度神经网络(DNNs)直接学习从“状态”(例如，时变系统参数)到“动作”(例如，卸载决策和资源分配)的最佳映射，以通过与环境的重复交互来最大化“回报”(例如，数据处理</strong>速率)[10]。它消除了MINLP的复杂计算，并在运行中自动学习过去的经验，而不需要手动标记训练数据样本，因此对于在线实现特别有利。许多研究已经应用DRL技术设计了MEC网络中的在线卸载算法[11]–[20]。特别是，我们之前的工作[18]提出了一个混合框架，名为DROO(基于深度强化学习的在线卸载)，以结合传统的基于模型的优化和无模型DRL方法的优势。DROO实现了一个DNN，根据输入环境参数(如信道条件)产生二进制卸载决策。候选卸载解决方案然后被馈送到基于模型的优化模块，该模块相应地优化通信&#x2F;计算资源分配，并输出每个候选卸载决策的回报值的准确估计。集成的学习和优化方法导致在线训练过程更加健壮和更快的收敛，这得益于对应于每个采样动作的奖励值的精确估计。</p><p>除了优化计算性能，保证稳定的系统运行也同样重要，例如数据队列稳定性和平均功耗。然而，大多数现有的基于DRL的方法并没有强加长期的性能约束(例如[11]–[20])。相反，他们采用启发式方法，通过引入与例如分组丢弃事件[14]，[15]和能量消耗[12]，[20]相关的惩罚项来阻止每个时间帧中的不利动作。在线联合效用最大化和稳定性控制的一个著名框架是李雅普诺夫优化[21]。它将多阶段随机优化解耦为顺序的每阶段确定性子问题，同时为系统的长期稳定性提供理论保证。最近的一些工作已经应用李雅普诺夫优化来设计MEC网络中的计算卸载策略(例如[22]–[26])。然而，它仍然需要解决每个阶段子问题中的硬MINLP问题，以获得联合二进制卸载和资源分配决策。为了解决这一难题，一些著作设计了降低复杂性的启发式方法，如[25]中的连续松弛法和[26]中的解耦启发式方法。然而，这遭受了类似于[5]，[6]，[8]，[9]中的性能-复杂性权衡困境。</p><p>在本文中，我们考虑图1中的多用户MEC网络，其中计算任务数据在连续的时间帧中随机到达WDs的数据队列。我们的目标是设计一个在线计算卸载算法，在这个意义上，每个时间帧的决策是在不知道随机的未来实现的假设下做出的信道条件和数据到达。目标是根据长期数据队列稳定性和平均功率约束，最大化网络数据处理能力。为了解决这个问题，我们提出了一个基于李雅普诺夫指导的深度强化学习的在线卸载框架，该框架结合了李雅普诺夫优化和DRL的优点。在快变信道衰落和动态任务到达的情况下，LyDROO可以实时在线做出最优决策，同时保证系统的长期稳定性。据作者所知，这是第一个将李雅普诺夫优化和DRL相结合用于MEC网络在线计算卸载设计的工作。论文的主要贡献有:</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720195027330.png" alt="image-20210720195027330"></p><p>1在线稳定计算卸载设计:考虑随机衰落信道和数据到达，我们将问题公式化为多阶段随机MINLP问题，以最大化所有WDs的长期平均加权和计算速率(即每秒处理的比特数)，服从队列稳定性和平均功率约束。特别地，我们将在每个时间帧中做出最优卸载和资源分配决策，而不需要假设知道随机信道条件和数据到达的未来实现。</p><p>2集成李雅普诺夫-DRL框架:为了解决这个问题，我们提出了一个新的李雅普诺夫框架，它结合了李雅普诺夫优化和DRL的优点。特别地，我们首先应用李雅普诺夫优化将多阶段随机MINLP解耦为每帧确定性MINLP问题。然后在每一帧中，我们集成了基于模型的优化和无模型DRL，以非常低的计算复杂度来解决每帧的MINLP问题。特别地，我们表明所提出的LyDROO框架不仅保证了长期队列稳定性和平均功率约束，而且以在线方式获得了最优的计算速率性能。</p><p>3集成优化和学习:LyDROO采用演员-评论家结构来解决每帧MINLP问题。actor模块是一个DNN模块，它根据包括信道增益和对所有WDs的积压进行排队。批评模块通过解析地解决最优资源分配问题来评估二进制卸载动作。与在评论模块中使用无模型DNN的传统演员-评论结构相比，所提出的方法利用模型信息来获得对动作的准确评估，从而享有DRL训练过程的更健壮和更快的收敛。</p><p>4平衡探索和开发:LyDROO部署了一种有噪声的保序量化方法来生成卸载动作，该方法在DRL算法设计中优雅地平衡了探索和开发的权衡(即面向性能或多样性)，以确保快速训练收敛。此外，该量化方法可以在训练过程中自适应地调整其参数，从而在不影响收敛性能的情况下显著降低计算复杂度。</p><p><strong>仿真结果</strong>表明，该算法在满足所有长期稳定性约束的情况下，快速收敛到最优计算速率。与贪婪地最大化每个时间帧中的计算速率的短视基准算法相比，所提出的LyDROO实现了大得多的稳定容量区域，该区域可以在更重的任务数据到达和更严格的功率约束下稳定数据队列。</p><p><strong>以往工作：</strong></p><p><strong>二进制</strong>和<strong>部分计算卸载</strong>是边缘计算系统中两种常见的卸载模型。前者要求计算任务的整个数据集作为一个整体在无线设备(WD)本地或在边缘服务器远程处理，而后者则允许数据集在WD和边缘服务器上并行分区和执行[2]。本文主要研究在线二进制卸载策略的设计，该策略广泛应用于物联网网络中，用于在不可分割的数据集上执行简单的计算任务。同时，我们在第七节中讨论了当计算任务由多个独立的子任务组成时，所提出的LyDROO方案在设计在线部分卸载策略中的应用。</p><p>为了解决采用二进制卸载模型的多用户MEC网络中难以解决的组合计算卸载问题，在文献中已经广泛探索了降低复杂度的算法。例如，[7]考虑WDs将其任务卸载给随机到达和离开的相邻节点。它提出了一个在线停止问题，并提出了一个低复杂度算法，其中每个WD以在线方式单独选择最佳的相邻节点集，以最小化最坏情况下的计算延迟。然而，所提出的方法不适用于优化本文所考虑的长期平均目标。[8]提出了一种坐标下降法，通过一次翻转一个用户的二进制卸载决策，迭代地找到局部最优。[5]应用吉布斯抽样以随机方式搜索决策空间。为了减少搜索维度，[8]提出了ADMM(交替基于乘子方向法)的方法，将原始组合优化分解为并行的一维子问题。除了基于搜索的元启发式算法，现有的工作还应用凸松弛来处理二元变量，如线性松弛[8]，[25]和二次近似[9]。然而，上述优化方法在处理整数变量时不可避免地会遇到性能-复杂性权衡的困境，并且不适合在快速变化的环境下要求一致的高解决方案质量的在线实现。</p><p>DRL最近似乎是解决MEC网络在线计算卸载问题的一个有希望的替代方案。现有的基于DRL的方法采用基于值或基于策略的方法来学习从“状态”(例如，时变系统参数)到“动作”(例如，卸载决策和资源分配)的最佳映射。常用的基于价值的DRL方法包括深度Q学习网络(DQN)[11]–[13]、双DQN [14]和决斗DQN [15]，其中DNN被训练<strong>来估计状态-动作价值函数</strong>。然而，当可能的离散卸载动作的数量很大时，基于DQN的方法是昂贵的，例如，WDs的数量呈指数增长。为了解决这个问题，最近的工作已经应用了基于策略的方法，例如行动者-批评家DRL[16]–[18]和深度确定性策略梯度(DDPG)方法[19]，[20]，以使用DNN直接构建从输入状态到输出动作的最优映射策略。例如，[19]考虑一个只采取离散卸载动作的WD，包括整数卸载决策和不可信的发射功率和卸载速率，并应用演员-评论家DRL方法来学习从连续输入状态到离散输出动作的最优映射。[18]和[20]训练两个独立的学习模块，以顺序生成离散的卸载决策和连续的资源分配。具体而言，[20]应用演员DNN来生成资源分配解决方案，由基于DQN的评论家网络连接来选择离散卸载动作。与[11]–[15]类似，当可能的卸载动作数量较大时，评估批评网络中的状态-动作值函数是困难的。另一方面，在[18]中提出的DROO框架使用一个参与者DNN来生成少量的二进制卸载决策，然后是一个基于模型的批评模块，该模块通过分析解决最优资源分配问题来选择最佳动作。得益于评论家模块获得的对动作的准确评估，即使演员DNN提供了非常少的动作(例如，在足够的迭代之后的两个动作)供评论家选择，DROO也能快速收敛到最优解。在本文中，我们将DROO嵌入到LyDROO框架中来解决每帧MINLP问题。</p><p>上述基于DRL的方法无法解决随机环境下的长期性能要求，例如队列稳定性和平均功率。在这方面，最近的研究应用李雅普诺夫优化设计了一种具有长期性能保证的在线卸载策略[22]–[26]。李雅普诺夫优化将多阶段随机问题解耦为每帧确定性子问题。对于每帧子问题，同样，[23]在每个时间范围内，仅安排一个用户卸载到多个ESs中的一个。在这两种情况下，二进制卸载变量的数量非常少，因此可以通过强力搜索获得最优解。[24]–[26]考虑多个用户的联合卸载决策。与本文考虑的二进制卸载策略不同，[24]允许WDs在本地和ES并行处理任务数据，并应用凸优化来解决连续联合卸载和资源分配问题。相比之下，[25]和[26]采用二进制卸载策略，其中可能的卸载解决方案的数量随着用户数量呈指数级增长。为了解决组合问题，[25]将二元变量放宽为连续变量。[26]提出了一种两阶段启发式算法，首先确定资源分配，然后利用匹配理论获得二进制卸载决策。然而，这些启发式方法不能保证始终如一的高解决方案质量，这最终可能会降低长期性能。</p><p>在图2中，我们说明了论文其余部分的组织。在第二节中，我们将稳定计算卸载问题表述为多阶段随机MINLP问题(P1)。在第三节中，我们应用李雅普诺夫优化将(P1)解耦成每帧确定性MINLP子问题(P2)。在第四节中，我们介绍了使用演员兼评论家DRL求解(P2)的莱德罗算法。参与者模块实现了一个DNN来解决二进制卸载子问题(P3)，而批评者模块应用了一个定制的优化算法来解决连续资源分配问题(P4)。在第五节中，我们分析了LyDROO算法的性能。在第六节中，我们通过大量的仿真来评估所提出的算法。最后，我们在第七部分对论文进行了总结。</p><p><strong>系统模型和问题表达</strong></p><p><strong>系统模型</strong></p><p>如图1所示，我们考虑一个ES基站，它在等持续时间t的连续时间帧中辅助N个WD的计算。在第tth个时间帧内，我们将At i(以比特为单位)表示为到达第I个WD的数据队列的原始任务数据。我们假设到达时间服从一个二阶矩有界的一般分布，即，<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210719203451656.png" alt="image-20210719203451656"></p><p> 1,· · · , N.我们假设η的值是已知的，例如，通过根据过去的观察进行估计。在块衰落假设下，ht在一个时间帧内保持恒定，但在不同的帧内独立变化。</p><p>在tth时间帧中，假设标记的WD i处理Dt ibits数据，并在时间帧结束时产生计算输出。特别地，我们假设WDs采用二进制计算卸载规则[2]。也就是说，在每个时间范围内，原始数据必须在本地WD或远程ES进行处理。例如，在图1中，WD 1和wd3卸载它们的任务，而WD 2本地计算。卸载WDs共享公共带宽W，用于以时分多址方式将任务数据传输到ES。我们使用二进制变量xt ito表示卸载决策，其中xt i&#x3D; 1和0分别表示WD i执行计算卸载和本地计算。</p><p>当WD本地处理数据(xt i&#x3D; 0)时，我们将本地CPU频率表示为ft i，以fmax i为上限。本地处理的原始数据(以位为单位)和时间范围内消耗的能量为[2]</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210719210018323.png" alt="image-20210719210018323"></p><p>分别是。这里，参数φ &gt; 0表示处理一位原始数据所需的计算周期数，而κ &gt; 0表示计算能量效率参数。</p><p>否则，当数据卸载用于边缘执行时</p><p>我们将Pt表示为由最大功率Pt i≤ Pmax i和τt iT约束的发射功率，表示为分配给ith WD进行计算卸载的时间量。这里，τt I∏[0，1]和N i&#x3D;1τt i≤ 1。数据卸载消耗的能量为Et i，O&#x3D; Pt iτt iT。与[4]和[8]类似，我们忽略了边缘计算和结果下载的延迟，因此在时间范围内边缘处理的数据量为</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210719211406498.png" alt="image-20210719211406498"></p><p>其中vu≥ 1表示通信开销，N0表示噪声功率。</p><p>让Dt i，(1 XT I)Dt I，L+xt iDt i，Oand Et i，(1 XT I)Et I，L+ xt iEt i，Odenote计算的位和时间帧t中消耗的能量。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210719211720241.png" alt="image-20210719211720241"></p><p>其中et i，O，Et i，O&#x2F;T。为了说明简单，我们假设T &#x3D; 1，在下面的推导中不失一般性。</p><p>让Qi(t)表示在第四个时间帧开始时第四个WD的队列长度。然后，队列动态可以建模为</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210719211652906.png" alt="image-20210719211652906"></p><p>其中<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720093116982.png" alt="image-20210720093116982"></p><p>考虑无限排队容量的分析处理能力。在下面的推导中，我们实施了数据因果约束Dt i≤ Qi(t)，这意味着Qi(t) ≥ 0适用于任何t。因此，队列动态被简化为</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720093306421.png" alt="image-20210720093306421"></p><p>定义1</p><p>如果时间平均队列长度<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720093413149.png" alt="image-20210720093413149">无穷，离散时间队列Qi（t)是强烈稳定的</p><p>其中期望值是相对于系统随机事件而言的，信道衰落和任务数据到达。</p><p><strong>Problem F ormulation</strong></p><p>​    本文旨在设计一种在线算法，在数据队列稳定性和平均功率约束下，最大化所有WDs的长期平均加权和计算速率。特别地，我们在每个时间帧中进行在线决策，我们优化特定时间帧的任务卸载和资源分配决策，而无需假设知道随机信道条件和数据到达的未来实现。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720094408654.png" alt="image-20210720094408654"></p><p>我们将该问题表述为以下多阶段随机MINLP问题(P1):</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720094442349.png" alt="image-20210720094442349"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720094457109.png" alt="image-20210720094457109"></p><p>这里，cide注意到了ith WD的固定重量。(6a)表示卸载时间限制。请注意，如果xt i&#x3D; 0，τt i&#x3D; et i，O&#x3D; 0必须保持在最佳值。同样，如果xt i&#x3D; 1，ft i&#x3D; 0必须成立。(6b)对应于数据因果关系约束。(6c)对应于平均功率约束，γ是功率阈值。(6d)是数据队列稳定性约束。在随机信道和数据到达的情况下，在不知道随机信道条件和数据到达的未来实现的情况下，当在每个时间帧中做出决策时，很难满足长期约束。此外，快速变化的信道条件要求在每个短时间帧内进行实时决策，</p><p>在下文中，我们提出了一个新颖的LyDROO框架，它以高鲁棒性和高效率解决了(P1)问题。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720094722383.png" alt="image-20210720094722383"></p><p>备注1:在结束本次会议之前，我们对建议的LyDROO算法的可能扩展进行评论。(P1)在目标中使用线性效用函数。然而，我们将在第四节后面说明，只要资源分配问题(P4)能够得到有效解决，拟议的LyDROO框架适用于解决广泛的问题。例如，我们可以考虑一个一般的非递减凹函数U (rt i)，使得相应的(P4)是一个凸问题，例如，α ≥ 0且α 6&#x3D; 1的α-公平函数(1α)1(rt I)1α，比例公平函数ln(rt i)，或其他合适的QoS(服务质量)实用程序(见[27]和其中的参考文献)。为了分析清楚，我们在本文中考虑一个特定的线性效用函数来突出LyDROO框架的特征。</p><p><strong>基于李雅普诺夫的多级MINLP解耦</strong></p><p>在本节中，我们应用李雅普诺夫优化将P1解耦到每帧确定性问题中。为了应对平均功率约束(6c)，我们引入了N个虚拟能量队列{Yi(t)}N i&#x3D;1，每个WD一个。具体来说，我们将Yi(1) &#x3D; 0，并将队列更新为</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720100531693.png" alt="image-20210720100531693"></p><p>对于i &#x3D; 1，N和t &#x3D; 1，K，其中et iin (3)是第tth个时间帧的能耗，ν是正比例因子。Yi(t)可以看作是一个具有随机“能量到达”νet和固定“服务速率”νγi的队列，直观地说，当虚拟能量队列稳定时，平均功耗et i(即虚拟队列到达速率)不超过γi，从而满足(6c)中的约束。</p><p>为了共同控制数据和能量队列，我们定义Z(t) &#x3D; {Q(t)，Y(t)}为总队列积压，其中Q(t)&#x3D; { Qi(t)} N I &#x3D; 1，Y(t) &#x3D; {Yi(t)}N i&#x3D;1。然后，我们引入李雅普诺夫函数L(Z(t))和李雅普诺夫漂移∏L(Z(t))作为[21]</p><p>为了在稳定队列Z(t)的同时最大化时间平均计算速率，我们使用了漂移加惩罚最小化方法[28]。具体来说，我们寻求在每个时间帧t最小化以下漂移加惩罚表达式的上限:</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720100718445.png" alt="image-20210720100718445"></p><p>其中V &gt; 0是衡量处罚的“重要性”权重。下面，我们导出λ(Z(t))的一个上界。首先，我们有</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720100743069.png" alt="image-20210720100743069"></p><p>通过计算两边N个队列的总和，我们得到</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101202789.png" alt="image-20210720101202789"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101212484.png" alt="image-20210720101212484"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101227276.png" alt="image-20210720101227276"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101237284.png" alt="image-20210720101237284"></p><p>这里，b1i是一个常数，通过下式获得</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101312820.png" alt="image-20210720101312820"></p><p>第二个不等式成立，因为</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101335908.png" alt="image-20210720101335908"><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101351956.png" alt="image-20210720101351956">对应于第i波的最大平均传输速率。</p><p>同样，我们定义</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101455484.png" alt="image-20210720101455484"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720101505276.png" alt="image-20210720101505276"></p><p>我们通过取两边的期望得到以下结果</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720103919119.png" alt="image-20210720103919119"></p><p>在tth时间框架内，我们应用机会期望最小化技术[21]。也就是说，我们观察队列积压Z(t)，并相应地决定联合卸载和资源分配控制动作，以最小化(20)中的上限。请注意，只有第二项与tth时间范围内的控制动作相关。通过在tth时间帧开始时从观测值中去除常数项，该算法通过最大化来决定动作</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720103948510.png" alt="image-20210720103948510"></p><p>其中t和I在(3)中。直观地说，它倾向于增加具有长数据队列积压或大权重的WDs的计算速率，同时惩罚那些已经超过平均功率阈值的WDs。我们为每个WD i引入一个辅助变量rt i，Ofor，并表示rt O&#x3D;？不是吗？N i&#x3D;1。考虑到每帧约束，我们在tth时间帧内解决了以下确定性每帧子问题(P2)</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720104011606.png" alt="image-20210720104011606"></p><p>注意，上面的约束(22b)和(22c)等价于(P1)中的(6b)，因为在最佳情况下(6b)的左侧正好有一个非零项。在第五节中，我们将展示我们可以通过在线解决每帧子问题来满足(P1)的所有长期约束。然后，剩下的困难在于在每个时间框架内解决MINLP (P2)。在接下来的部分，我们提出了一个基于DRL的算法来有效地解决(P2)。</p><p><strong>在线计算卸载的李雅普诺夫引导DRL方法</strong></p><p>回想一下，为了在第四个时间框架内解决(P2)，我们观察到<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720104308701.png" alt="image-20210720104308701"></p><p>包括信道增益{ ht i } N i &#x3D;和系统队列状态{Qi(t)，Yi(t)}N i&#x3D;1，并相应地决定控制动作{xt，yt}，包括二进制卸载决策xt和连续资源分配<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720104329414.png" alt="image-20210720104329414">仔细观察表明，虽然(P2)是一个非凸优化问题，但如果xtis固定，优化ytis的资源分配问题实际上是一个”容易”的凸问题。在第四节中。我们将提出一个定制的算法来有效地获得给定xtin (P2)的最优yt。这里，我们表示G？xt，ξt？通过优化给定的卸载决策xt和参数ξt，作为(P2)的最优值。因此，求解(P2)等价于找到最优卸载决策(XT)∞，其中</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720104345165.png" alt="image-20210720104345165"></p><p>一般来说，获得(XT)⊙需要枚举2个负载决策，即使当N适中(例如，N &#x3D; 10)时，这也会导致显著高的计算复杂度。当N较大时，其他基于搜索的方法，如分枝定界和块坐标下降[29]，也很耗时。在实践中，这两种方法都不适用于快速变化信道条件下的在线决策。利用DRL技术，我们提出了一个LyDROO算法来构造一个策略π，它从输入ξ映射到最优动作(XT)∞，即π:ξT7 →( XT)∞，具有非常低的复杂度，例如，当N &#x3D; 10时，几十毫秒的计算时间(即从观察ξtto到产生控制动作{xt，yt}的持续时间)。</p><p><strong>Algorithm Description</strong></p><p>如图3所示，LyDROO由四个主要模块组成:接受输入ξ并输出一组候选卸载动作{xt i}的actor模块，评估{xt i}并选择最佳卸载动作xt的评论家模块，策略更新模块随时间改进actor模块的策略，以及排队模块在执行卸载动作后更新系统队列状态{Qi(t)，Yi(t)} N I &#x3D; 1。通过与随机环境{ht i，At i}N i&#x3D;1的重复交互，四个模块以顺序和迭代的方式运行，如下所述。</p><p><strong>1)参与者模块:</strong></p><p>演员模块由DNN和动作量化器组成。在tth时间帧的开始，我们将DNN参数表示为θt，当t &#x3D; 1时，该参数按照标准正态分布随机初始化。</p><p>将观测值ζ作为输入，DNN输出一个宽松的卸载决策，稍后将被量化为可行的二进制动作，投入产出关系表示为：<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720110255699.png" alt="image-20210720110255699"></p><p>众所周知的通用近似定理声称，如果在神经元上应用适当的激活函数，例如sigmoid、ReLu和tanh函数，具有足够数量神经元的多层感知器可以精确地近似任何连续映射[30]。这里，我们在输出层使用sigmoid激活函数。</p><p>然后，我们将连续的XT量化为Mt可行的候选二进制卸载动作，其中MtI是一个依赖于时间的设计参数。量化函数表示为:<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720110348044.png" alt="image-20210720110348044">其中ωt表示tth时间帧中的一组候选卸载动作。υ表示量化函数，生成Mt &#x3D; |ωt |二进制操作的。一个好的量化函数应该在生成卸载动作时平衡勘探-开发权衡，以确保良好的训练收敛。</p><p>直观上，xtj应该接近xt(通过欧几里德距离测量)，以有效利用DNN的输出，同时充分分离，以避免在训练过程中过早收敛到次优解。在这里，我们应用了噪声保序(NOP)量化方法[31]，它可以生成任何Mt≤ 2N的候选动作。NOP方法通过应用[18]至[18]中的保序量化器(OPQ)来产生第一个Mt&#x2F;2动作(Mt假设为偶数)。具体而言，第一个动作xt 1&#x3D; [xt 1，1，，xt 1，N]计算如下</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720110532624.png" alt="image-20210720110532624"></p><p>对于i &#x3D; 1，N .为了生成下一个Mt&#x2F;2-1动作，我们根据到0.5的距离对ˇXT的条目进行排序，使得|ˇXT(1)0.5 |≤|ˇXT(2)0.5 |≤|ˇXT(I)0.5 |≤|ˇXT(N)0.5 |，其中ˇXT(I)表示ˇXT的第一个有序条目。然后，将’ xt(I ‘ s ‘用作量化’ xt ‘的决策阈值，其中，对于m &#x3D; 2，Mt&#x2F;2，第m个动作xt m是从’ XT ‘和’ XT(m-1)的条目式比较中获得的。也就是说，</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720110555717.png" alt="image-20210720110555717"></p><p>对于i &#x3D; 1，，N .为了获得剩余的Mt&#x2F;2动作，我们首先生成xt的噪声版本，表示为xt&#x3D; Sigmoid(xt+ n)，其中随机高斯噪声N∞N(0，in)与INbeing是一个单位矩阵，Sigmoid()是元素式Sigmoid函数，它限制XT IN(0，1)的每个条目。然后，我们通过对xt应用OPQ来产生剩余的Mt&#x2F;2动作xt m，对于m &#x3D; Mt&#x2F;2 + 1，，Mt，即将xt替换为xtin (26)和(27)。</p><p><strong>评论模块:</strong></p><p>在演员模块之后，评论模块评估{xt i}并选择最佳卸载动作xt。与使用无模型的DNN作为评价网络来评价动作的传统行为者-评价者结构不同，LyDROO利用模型信息通过解析地解决最优资源分配问题来评价二进制卸载动作。这使得批评模块能够对卸载动作进行准确评估，从而实现DRL训练过程的更稳健和更快速的收敛。</p><p>具体来说，LyDROO选择最佳动作xtas</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720110725286.png" alt="image-20210720110725286"></p><p>G在哪里？xt j，ξt？是通过优化给定xt jin (P2)的资源分配获得的。我们将介绍获得G的详细算法？xt j，ξt？在第四章b节中，请注意G的计算？xt j，ξt？是由Mttimes执行的，以获得最佳动作xt。直观地说，更大的Mt导致更好的解决方案性能，但计算时间更长。为了平衡性能和复杂度的权衡，我们在这里提出了一个自适应过程来设置时变Mt。</p><p>关键的想法是，当演员DNN随着时间的推移逐渐接近最优策略时，一个小团队会在到文本的一小段距离内找到最优动作。将Mt∈0，Mt 1]表示为最佳动作xt∈ωt的索引。我们定义m∫t &#x3D; mod(Mt，Mt&#x2F;2)，它表示Mt&#x2F;2无噪声或有噪声的候选动作中XT的顺序。在实践中，我们最初设置最大M1&#x3D; 2N，并且每隔δM≥ 1个时间帧更新一次。如果在时间帧t中mod (t，δM) &#x3D; 0，即t可以除以δM，我们设置 <img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720110832292.png" alt="image-20210720110832292"></p><p>第一项中的附加1允许Mtto随时间增加。否则，Mt &#x3D; Mt 1 if mod(t，δM) 6&#x3D; 0。请注意，过于频繁的更新(较小的δM)可能会降低训练收敛性，而过大的δM会导致不必要的计算复杂性。</p><p><strong>策略更新模块:</strong></p><p>莱德罗用什么？不，不？作为更新DNN政策的标记输入输出样本。特别是，我们维护一个重放存储器，它只存储最近的q数据样本。实际上，在最初内存为空的情况下，我们在收集了q&#x2F;2以上的数据样本后开始训练DNN。然后，每隔δTtime个时隙对DNN进行一次周期性训练，以避免模型过度拟合。当mod (t，δT) &#x3D; 0时，我们随机选取一批数据样本{(οτ，xτ)，τ ∈ St}，其中St表示所选样本的时间索引集合。然后我们通过最小化平均交叉熵损失函数来更新DNN的参数？θt？使用Adam算法对数据样本进行分析</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720110904540.png" alt="image-20210720110904540"></p><p>其中|St|表示样本批次的大小，()|表示转置运算符，log函数表示</p><p>向量的逐元素对数运算。训练完成后，我们在下一个时间帧中将actor模块的参数更新为θt+1。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720110949063.png" alt="image-20210720110949063"></p><p><strong>排队模块:</strong></p><p>作为批评模块的副产品，我们获得了与xt相关的最优资源分配。因此，系统执行联合计算卸载和资源分配动作{xt，yt}，其处理数据{ Dt i } N i &#x3D;并消耗能量{ et I } N I &#x3D; 1，如(3)中给出的。基于{Dt i，At i } N i &#x3D; 1和在第tth时间帧中观察到的数据到达{At i}N i&#x3D;1，排队模块然后在第(t + 1)时间帧开始时使用(5)和(7)更新数据和能量队列{Qi(t + 1)，Yi(t + 1)}N i&#x3D;1。当无线信道增益观测值{ht+1 i }N i&#x3D;1时，系统馈入输入参数ξt+1&#x3D;？ht+1 i，Qi(t + 1)，Yi(t + 1)？n I &#x3D; 1到DNN，并从步骤1中的参与者模块开始新的迭代)。</p><p>通过上面的参与者-批评者-更新循环，DNN始终从最佳和最新的状态-动作对中学习，从而产生更好的策略πθt，该策略逐渐逼近要求解的最优映射(P3)。我们总结了算法1中LyDROO的伪代码，其中主要的计算复杂度在计算G的第7行？下一个，是吗？通过解决最优资源分配问题。这实际上表明，当考虑目标中的一般非减凹效用U (rt i)时，所提出的LyDROO算法可以扩展到求解(P1)，因为计算G？下一个，是吗？是一个可以有效解决的凸问题，这里省略了详细的分析。在下一小节中，我们提出了一种低复杂度的算法来获得G？下一个，是吗？。</p><p><strong>低复杂度最优资源分配算法</strong></p><p>给定xtin (P2)的值，我们将xt i&#x3D; 1的用户索引集表示为Mt 1，互补用户集表示为Mt 0。为了简单说明，我们去掉上标t，表示计算G？xt，ξt？如下</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210720111605062.png" alt="image-20210720111605062"></p><h2 id="实验部分"><a href="#实验部分" class="headerlink" title="实验部分"></a>实验部分</h2><p>在这一部分，我们使用仿真来评估所提出的LyDROO算法的性能。所有计算都是在配备英特尔酷睿i5-4570 3.2GHz CPU和12 GB内存的TensorFlow 2.0平台上进行评估的。</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210721213849859.png" alt="image-20210721213849859"></p><p>我们假设平均信道增益遵循路径损耗模型<img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210721213749361.png" alt="image-20210721213749361">，其中Ad&#x3D; 3表示天线增益，fc&#x3D; 915 MHz表示载波频率，de&#x3D; 3表示路径损耗指数，米中的D1表示第一个WD和第二个es之间的距离。</p><p>提出的LyDROO在actor模块中采用全连接多层感知器，由一个输入层、两个隐藏层和一个输出层组成，其中第一和第二隐藏层分别有120和80个隐藏神经元。为了进行性能比较，我们考虑两种基准测试方法:</p><p>李亚普诺夫引导的坐标体面(LyCD):它最小化(20)中的漂移加惩罚的上限，或等效地求解(P2)，使用坐标体面(CD)方法[8]，迭代地应用一维搜索来更新二进制卸载决策向量xt。尽管(P2)的最优解很难获得，但我们通过大量的仿真验证了CD方法获得了接近最优的性能。因此，我们将LyCD视为LyDROO算法的目标性能基准。然而，LyCD的主要缺点在于当N较大时的显著计算延迟。我们在随后的模拟中表明，所提出的LyDROO实现了与LyCD相似的计算性能，但需要更短的计算时间。</p><p>提出的LyDROO在actor模块中采用<strong>全连接多层感知器</strong>，由一个输入层、两个隐藏层和一个输出层组成，其中第一和第二隐藏层分别有120和80个隐藏神经元。为了进行性能比较，我们考虑两种基准测试方法:</p><p>李雅普诺夫导向坐标下降(LyCD):</p><p>它最小化(20)中的漂移加惩罚的上限，或者等效地求解(P2)，使用坐标体面(CD)方法[8]，迭代地应用一维搜索来更新二进制卸载决策向量xt。尽管(P2)的最优解很难获得，但我们通过大量的仿真验证了CD方法获得了接近最优的性能。因此，我们将LyCD视为LyDROO算法的目标性能基准。然而，LyCD的主要缺点在于当N较大时的显著计算延迟。我们在随后的模拟中表明，所提出的LyDROO实现了与LyCD相似的计算性能，但需要更短的计算时间。</p><p>近视优化:</p>]]></content>
      
      
      <categories>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐的一款影视软件</title>
      <link href="/peaky/2020/09/19/2fd10c20.html"/>
      <url>/peaky/2020/09/19/2fd10c20.html</url>
      
        <content type="html"><![CDATA[<p>​    记得半年前个人从基安(又名酷安，国内“最大”的搞机论坛)浏览咨询，然后无意间在评论区看到有基友讨论爱优腾什么的解析，隐约记得是某个解析，然后就可以看会员视频甚至付费视频，因为我之前用过一个软件是 “方圆影视”，后来开发者不在更新，遂弃坑，然后这个软件是一个较单纯的资源嗅探软件，比如配合解析软件就可以嗅探到视频地址，然后无广告播放，美滋滋，当时用方圆影视看完了神盾局特工1-4季，在那时候找不到播放美剧的好软件时恰巧派上了用场，现在的人人视频（很多美剧据说也不能看了，比如神盾局特工）就挺不错，回归正题，看到有基友描述的软件，跟我以前用过的”方圆影视“极其相似。遂PY之。</p><span id="more"></span><p><img src="https://i.niupic.com/images/2020/09/19/8HbC.jpg"></p><p>​    年代过于久远，已经不记得是哪位基友的几手软件了，但！该软仍是我极力推荐的影视软件（主要没钱开会员）！</p><p>​    软件名称： <strong>海阔视界</strong>  作者：方圆小棉袄 </p><p>​    没错，还是同一个作者开发的软件！<img src="https://i.niupic.com/images/2020/09/18/8H55.jpg"></p><p>​    机缘巧合下又让我遇见了它，极其丰富的规则，小众的软件，大大的满足了我的观影体验（主要是没钱）！</p><p>​    接下来简单的介绍下它的庐山真面目：</p><p>​    搜索视频时从可以从上百个视频网站搜索，早晚能找到可以看的吧！</p><p><img src="https://i.niupic.com/images/2020/09/19/8HjK.jpg" alt="规则内的网站"></p><p>​    然后看看首页咋样！</p><p><img src="https://i.niupic.com/images/2020/09/19/8HjU.jpg" alt="首页"></p><p>​    搜个视频试试水，以我最近看的《神盾局特工》（最终季也结束了）为例，老牌美剧了，等有时间再推荐看有好的影视作品吧！</p><p><img src="https://i.niupic.com/images/2020/09/19/8HjT.jpg" alt="《神盾局特工》"></p><p>​    </p><p>​    写在最后，小众软件，自己低调使用即可，温馨提示，缓存到本地很舒服，在线看可能有等待时间尤其我喜欢 1.5倍速，然后第一次写图文，分享的第一个软件，以前都是悄无声息的白嫖，现在头一次开始分享，我想还会有更多机会来分享更多东西的！</p><p>​    <img src="https://i.niupic.com/images/2020/09/19/8Hcp.gif"></p><p>​    </p><p>​    最后附上下载地址：<a href="https://www.lanzoux.com/iwpB1gapkpg">海阔视界下载</a></p><p>​    自己在用的规则（白嫖的）下载解压后是 .db文件，设置-更多设置-恢复备份规则即可：<a href="https://www.lanzoux.com/ig6Uagrmoed">海阔视界规则下载</a></p><p>​    感谢您的阅读！</p><p><img src="https://i.niupic.com/images/2020/09/19/8HbR.jpeg"></p><p><strong>本文作者：</strong> 驼峰先生</p><p><strong>本文链接：</strong> <a href="https://fengzi.store/2020/09/19/2fd10c20.html">https://fengzi.store/2020/09/19/2fd10c20.html</a></p><p><strong>版权声明：</strong> 本博客所有文章遵循 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC 4.0 BY-SA</a> 版权协议。转载请注明出处！</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/peaky/2020/03/01/d0edc1ed.html"/>
      <url>/peaky/2020/03/01/d0edc1ed.html</url>
      
        <content type="html"><![CDATA[<p>整理了inux常用命令：</p><p><strong>路径相关命令</strong></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305170536983.png" alt="image-20210305170536983"></p><p><strong>文件相关命令</strong></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305170555978.png" alt="image-20210305170555978"></p><span id="more"></span><p><strong>文本相关命令</strong><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305170608960.png" alt="image-20210305170608960"></p><ul><li><strong>补充——vim常用操作</strong></li></ul><p>Vim有两种工作模式——查看模式和编辑模式，查看模式用于查看内容并输入一些命令，从查看模式可以通过按i或a进入编辑模式，进入编辑模式后按esc可以切换到编辑模式。</p><p>在查看模式下可以用方向键移动光标，也可以用hjkl移动光标，其他常用命令如下：</p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171051726.png" alt="image-20210305171051726"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171205878.png" alt="image-20210305171205878"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171222574.png" alt="image-20210305171222574"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171243310.png" alt="image-20210305171243310"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171303992.png" alt="image-20210305171303992"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171323633.png" alt="image-20210305171323633"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171335912.png" alt="image-20210305171335912"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171401793.png" alt="image-20210305171401793"></p><p><img src="https://pic-20201016.oss-cn-qingdao.aliyuncs.com/img/image-20210305171427417.png" alt="image-20210305171427417"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教程：使用阿里云对象存储(OSS)搭建静态网站</title>
      <link href="/peaky/2020/03/01/9c988741.html"/>
      <url>/peaky/2020/03/01/9c988741.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>想要搭建纯静态网站，最优的选择无疑是对象存储服务。</p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>大部分IDC商家都有提供对象存储服务，国内的比如<strong>阿里云</strong>、腾讯云、华为云、七牛云等，国外有亚马逊、谷歌、微软等。</p><blockquote><p>海量、安全、低成本、高可靠的云存储服务，提供99.9999999999%的数据可靠性。使用RESTful API可以在互联网任何位置存储和访问，容量和处理能力弹性扩展，多种存储类型供选择全面优化存储成本。这是阿里云对其对象存储(OSS)服务的描述。</p></blockquote><p>简单来说，对象存储服务可以用于储存文件，并且提供上传和下载接口，方便开发者用其来储存云文件。同时也支持直接通过域名访问，所以我们可以用来<strong>搭建静态网站</strong>。</p><span id="more"></span><p>仅仅是搭建静态网站，对象存储无疑是<strong>最优</strong>的选择。购买云虚拟主机或者云服务器大大<strong>增加了成本</strong>，因为我们仅仅是静态网站，不需要那么多功能。而且使用对象存储<strong>操作简单方便</strong>，<strong>访问速度快</strong>，<strong>可以绑定自定义域名</strong>，是专门用于这项功能的。<br>本文章通过阿里云的服务来介绍如何使用对象存储搭建静态网站。其他商家的配置方法大同小异。</p><blockquote><p>本文使用阿里云为例。另外腾讯云的对象存储提供10G免费月流量和50G免费储存空间，但我更喜欢阿里云一点，而且那点储存及流量费用非常便宜。</p></blockquote><h2 id="名词释义"><a href="#名词释义" class="headerlink" title="名词释义"></a>名词释义</h2><p>这里对一些专有名词做出<strong>简单</strong>的解释方便理解。<br><strong>对象存储：就是用来储存文件的服务。</strong><br><strong>Bucket：桶，也就是储存空间，可以简单的理解为存放网站文件的空间。</strong><br>存储空间：存储文件所需要的空间。<br>访问流量：访问文件产生的流量，由被访问文件大小决定。<br>外网访问：从局域网外部访问文件。<br>请求费用：请求文件产生的费用。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>前往<a href="https://www.aliyun.com/">阿里云官网</a>，注册登录账号等不再赘述了，进入控制台，来到对象存储的控制台。<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/1.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/1.png" alt="阿里云OSS控制台"></a></p><p>阿里云OSS控制台</p><p>如上图所示就是阿里云对象存储控制台了，因为我已经创建过Bucket(存储空间)所以跟大家显示的可能不太一样。</p><h3 id="计费标准"><a href="#计费标准" class="headerlink" title="计费标准"></a>计费标准</h3><p>存储空间费用（标准类型）：0.12元&#x2F;GB&#x2F;月<br>访问流量费用（外网访问）：闲时：0.25元&#x2F;GB，忙时：0.50元&#x2F;GB<br>请求费用（所有类型）：0.01元&#x2F;万次</p><blockquote><p>此为国内存储空间按量付费计费标准，海外地域会有略微调整。小型站点建议使用按量付费，大型站点建议购买流量包套餐。<a href="https://www.aliyun.com/price/product?spm=5176.7933691.1309819.5.42982a66wnvV0G#/oss/detail">点击这里</a>查看详情。</p></blockquote><h2 id="创建Bucket"><a href="#创建Bucket" class="headerlink" title="创建Bucket"></a>创建Bucket</h2><p>Bucket就是存储空间。点击左边Bucket列表上的加号或者右边的“创建Bucket”按钮即可创建。<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/2.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/2.png" alt="创建Bucket"></a></p><p>创建Bucket</p><p>Bucket名称：这个不能和其他用户的重复所以建议在前面加上自己的id为前缀以免提示名称被占用，比如咱这个pplin-test~<br>区域：这个按照自己的需求选择即可，<strong>如果你的域名没有备案则必须选择海外地域，建议香港</strong>。<br>存储类型：我们搭建静态网站，选择标准储存即可。<br>读写类型：必须选择<strong>公共读</strong>，不然别人怎么访问进来呢~<br>其他参数按照默认的即可，不需要更改，除非你有特殊需求。</p><blockquote><p>Bucket 创建成功后，您所选择的存储类型、区域不支持变更。<br>填写完毕后单击确定按钮即可完成创建。</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/3.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/3.png" alt="创建Bucket成功"></a></p><p>创建Bucket成功</p><p>页面还提供了“<strong>访问域名</strong>”，值得关注的是“<strong>外网访问</strong>”的“<strong>Bucket 域名</strong>”，这是OSS提供的默认域名，比如我的是pplin-test.oss-cn-shenzhen.aliyuncs.com，<strong>这里需要留意一下待会会用到</strong>。</p><h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><p>在列表中选中Bucket后，单击上方的“文件管理”，使用这个很简单方便的文件管理即可完成文件的上传。上传我们的网页文件。<br>比如我上传个index.html<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/4.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/4.png" alt="上传文件"></a></p><p>上传文件</p><p>上传操作不再赘述，这是傻瓜式操作了。</p><blockquote><p>这个文件管理器依然存在局限性，如果您的网站的目录结构较为复杂，上传后将会丢失目录结构，请使用<a href="https://help.aliyun.com/document_detail/61872.html?spm=5176.8465980.home.dtool_browser.605a14509ClUKj">ossbrowser</a>，这是阿里云OSS提供的客户端，操作文件更加方便且全面。</p></blockquote><h2 id="搭建网站"><a href="#搭建网站" class="headerlink" title="搭建网站"></a>搭建网站</h2><p>文件上传好了，现在让这个Bucket可以直接通过浏览器访问。<br>单击上方的“<strong>基础设置</strong>”，往下滑找到“<strong>静态页面</strong>”，将“<strong>默认首页</strong>”选项内容修改为<strong>index.html</strong><br>当然这个文件名可以根据您的需要进行修改，总之<strong>必须要填写</strong>一个文件名。<br>默认404页选项选填，根据自己的需求选择。<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/5.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/5.png" alt="搭建网站"></a></p><p>搭建网站</p><p>这时我们访问OSS提供的默认域名（比如我的是pplin-test.oss-cn-shenzhen.aliyuncs.com），发现有反应但是是直接将文件下载下来了，这显然不是我们想要的效果。</p><blockquote><p>针对中国大陆、香港地区的 OSS，如果直接使用OSS默认域名从互联网访问OSS上网页类型文件，<code>Response Header</code>中会自动加上<code>Content-Disposition:&#39;attachment=filename;&#39;</code>。即从浏览器访问网页类型文件时，会以附件形式进行下载。</p></blockquote><p>所以说如果我们的Bucket在中国大陆以及香港，需要绑定自定义域名才能达到我们想要的效果。</p><h2 id="绑定自定义域名"><a href="#绑定自定义域名" class="headerlink" title="绑定自定义域名"></a>绑定自定义域名</h2><p>终于到了关键时刻。<br>点击上方的“域名管理”，单击“绑定用户域名”，填写我们要绑定的域名。<br>然后需要修改域名解析，记录类型为CNAME，记录值为OSS默认域名（比如我的是pplin-test.oss-cn-shenzhen.aliyuncs.com）。<br>修改域名解析需要前往域名DNS服务提供商修改，详细内容不再赘述。假如您的域名使用的阿里云DNS，还支持自动修改解析值，不需要我们亲自动手。<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/6.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/6.png" alt="绑定域名"></a></p><p>绑定域名</p><p>待解析生效后，访问我们的自定义域名，大功告成！~<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/7.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/7.png" alt="效果展示"></a></p><p>效果展示</p><h2 id="HTTPS设置"><a href="#HTTPS设置" class="headerlink" title="HTTPS设置"></a>HTTPS设置</h2><p>虽然说网站已经成功的搭建完毕了，但HTTPS是目前的主流，且可以提高安全性，推荐配置SSL证书以启用HTTPS。<br><strong>当然，这不是必须的。</strong></p><p>在“<strong>域名管理</strong>”的列表中，可以看到“HTTPS 证书”这一列显示“未上传”，说明该域名还没有配置SSL证书。<br>单击域名这一行右边的“<strong>证书托管</strong>”链接，弹出证书设置页面。<br>将**.pem<strong>文件格式证书内容复制进</strong>第一个框<strong>中，将</strong>.key<strong>文件格式证书内容复制进</strong>第二个框**中。<br>若下载证书提示”服务器类型选择证书”，啧选择NGINX即可。<br>如果您没有SSL证书，单击“申请签发证书”即可获取免费的SSL证书。<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/8.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/img/loading.webp" alt="证书上传"></a></p><p>证书上传</p><p>证书上传完毕后使用HTTPS访问，证书安全有效。<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/9.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/9.png" alt="效果"></a></p><p>效果</p><h2 id="CDN加速访问"><a href="#CDN加速访问" class="headerlink" title="CDN加速访问"></a>CDN加速访问</h2><p>这里使用CDN的目的主要是加速访问速度，毕竟我们是静态网站，全部缓存到CDN上面也不是不可以，对于静态资源来说简直是Awesome！</p><blockquote><p>这也不是必须的。</p></blockquote><p>CDN具体的定义请查询百度，这里简单说下。IDC商家部署很多CDN节点，会将我们的静态网站资源缓存到各个CDN节点上，访客可以就近寻找CDN节点来获取资源内容，从而整体提升访问速度。</p><blockquote><p>使用本功能，域名需要备案。当然并不是说只有备案才能使用CDN服务，只是本文介绍的是国内CDN，所以必须要备案才能使用国内CDN。</p></blockquote><p>配套服务，本文使用阿里云CDN作为例子。<br>在“<strong>域名管理</strong>”的列表中，可以看到“<strong>阿里云 CDN 加速</strong>”这一列显示“<strong>未配置</strong>”，说明该域名还没有配置阿里云CDN服务。单击“<strong>未配置</strong>”即可跳转到CDN设置页面。<br>配置信息他会默认帮我们选择好，不需要多费心。<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/10.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/10.png" alt="设置阿里云CDN"></a></p><p>设置阿里云CDN</p><p><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/11.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/11.png" alt="设置阿里云CDN"></a></p><p>设置阿里云CDN</p><p>返回CDN域名列表，配置速度不会那么快，等配置完毕后会出现CNAME地址。<br>然后更改域名解析，CNAME，解析值为CDN域名列表提供的CNAME值。<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/12.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/img/loading.webp" alt="设置阿里云CDN"></a></p><p>设置阿里云CDN</p><p>待域名解析生效，代表CDN配置成功了。<br>还可以根据自己的需求继续配置CDN策略已达到最佳效果。</p><p><strong>请注意：假如之前给OSS自定义域名配置了HTTPS证书，那么挂上CDN后需要在CDN控制台重新配置HTTPS证书</strong><br>如下图所示配置<br><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/13.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/img/loading.webp" alt="设置阿里云CDN"></a></p><p>设置阿里云CDN</p><p><a href="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/14.png"><img src="https://cdn.jsdelivr.net/gh/AyagawaSeirin/Blog@gh-pages/dev/16/14.png" alt="设置阿里云CDN"></a></p><p>设置阿里云CDN</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总体来说，这个配置过程并不是很困难。对象存储可以用于很多方面，搭建静态网站只是其中的一部分。低廉的价格和高速的访问大大的提升了体验效果。还是值得一试的~</p><p>原文来自 <a href="https://owomoe.net/">皮皮凛の小窝</a>！</p><p><strong>文章作者:</strong> <a href="mailto:undefined">绫川星凛</a></p><p><strong>文章链接:</strong> <a href="https://owomoe.net/dev/16.html">https://owomoe.net/dev/16.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
